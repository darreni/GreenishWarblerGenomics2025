[
  {
    "objectID": "GW_Heterozygosity_Variance.html",
    "href": "GW_Heterozygosity_Variance.html",
    "title": "Greenish Warbler heterozygosity variance analysis",
    "section": "",
    "text": "The scripts, data, and figures shown in this document were used as part of the analysis for the paper listed below, which should be cited as the source of information from this document:\nIrwin, D., S. Bensch, C. Charlebois, G. David, A. Geraldes, S.K. Gupta, B. Harr, P. Holt, J.H. Irwin, V.V. Ivanitskii, I.M. Marova, Y. Niu, S. Seneviratne, A. Singh, Y. Wu, S. Zhang, T.D. Price. 2025. The distribution and dispersal of large haploblocks in a superspecies. Molecular Ecology.\nThis page shows the code used to generate PCA plots for the whole genome (and also for each chromosome, although those aren’t shown in the paper).\nPrior to examining the code on this page, readers should look at GreenishWarblerGenomics2025.qmd (or .html) and GW_Zchromosome_analysis.qmd (or .html), as this current page depends on the code on those pages being run first.",
    "crumbs": [
      "Home",
      "Greenish Warbler heterozygosity variance analysis"
    ]
  },
  {
    "objectID": "GW_Heterozygosity_Variance.html#load-packages",
    "href": "GW_Heterozygosity_Variance.html#load-packages",
    "title": "Greenish Warbler heterozygosity variance analysis",
    "section": "Load packages",
    "text": "Load packages\n\nusing JLD2 # for loading saved data\nusing DataFrames # for storing data as type DataFrame\nusing CairoMakie # for plots\nusing Impute # for imputing missing genotypes\nusing Statistics # for var() function\nusing MultivariateStats # for getting variances from PCA model\nusing CSV # for reading in delimited files\nusing DelimitedFiles # for reading delimited files (the genotypic data)\n\nLoad my custom package GenomicDiversity:\n\nusing GenomicDiversity",
    "crumbs": [
      "Home",
      "Greenish Warbler heterozygosity variance analysis"
    ]
  },
  {
    "objectID": "GW_Heterozygosity_Variance.html#choose-working-directory",
    "href": "GW_Heterozygosity_Variance.html#choose-working-directory",
    "title": "Greenish Warbler heterozygosity variance analysis",
    "section": "Choose working directory",
    "text": "Choose working directory\n\ndataDirectory = \"/Users/darrenirwin/Dropbox/Darren's current work/\"\ncd(dataDirectory)",
    "crumbs": [
      "Home",
      "Greenish Warbler heterozygosity variance analysis"
    ]
  },
  {
    "objectID": "GW_Heterozygosity_Variance.html#load-the-filtered-dataset",
    "href": "GW_Heterozygosity_Variance.html#load-the-filtered-dataset",
    "title": "Greenish Warbler heterozygosity variance analysis",
    "section": "Load the filtered dataset",
    "text": "Load the filtered dataset\nThis dataset was produced through filtering in GreenishWarblerGenomics2025.qmd\n\nbaseName = \"GW_genomics_2022_with_new_genome/GW2022_GBS_012NA_files/GW2022_all4plates.genotypes.SNPs_only.whole_genome\"\ntagName = \".Jan2025.\"\nfilename = string(baseName, tagName, \"ind_SNP_ind_filtered.jld2\")\n# load info into a dictionary:\nd = load(filename)\nif baseName != d[\"baseName\"]\n    println(\"WARNING: baseNames don't match between that defined above and in the saved file\")\nend\nif tagName != d[\"tagName\"]\n    println(\"WARNING: tagNames don't match don't match between that defined above and in the saved file\")\nend\ngenosOnly = d[\"genosOnly_ind_SNP_ind_filtered\"]\nind_with_metadata_indFiltered = d[\"ind_with_metadata_indFiltered\"]\npos_SNP_filtered = d[\"pos_SNP_filtered\"]\nrepoDirectory = d[\"repoDirectory\"]\ndataDirectory = d[\"dataDirectory\"]\nscaffold_info = d[\"scaffold_info\"]\nscaffold_lengths = d[\"scaffold_lengths\"]\nfilenameTextMiddle = d[\"filenameTextMiddle\"]\nmissingGenotypeThreshold = d[\"missingGenotypeThreshold\"]\nfilenameTextEnd = d[\"filenameTextEnd\"]\nchromosomes_to_process =d[\"chromosomes_to_process\"]\nmetadataFile = d[\"metadataFile\"]\nprintln(\"Loaded the filtered data.\")\n\nLoaded the filtered data.\n\n\nAlso define correctNames() function as in main script, to correct some names:\n\nfunction correctNames(metadataColumn)\n        metadataColumn_corrected = replace(metadataColumn, \"GW_Armando_plate1_TTGW05_rep2\" =&gt; \"GW_Armando_plate1_TTGW05r2\",\n        \"GW_Lane5_NA3-3ul\" =&gt; \"GW_Lane5_NA3\",\n        \"GW_Armando_plate1_TTGW_15_05\" =&gt; \"GW_Armando_plate1_TTGW-15-05\",\n        \"GW_Armando_plate1_TTGW_15_07\" =&gt; \"GW_Armando_plate1_TTGW-15-07\",\n        \"GW_Armando_plate1_TTGW_15_08\" =&gt; \"GW_Armando_plate1_TTGW-15-08\",\n        \"GW_Armando_plate1_TTGW_15_09\" =&gt; \"GW_Armando_plate1_TTGW-15-09\",\n        \"GW_Armando_plate1_TTGW_15_01\" =&gt; \"GW_Armando_plate1_TTGW-15-01\",\n        \"GW_Armando_plate1_TTGW_15_02\" =&gt; \"GW_Armando_plate1_TTGW-15-02\",   \n        \"GW_Armando_plate1_TTGW_15_03\" =&gt; \"GW_Armando_plate1_TTGW-15-03\",\n        \"GW_Armando_plate1_TTGW_15_04\" =&gt; \"GW_Armando_plate1_TTGW-15-04\",\n        \"GW_Armando_plate1_TTGW_15_06\" =&gt; \"GW_Armando_plate1_TTGW-15-06\",\n        \"GW_Armando_plate1_TTGW_15_10\" =&gt; \"GW_Armando_plate1_TTGW-15-10\",\n        \"GW_Armando_plate2_TTGW_15_01\" =&gt; \"GW_Armando_plate2_TTGW-15-01\",\n        \"GW_Armando_plate2_TTGW_15_02\" =&gt; \"GW_Armando_plate2_TTGW-15-02\",\n        \"GW_Armando_plate2_TTGW_15_03\" =&gt; \"GW_Armando_plate2_TTGW-15-03\",\n        \"GW_Armando_plate2_TTGW_15_04\" =&gt; \"GW_Armando_plate2_TTGW-15-04\",\n        \"GW_Armando_plate2_TTGW_15_06\" =&gt; \"GW_Armando_plate2_TTGW-15-06\",\n        \"GW_Armando_plate2_TTGW_15_10\" =&gt; \"GW_Armando_plate2_TTGW-15-10\") \nend\n\ncorrectNames (generic function with 1 method)",
    "crumbs": [
      "Home",
      "Greenish Warbler heterozygosity variance analysis"
    ]
  },
  {
    "objectID": "GW_Heterozygosity_Variance.html#replace-the-z-chromosome-snps-with-the-filtered-z-chromosome-snps",
    "href": "GW_Heterozygosity_Variance.html#replace-the-z-chromosome-snps-with-the-filtered-z-chromosome-snps",
    "title": "Greenish Warbler heterozygosity variance analysis",
    "section": "Replace the Z chromosome SNPs with the filtered Z chromosome SNPs",
    "text": "Replace the Z chromosome SNPs with the filtered Z chromosome SNPs\n\n# remove the Z SNPs from the big dataset loaded above:\nselection = (pos_SNP_filtered.chrom .!= \"gwZ\")\npos_SNP_filtered = pos_SNP_filtered[selection, :]\ngenosOnly = genosOnly[:,selection]\n\n# load and add the Z filtered SNPs:\nfilename = string(baseName, tagName, \"chrgwZ_cleaned.notImputed.jld2\")\ngenosOnly_chrgwZ_cleaned = load(filename, \"genotypes_gwZ_SNPfiltered\")\nind_with_metadata_indFiltered_chrgwZ_cleaned = load(filename, \"ind_with_metadata_indFiltered\")\npos_SNP_filtered_chrgwZ_cleaned = load(filename, \"pos_SNP_filtered_region\")\n\nif ind_with_metadata_indFiltered.ind != ind_with_metadata_indFiltered_chrgwZ_cleaned.ind\n    println(\"Warning: the list of individuals in the big file and Z file are not completely identical.\")\nend\n\npos_SNP_filtered = vcat(pos_SNP_filtered, pos_SNP_filtered_chrgwZ_cleaned)\ngenosOnly = hcat(genosOnly, genosOnly_chrgwZ_cleaned)\n\nprintln(\"Replaced the Z chromosome data with the filtered Z data.\")\n\n# copy the sex column so we can use later:\nind_with_metadata_indFiltered.sex = ind_with_metadata_indFiltered_chrgwZ_cleaned.sex\n\nReplaced the Z chromosome data with the filtered Z data.\n\n\n257-element Vector{String}:\n \"M\"\n \"M\"\n \"M\"\n \"M\"\n \"M\"\n \"M\"\n \"M\"\n \"M\"\n \"M\"\n \"M\"\n \"M\"\n \"M\"\n \"M\"\n ⋮\n \"M\"\n \"M\"\n \"M\"\n \"M\"\n \"M\"\n \"F\"\n \"M\"\n \"M\"\n \"F\"\n \"M\"\n \"M\"\n \"M\"",
    "crumbs": [
      "Home",
      "Greenish Warbler heterozygosity variance analysis"
    ]
  },
  {
    "objectID": "GW_Heterozygosity_Variance.html#switch-plot-order-to-ring_km-and-set-nitidus-set-to--2500-km-and-the-siberian-hybrid-set-to-5000-km-plot-order",
    "href": "GW_Heterozygosity_Variance.html#switch-plot-order-to-ring_km-and-set-nitidus-set-to--2500-km-and-the-siberian-hybrid-set-to-5000-km-plot-order",
    "title": "Greenish Warbler heterozygosity variance analysis",
    "section": "switch plot order to ring_km, and set nitidus (set to -2500 km) and the Siberian hybrid (set to 5000 km) plot order:",
    "text": "switch plot order to ring_km, and set nitidus (set to -2500 km) and the Siberian hybrid (set to 5000 km) plot order:\n\nind_with_metadata_indFiltered.original_plot_order = ind_with_metadata_indFiltered.plot_order\nind_with_metadata_indFiltered.plot_order = ind_with_metadata_indFiltered.ring_km\nind_with_metadata_indFiltered.plot_order[ind_with_metadata_indFiltered.Fst_group .== \"nit\"] .= -2500\nind_with_metadata_indFiltered.plot_order[ind_with_metadata_indFiltered.Fst_group .== \"plumb_vir\"] .= 5000\n\n1-element view(::Vector{Float64}, [8]) with eltype Float64:\n 5000.0",
    "crumbs": [
      "Home",
      "Greenish Warbler heterozygosity variance analysis"
    ]
  },
  {
    "objectID": "GW_Heterozygosity_Variance.html#prepare-data-for-genotype-by-individual-plots-and-pca",
    "href": "GW_Heterozygosity_Variance.html#prepare-data-for-genotype-by-individual-plots-and-pca",
    "title": "Greenish Warbler heterozygosity variance analysis",
    "section": "Prepare data for Genotype-by-individual plots and PCA",
    "text": "Prepare data for Genotype-by-individual plots and PCA\nFor missing genotypes, change our code of -1 to missing:\n\ngenosOnly_with_missing = Matrix{Union{Missing, Int16}}(genosOnly)\ngenosOnly_with_missing = replace(genosOnly_with_missing, -1 =&gt; missing)\n\n257×1015750 Matrix{Union{Missing, Int16}}:\n 0  0  0  0  0  1  0  0         0  0  …  0  0  0  0  0  0  0  0  0  0  0  0\n 0  0  0  0  0  0  0  0         0  0     0  0  0  0  0  0  0  0  0  0  0  0\n 0  0  0  0  0  0  0  0         0  0     0  0  0  0  0  0  0  0  0  0  0  0\n 0  0  0  0  0  0  0  0         0  0     0  0  0  0  0  0  0  0  0  0  0  0\n 0  0  0  0  0  0  0  0         0  0     0  0  0  0  0  0  0  0  0  0  0  0\n 0  0  0  0  0  0  0  0         0  0  …  0  0  0  0  0  0  0  0  0  0  0  0\n 0  0  0  0  0  0  0  0         0  0     0  0  0  0  0  0  0  0  0  0  0  0\n 0  0  0  0  0  0  0  0         0  0     0  0  0  0  0  0  0  0  0  0  0  0\n 0  0  0  0  0  0  0  0         0  0     0  0  0  0  0  0  0  0  0  0  0  0\n 0  0  0  0  0  0  0  1         0  0     0  0  0  0  0  0  0  0  0  0  0  0\n 0  0  0  0  0  0  0  0         0  0  …  0  0  0  0  0  0  0  0  0  0  0  0\n 0  0  0  0  0  0  0  0         0  0     0  0  0  0  0  0  0  0  0  0  0  0\n 0  0  0  0  0  0  0  0         0  0     0  0  0  0  0  0  0  0  0  0  0  0\n ⋮              ⋮                     ⋱        ⋮              ⋮           \n 0  0  0  0  0  0  0  0         0  0  …  0  0  0  0  0  0  0  0  0  0  0  0\n 0  0  0  0  0  0  0  0         0  0     0  0  0  0  0  0  0  0  0  0  0  0\n 0  0  0  0  0  0  0  0         0  0     0  0  0  0  0  0  0  0  0  0  0  0\n 0  0  0  0  0  0  0  0         0  0     0  0  0  0  0  0  0  0  0  0  0  0\n 0  0  0  0  0  0  0  0         0  0     0  0  0  0  0  0  0  0  0  0  0  0\n 0  0  0  0  0  0  0   missing  0  0  …  0  0  0  2  0  0  0  0  0  0  0  0\n 0  0  0  0  0  0  0  0         0  0     0  0  0  0  0  0  0  0  0  0  0  0\n 0  0  0  0  0  0  0  0         0  0     0  0  0  0  0  0  0  0  0  0  0  0\n 0  0  0  0  0  0  0  0         0  0     0  0  0  0  0  0  0  0  0  0  0  0\n 0  0  0  0  0  0  0  0         0  0     0  0  0  0  0  0  0  0  0  0  0  0\n 0  0  0  0  0  0  0  0         0  0  …  0  0  0  1  0  0  0  0  0  0  0  0\n 0  0  0  0  0  0  0  0         0  0     0  0  0  0  0  0  0  0  0  0  0  0",
    "crumbs": [
      "Home",
      "Greenish Warbler heterozygosity variance analysis"
    ]
  },
  {
    "objectID": "GW_Heterozygosity_Variance.html#make-list-of-scaffolds-to-plot",
    "href": "GW_Heterozygosity_Variance.html#make-list-of-scaffolds-to-plot",
    "title": "Greenish Warbler heterozygosity variance analysis",
    "section": "Make list of scaffolds to plot:",
    "text": "Make list of scaffolds to plot:\n\nscaffolds_to_plot = \"gw\" .* string.(vcat(1, \"1A\", 2:4, \"4A\", 5:15, 17:28, \"Z\"))\n\n30-element Vector{String}:\n \"gw1\"\n \"gw1A\"\n \"gw2\"\n \"gw3\"\n \"gw4\"\n \"gw4A\"\n \"gw5\"\n \"gw6\"\n \"gw7\"\n \"gw8\"\n \"gw9\"\n \"gw10\"\n \"gw11\"\n ⋮\n \"gw18\"\n \"gw19\"\n \"gw20\"\n \"gw21\"\n \"gw22\"\n \"gw23\"\n \"gw24\"\n \"gw25\"\n \"gw26\"\n \"gw27\"\n \"gw28\"\n \"gwZ\"",
    "crumbs": [
      "Home",
      "Greenish Warbler heterozygosity variance analysis"
    ]
  },
  {
    "objectID": "GW_Heterozygosity_Variance.html#determine-number-of-snps-in-the-chromosomes-above",
    "href": "GW_Heterozygosity_Variance.html#determine-number-of-snps-in-the-chromosomes-above",
    "title": "Greenish Warbler heterozygosity variance analysis",
    "section": "Determine number of SNPs in the chromosomes above",
    "text": "Determine number of SNPs in the chromosomes above\n\nsum(map(in(scaffolds_to_plot), pos_SNP_filtered.chrom))\n\n1003924\n\n\nThis reports that 1003924 SNPs are within the listed chromosomes. (Good because that matches the number as determined in GW_PCAplots.qmd)",
    "crumbs": [
      "Home",
      "Greenish Warbler heterozygosity variance analysis"
    ]
  },
  {
    "objectID": "GW_Heterozygosity_Variance.html#choose-groups-and-colors",
    "href": "GW_Heterozygosity_Variance.html#choose-groups-and-colors",
    "title": "Greenish Warbler heterozygosity variance analysis",
    "section": "Choose groups and colors",
    "text": "Choose groups and colors\n\ngroups_to_plot_PCA = [\"vir\",\"vir_S\",\"nit\", \"lud_PK\", \"lud_KS\", \"lud_central\", \"lud_Sath\", \"lud_ML\",\"troch_west\",\"troch_LN\",\"troch_EM\",\"obs\",\"plumb_BJ\",\"plumb\",\"plumb_vir\"]\ngroup_colors_PCA = [\"blue\",\"turquoise1\",\"grey\",\"seagreen4\",\"seagreen3\",\"seagreen2\",\"olivedrab3\",\"olivedrab2\",\"olivedrab1\",\"yellow\",\"gold\",\"orange\",\"pink\",\"red\",\"purple\"];",
    "crumbs": [
      "Home",
      "Greenish Warbler heterozygosity variance analysis"
    ]
  },
  {
    "objectID": "GW_Heterozygosity_Variance.html#show-windowed-heterozygosity-for-individuals",
    "href": "GW_Heterozygosity_Variance.html#show-windowed-heterozygosity-for-individuals",
    "title": "Greenish Warbler heterozygosity variance analysis",
    "section": "Show windowed heterozygosity for individuals",
    "text": "Show windowed heterozygosity for individuals\n\n# option to select a subset of individuals\nfilterGroups = false  # false means include all individuals\n\ngroupsToInclude = [\"lud_PK\", \"lud_KS\", \"lud_central\", \"lud_Sath\", \"lud_ML\",\"troch_west\"]\nnumIndsToPlot = [1000, 1000, 1000, 1000, 1000, 1000]\n\nif filterGroups\n    genosOnly_included, ind_with_metadata_included = limitIndsToPlot(groupsToInclude, numIndsToPlot, genosOnly_with_missing, ind_with_metadata_indFiltered)\nelse\n    genosOnly_included = genosOnly_with_missing\n    ind_with_metadata_included = ind_with_metadata_indFiltered\nend\n\nchr = \"gw15\"\nwindowSize = 500\nloci_selection = (pos_SNP_filtered.chrom .== chr)\npos_region = pos_SNP_filtered[loci_selection, :]\ngenotypes_region = genosOnly_included[:, loci_selection]\n\nwindowedPos, windowedIndHet = getWindowedIndHet(genotypes_region, pos_region, windowSize)\n\nplotTitle = string(\"Windowed heterozygosity of \", size(windowedIndHet, 1), \" individuals\")\ntitleSize = 24\nxLabelText = string(\"Location on scaffold \", chr)\nyLabelText = \"Heterozygosity\"\nlabelSize = 24\nf = CairoMakie.Figure()\nax = Axis(f[1, 1],\n    title=plotTitle, titlesize=titleSize,\n    xlabel=xLabelText, xlabelsize=labelSize,\n    ylabel=yLabelText, ylabelsize=labelSize)\nlines!(windowedPos, windowedIndHet[1, :])\nfor i in 2:size(windowedIndHet, 1)\n    lines!(windowedPos, windowedIndHet[i, :])\nend\nmeanPerWindow_windowedIndHet = sum(windowedIndHet, dims=1) ./ size(windowedIndHet, 1)\nlines!(windowedPos, vec(meanPerWindow_windowedIndHet), linewidth=10, color=:red)\ndisplay(f)\n\nwindowedIndHet_standardized = standardizeIndHet(windowedIndHet)\n\nplotTitle = string(\"Standardized heterozygosity of \", size(windowedIndHet, 1), \" individuals\")\ntitleSize = 24\nxLabelText = string(\"Location on scaffold \", chr)\nyLabelText = \"Standardized heterozygosity\"\nlabelSize = 24\ng = CairoMakie.Figure()\nax = Axis(g[1, 1],\n    title=plotTitle, titlesize=titleSize,\n    xlabel=xLabelText, xlabelsize=labelSize,\n    ylabel=yLabelText, ylabelsize=labelSize)\nfor i in 1:size(windowedIndHet_standardized, 1)\n    lines!(windowedPos, windowedIndHet_standardized[i, :])\nend\n#lines!(windowedPos, windowedIndHet[21,:], linewidth = 10, color = :red)\ndisplay(g)\n\n# Now graph the variance in standardized heterozygosity\n\nwindowedViSHet = getWindowedViSHet(windowedIndHet_standardized)\n\nplotTitle = string(\"Var. in Stand. Het. (ViSHet) among \", size(windowedIndHet, 1), \" individuals\")\ntitleSize = 18\nxLabelText = string(\"Location on scaffold \", chr)\nyLabelText = \"ViSHet\"\nlabelSize = 18\nh = CairoMakie.Figure()\nax = Axis(h[1, 1],\n    title=plotTitle, titlesize=titleSize,\n    xlabel=xLabelText, xlabelsize=labelSize,\n    ylabel=yLabelText, ylabelsize=labelSize)\nlines!(windowedPos, windowedViSHet)\ndisplay(h)\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\nCairoMakie.Screen{IMAGE}",
    "crumbs": [
      "Home",
      "Greenish Warbler heterozygosity variance analysis"
    ]
  },
  {
    "objectID": "GW_Heterozygosity_Variance.html#make-heterozygosity-variance-plot-for-whole-genome",
    "href": "GW_Heterozygosity_Variance.html#make-heterozygosity-variance-plot-for-whole-genome",
    "title": "Greenish Warbler heterozygosity variance analysis",
    "section": "Make heterozygosity variance plot for whole genome:",
    "text": "Make heterozygosity variance plot for whole genome:\n\n# option to select a subset of individuals\nfilterGroups = false  # false means include all individuals\n\ngroupsToInclude = [\"vir\"]\nnumIndsToPlot = [1000]\n\nif filterGroups\n    genosOnly_included, ind_with_metadata_included = limitIndsToPlot(groupsToInclude, numIndsToPlot, genosOnly_with_missing, ind_with_metadata_indFiltered)\nelse\n    genosOnly_included = genosOnly_with_missing\n    ind_with_metadata_included = ind_with_metadata_indFiltered\nend\n\nscaffolds_for_ViSHet = scaffolds_to_plot\n#initialize data structures\nwindowed_pos_all = DataFrame(chrom = String[], mean_position = Float64[], first_position = Int[], last_position = Int[])\nwindowed_ViSHet_all = Vector{Float32}(undef, 0)\nfor chrom in scaffolds_for_ViSHet\n    regionText = string(\"chr\", chrom)\n    loci_selection = (pos_SNP_filtered.chrom .== chrom)\n    pos_region = pos_SNP_filtered[loci_selection, :]\n    genotypes_region = genosOnly_included[:, loci_selection]\n    if chrom == \"gwZ\" #include only males (because females have only one Z)\n        genotypes_region_males = genotypes_region[ind_with_metadata_included.sex .== \"M\", :]\n        windowedPos, windowedIndHet = getWindowedIndHet(genotypes_region_males, pos_region, windowSize)\n    else # for all other chromosomes, include all individuals\n        windowedPos, windowedIndHet = getWindowedIndHet(genotypes_region, pos_region, windowSize)\n    end\n    windowBoundaries = getWindowBoundaries(pos_region.position, windowSize)\n    windowedIndHet_standardized = standardizeIndHet(windowedIndHet)\n    windowed_ViSHet_scaffold = getWindowedViSHet(windowedIndHet_standardized)\n    windowed_pos_chrom = DataFrame(chrom = repeat([chrom], length(windowedPos)), mean_position = windowedPos, first_position = windowBoundaries[:,1], last_position = windowBoundaries[:,2])\n    windowed_pos_all = vcat(windowed_pos_all, windowed_pos_chrom)\n    windowed_ViSHet_all = [windowed_ViSHet_all; windowed_ViSHet_scaffold]\nend\n\n# Quick test plot (overlapping all chromosomes, so not good)\n# plot(windowed_pos_all.mean_position, windowed_ViSHet_all)",
    "crumbs": [
      "Home",
      "Greenish Warbler heterozygosity variance analysis"
    ]
  },
  {
    "objectID": "GW_Heterozygosity_Variance.html#identify-haploblock-regions-as-those-that-have-high-vishet",
    "href": "GW_Heterozygosity_Variance.html#identify-haploblock-regions-as-those-that-have-high-vishet",
    "title": "Greenish Warbler heterozygosity variance analysis",
    "section": "Identify “haploblock regions” as those that have high ViSHet",
    "text": "Identify “haploblock regions” as those that have high ViSHet\n\nthreshold_ViSHet = 0.4\nselection = windowed_ViSHet_all .&gt;= threshold_ViSHet\nwindowed_pos_all.high_ViSHet = selection # adds true/false column to dataframe indicating high ViSHet windows\n\n# Make list of contiguous high ViSHet region:\n\nhighViSHetRegions = DataFrame(regionChrom = String[], regionStart = Int[], regionEnd = Int[])\ni = 1\nlastWindow = nrow(windowed_pos_all)\nwhile i &lt;= lastWindow # eachindex(windowed_pos_all[:,1])\n    if windowed_pos_all.high_ViSHet[i] == true\n        regionChrom = windowed_pos_all.chrom[i]\n        regionStart = windowed_pos_all.first_position[i]\n        regionEnd = windowed_pos_all.last_position[i]\n        # check whether contiguous with next\n        next = 1\n        while i + next &lt;= lastWindow && windowed_pos_all.chrom[i + next] == regionChrom\n            if windowed_pos_all.high_ViSHet[i + next] == true\n                regionEnd = windowed_pos_all.last_position[i + next]\n                next += 1\n            else\n                break\n            end\n        end\n        highViSHetRegions = push!(highViSHetRegions, [regionChrom, regionStart, regionEnd])\n        i = i + next + 1\n    else\n        i = i + 1\n    end \n    i\nend\nhighViSHetRegions\n\n39×3 DataFrame14 rows omitted\n\n\n\nRow\nregionChrom\nregionStart\nregionEnd\n\n\n\nString\nInt64\nInt64\n\n\n\n\n1\ngw1\n15689747\n23478124\n\n\n2\ngw1A\n4674\n3771263\n\n\n3\ngw1A\n23592559\n30616953\n\n\n4\ngw2\n54537375\n59262130\n\n\n5\ngw2\n60234161\n61533451\n\n\n6\ngw3\n101192949\n103495514\n\n\n7\ngw3\n104554714\n108279595\n\n\n8\ngw4\n5295912\n5438270\n\n\n9\ngw4\n14837641\n16117455\n\n\n10\ngw4\n20930552\n23610800\n\n\n11\ngw4A\n379058\n730094\n\n\n12\ngw5\n10095304\n10956815\n\n\n13\ngw6\n34584054\n35259663\n\n\n⋮\n⋮\n⋮\n⋮\n\n\n28\ngw19\n43362\n1006242\n\n\n29\ngw20\n27354\n721651\n\n\n30\ngw20\n5852254\n6671670\n\n\n31\ngw21\n3275121\n3731689\n\n\n32\ngw22\n5214430\n5775824\n\n\n33\ngw23\n4135459\n4774426\n\n\n34\ngw24\n3468239\n4001782\n\n\n35\ngw25\n5185626\n5473966\n\n\n36\ngw26\n4153299\n5549635\n\n\n37\ngw27\n41621\n541081\n\n\n38\ngw28\n1822776\n2522648\n\n\n39\ngwZ\n68372986\n73749599",
    "crumbs": [
      "Home",
      "Greenish Warbler heterozygosity variance analysis"
    ]
  },
  {
    "objectID": "GW_Heterozygosity_Variance.html#determine-fraction-of-genome-that-has-high-vishet",
    "href": "GW_Heterozygosity_Variance.html#determine-fraction-of-genome-that-has-high-vishet",
    "title": "Greenish Warbler heterozygosity variance analysis",
    "section": "Determine fraction of genome that has high ViSHet",
    "text": "Determine fraction of genome that has high ViSHet\n\n# get total length of high ViSHet regions \nsum_highViSHetRegions = sum(highViSHetRegions.regionEnd .- highViSHetRegions.regionStart)\n\n# get total lengths of all scaffolds\nsum_scaffold_lengths = 0 \nfor scaffold_name in scaffolds_to_plot\n    println(scaffold_name)\n    sum_scaffold_lengths += scaffold_lengths[scaffold_name]\nend\nsum_scaffold_lengths\n\n# calculate percent of genome in high ViSHet regions\npercentGenomeHighViSHet = 100 * sum_highViSHetRegions / sum_scaffold_lengths\nprintln(\"The percent of the genome in high ViSHet regions is $percentGenomeHighViSHet\")\n\ngw1\ngw1A\ngw2\ngw3\ngw4\ngw4A\ngw5\ngw6\ngw7\ngw8\ngw9\ngw10\ngw11\ngw12\ngw13\ngw14\ngw15\ngw17\ngw18\ngw19\ngw20\ngw21\ngw22\ngw23\ngw24\ngw25\ngw26\ngw27\ngw28\ngwZ\nThe percent of the genome in high ViSHet regions is 5.799030328440733",
    "crumbs": [
      "Home",
      "Greenish Warbler heterozygosity variance analysis"
    ]
  },
  {
    "objectID": "GW_Heterozygosity_Variance.html#plot-haploblock-regions-for-whole-genome",
    "href": "GW_Heterozygosity_Variance.html#plot-haploblock-regions-for-whole-genome",
    "title": "Greenish Warbler heterozygosity variance analysis",
    "section": "Plot “haploblock regions” for whole genome",
    "text": "Plot “haploblock regions” for whole genome\n\n#= \"\"\"\n    plotGenomeViSHet(scaffolds_to_plot, \n                    windowed_ViSHet_all,\n                    windowed_pos_all;\n                    fillColor = \"purple\",\n                    lineTransparency = 0.8,\n                    fillTransparency = 0.2,\n                    figureSize = (1200, 1200),\n                    plotRegions = false,\n                    regionsToPlot = [],\n                    regionColor = \"red\")\n\nPlot windowed Variance in Standardized Heterozygosity (ViSHet) along multiple scaffolds.\n\n​# Arguments\n- `scaffolds_to_plot`: a vector of the scaffold names to include in the plot.\n- `windowed_ViSHet_all`: a vector of ViSHet values for windows of the genome.\n- `windowed_pos_all`: dataframe containing genomic locations of windows (must have columns `chrom` and `mean_position`).\n- `fillColor` (optional): the color for the lines and fill (default `\"purple\"`).\n- `lineTransparency` (optional): transparency of the lines.\n- `fillTransparency` (optional): transparency of the fill color.\n- `figureSize` (optional): size of the figure (height, width).\n- `plotRegions` (optional): choose `true` to highlight regions.\n- `regionsToPlot` (optional): a DataFrame with three columns: `regionChrom` containing names of scaffolds, `regionStart` and `regionEnd` giving start and end of regions to highlight.\n- `regionColor` (optional): the color for the highlighted regions.\n\n# Notes\n- Returns the figure.\n\"\"\"\nfunction plotGenomeViSHet(scaffolds_to_plot, \n                            windowed_ViSHet_all,\n                            windowed_pos_all;\n                            fillColor = \"purple\",\n                            lineTransparency = 0.8,\n                            fillTransparency = 0.2,\n                            figureSize = (1200, 1200),\n                            plotRegions = false,\n                            regionsToPlot = [],\n                            regionColor = \"red\")\n    \n    # get sizes of chromosomes (note this actually isn't the true length, just the mean position of the rightmost window):\n    scaffoldLengths = repeat([-1], length(scaffolds_to_plot))   # vector of Int64\n    for i in 1:length(scaffolds_to_plot)\n        selection = windowed_pos_all.chrom .== scaffolds_to_plot[i]\n        if sum(selection) == 0\n            scaffoldLengths[i] = 0\n        else\n            scaffoldLengths[i] = round(Int, maximum(windowed_pos_all.mean_position[selection]))\n        end\n    end\n\n    # my plan is to use the layout feature of Makie to make one axis per row, and then plot\n    # multiple scaffolds to each row\n\n    scaffoldPlottedAlready = falses(length(scaffolds_to_plot))\n    bpPerRow = 200_000_000\n    bpGapBetweenScaffolds = 10_000_000\n    scaffoldInRow = Vector{Vector{String}}() # declare a vector of vectors to store the chromosome names per row\n    scaffoldBpStartInRow = Vector{Vector{Int}}()\n    row = 1\n\n    while sum(scaffoldPlottedAlready .== false) &gt; 0  # repeat until all chr have a row to be plotted in\n        bpStart = 0\n        remainingRowLength = bpPerRow\n        push!(scaffoldInRow, []) # initialize an empty vector for the next row\n        push!(scaffoldBpStartInRow, []) # initialize an empty vector for the next row\n        placeInRow = 1\n        # look through chromosomes and find some to go in this row\n        for i in 1:length(scaffolds_to_plot)\n            # if not plotted and short enough, add to row:\n            if scaffoldPlottedAlready[i] .== false .&& scaffoldLengths[i] .&lt;= remainingRowLength\n                push!(scaffoldInRow[row], scaffolds_to_plot[i])\n                push!(scaffoldBpStartInRow[row], bpStart)\n                remainingRowLength = remainingRowLength - scaffoldLengths[i] - bpGapBetweenScaffolds\n                scaffoldPlottedAlready[i] = true\n                placeInRow += 1\n                bpStart = bpStart + scaffoldLengths[i] + bpGapBetweenScaffolds\n            end \n        end\n        row += 1\n    end\n    println(scaffoldInRow)\n\n    # the above works. I have the scaffolds arranged for plotting.\n\n    # Plot in the order defined above\n    f = CairoMakie.Figure(size=figureSize)\n    numRows = length(scaffoldInRow)\n    # make one axis object per row:\n    axs = [Axis(f[i, 1], limits=(0, bpPerRow,\n            -0.45, 2.0), ylabel = \"ViSHet\") for i in 1:numRows]\n    for i in 1:numRows\n        hidexdecorations!(axs[i]) #hide background lattice and axis labels\n        hidespines!(axs[i], :t, :r, :b) # hide box around plot\n    end\n\n    for rowNum in 1:numRows\n        numScaffoldsInRow = length(scaffoldInRow[rowNum])\n        nextPlotShiftBP = 0\n        for orderNum in 1:numScaffoldsInRow \n            scaffoldName = scaffoldInRow[rowNum][orderNum]\n            plotBpLength = scaffoldLengths[findfirst(scaffolds_to_plot .== scaffoldName)]\n            # select one scaffold from the whole genome:\n            selection = windowed_pos_all.chrom .== scaffoldName \n            windowed_pos_selected = view(windowed_pos_all.mean_position, selection)\n            windowed_ViSHet_selected = view(windowed_ViSHet_all, selection)\n            if length(windowed_pos_selected) &gt; 0  # only plot if there is data for that scaffold        \n                text!(axs[rowNum], scaffoldBpStartInRow[rowNum][orderNum] + 0.005bpPerRow, -0.2; text=scaffoldName, align=(:left, :center), fontsize=20)\n                xx = vcat(first(windowed_pos_selected), windowed_pos_selected, last(windowed_pos_selected)) .+ scaffoldBpStartInRow[rowNum][orderNum]\n                yy = vcat(0, windowed_ViSHet_selected, 0)\n                poly!(axs[rowNum], Point2f.(xx, yy), color = (fillColor, fillTransparency), strokecolor = (fillColor, lineTransparency), strokewidth = 1)\n                # if indicating regions (e.g. that have high ViSHet)\n                if plotRegions\n                    regionsToPlot_thisScaffold = regionsToPlot[regionsToPlot.regionChrom .== scaffoldName, :]\n                    for i in eachindex(regionsToPlot_thisScaffold.regionStart)\n                        xValues = [regionsToPlot_thisScaffold.regionStart[i], regionsToPlot_thisScaffold.regionEnd[i]] .+ scaffoldBpStartInRow[rowNum][orderNum]\n                        yValues = [0.05, 0.05]\n                        lines!(axs[rowNum], xValues, yValues, color=regionColor, linewidth=10)\n                    end\n                end\n            end\n        end\n    end\n    display(f)\n    return f\nend\n =#\n\nfig2 = plotGenomeViSHet(scaffolds_to_plot, \n                        windowed_ViSHet_all,\n                        windowed_pos_all;\n                        fillColor = \"purple\",\n                        lineTransparency = 0.8,\n                        fillTransparency = 0.2,\n                        figureSize=(1200, 1200),\n                        plotRegions = true,\n                        regionsToPlot = highViSHetRegions,\n                        regionColor = \"magenta\")\nif false  # set to true to save plot\n    filename = \"Figure2_ViSHet_allGenome_fromJulia.png\"\n    save(filename, fig2, px_per_unit = 2.0)\n    println(\"Saved \", filename)\nend \n\n[[\"gw1\", \"gw4A\", \"gw6\"], [\"gw1A\", \"gw4\", \"gw9\"], [\"gw2\", \"gw8\"], [\"gw3\", \"gw5\"], [\"gw7\", \"gw10\", \"gw11\", \"gw12\", \"gw13\", \"gw14\"], [\"gw15\", \"gw17\", \"gw18\", \"gw19\", \"gw20\", \"gw21\", \"gw22\", \"gw23\", \"gw24\", \"gw25\"], [\"gw26\", \"gw27\", \"gw28\", \"gwZ\"]]\n\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238",
    "crumbs": [
      "Home",
      "Greenish Warbler heterozygosity variance analysis"
    ]
  },
  {
    "objectID": "GW_Heterozygosity_Variance.html#make-a-pca-based-on-all-non-lhbrs-that-is-outside-of-the-identified-large-haploblock-regions",
    "href": "GW_Heterozygosity_Variance.html#make-a-pca-based-on-all-non-lhbrs-that-is-outside-of-the-identified-large-haploblock-regions",
    "title": "Greenish Warbler heterozygosity variance analysis",
    "section": "Make a PCA based on all non-LHBRs (that is, outside of the identified Large HaploBlock Regions):",
    "text": "Make a PCA based on all non-LHBRs (that is, outside of the identified Large HaploBlock Regions):\n\nFirst remove the LHBR regions\n\n# cycle through the LHBRs, determining the SNPs within each to remove from the dataset:\nlociToRemove = fill(false, nrow(pos_SNP_filtered))\nfor i in eachrow(highViSHetRegions) \n    # display(i.regionChrom)\n    # display(i.regionStart)\n    lociWithinThisLHBR = (pos_SNP_filtered.chrom .== i.regionChrom) .&& \n                    (pos_SNP_filtered.position .&gt;= i.regionStart) .&&\n                    (pos_SNP_filtered.position .&lt;= i.regionEnd)\n    lociToRemove = lociToRemove .|| lociWithinThisLHBR\nend\n# now actually remove them:\ngenosOnly_included_nonLHBR = genosOnly_included[:, .!lociToRemove]\npos_SNP_filtered_nonLHBR = pos_SNP_filtered[.!lociToRemove, :]\n\n969250×2 DataFrame969225 rows omitted\n\n\n\nRow\nchrom\nposition\n\n\n\nString\nInt64\n\n\n\n\n1\ngws103\n3058517\n\n\n2\ngws103\n3058520\n\n\n3\ngws103\n3058521\n\n\n4\ngws103\n3058526\n\n\n5\ngws103\n3058528\n\n\n6\ngws103\n3058535\n\n\n7\ngws103\n3058551\n\n\n8\ngws103\n3058562\n\n\n9\ngws103\n3058566\n\n\n10\ngws103\n3058573\n\n\n11\ngws103\n3058593\n\n\n12\ngws103\n3058594\n\n\n13\ngws103\n3058597\n\n\n⋮\n⋮\n⋮\n\n\n969239\ngwZ\n89574744\n\n\n969240\ngwZ\n89574749\n\n\n969241\ngwZ\n89574762\n\n\n969242\ngwZ\n89574774\n\n\n969243\ngwZ\n89574793\n\n\n969244\ngwZ\n89574795\n\n\n969245\ngwZ\n89574814\n\n\n969246\ngwZ\n89574819\n\n\n969247\ngwZ\n89574831\n\n\n969248\ngwZ\n89574832\n\n\n969249\ngwZ\n89574836\n\n\n969250\ngwZ\n89574838\n\n\n\n\n\n\n\n\nMake list of scaffolds to include in the whole-genome non_LHBR PCA:\n\nchromosomes_to_include = \"gw\" .* string.(vcat(28:-1:17, 15:-1:1))\npush!(chromosomes_to_include, \"gw1A\", \"gw4A\", \"gwZ\")  # add two other scaffolds\n\n30-element Vector{String}:\n \"gw28\"\n \"gw27\"\n \"gw26\"\n \"gw25\"\n \"gw24\"\n \"gw23\"\n \"gw22\"\n \"gw21\"\n \"gw20\"\n \"gw19\"\n \"gw18\"\n \"gw17\"\n \"gw15\"\n ⋮\n \"gw9\"\n \"gw8\"\n \"gw7\"\n \"gw6\"\n \"gw5\"\n \"gw4\"\n \"gw3\"\n \"gw2\"\n \"gw1\"\n \"gw1A\"\n \"gw4A\"\n \"gwZ\"\n\n\n\n\nImputation using KNN\nDid this on 11Jan2025 and saved files, so inactivated this cell for now (can take up to several minutes for each big scaffold):\nfor i in eachindex(chromosomes_to_include)\n    chrom = chromosomes_to_include[i]\n    regionText = string(\"chr\", chrom, \"nonLHBR\") # this is where \"nonLHBR will be incorporated in file name\"\n    loci_selection = (pos_SNP_filtered_nonLHBR.chrom .== chrom)\n    pos_SNP_filtered_nonLHBR_region = pos_SNP_filtered_nonLHBR[loci_selection,:]\n    genosOnly_nonLHBR_region_for_imputing = Matrix{Union{Missing, Float32}}(genosOnly_included_nonLHBR[:,loci_selection])\n    @time imputed_genos = Impute.knn(genosOnly_nonLHBR_region_for_imputing; dims = :rows)\n    filename = string(baseName, tagName, regionText, \".KNNimputedMissing.jld2\")\n    jldsave(filename; imputed_genos, ind_with_metadata_indFiltered, pos_SNP_filtered_nonLHBR_region)\n    println(string(regionText, \": Saved real and imputed genotypes for non_LHBR parts of genome, for \", size(pos_SNP_filtered_nonLHBR_region, 1),\" SNPs and \", size(genosOnly_nonLHBR_region_for_imputing, 1),\" filtered individuals, in file $filename\"))\nend\nLoad saved imputed data for each chromosome (the non-LHBR part):\n\n# initialize data structures\ngenos_imputed_loaded = Matrix{Union{Missing, Float32}}(undef, nrow(ind_with_metadata_indFiltered), 0)\npos_SNP_loaded = DataFrame(chrom = String[], position = Int64[])\nfor i in eachindex(chromosomes_to_include)\n    chrom = chromosomes_to_include[i]\n    regionText = string(\"chr\", chrom, \"nonLHBR\")\n    filename = string(baseName, tagName, regionText, \".KNNimputedMissing.jld2\")\n    imputed_genos_one_chr = load(filename, \"imputed_genos\")\n    genos_imputed_loaded = hcat(genos_imputed_loaded, imputed_genos_one_chr)\n    if ind_with_metadata_indFiltered.ind != load(filename, \"ind_with_metadata_indFiltered\")[:, :ind]\n        println(\"\"\"Warning: \"ind\" columns in loaded data and memory data don't match.\"\"\")\n    end\n    pos_SNP_filtered_region = load(filename, \"pos_SNP_filtered_nonLHBR_region\")\n    pos_SNP_loaded = vcat(pos_SNP_loaded, pos_SNP_filtered_region)\n    println(string(\"Loaded \",filename))\n    println(string(regionText, \": \", size(imputed_genos_one_chr,2), \" SNPs from \", size(imputed_genos_one_chr,1), \" individuals\"))\nend\n\nLoaded GW_genomics_2022_with_new_genome/GW2022_GBS_012NA_files/GW2022_all4plates.genotypes.SNPs_only.whole_genome.Jan2025.chrgw28nonLHBR.KNNimputedMissing.jld2\nchrgw28nonLHBR: 10180 SNPs from 257 individuals\nLoaded GW_genomics_2022_with_new_genome/GW2022_GBS_012NA_files/GW2022_all4plates.genotypes.SNPs_only.whole_genome.Jan2025.chrgw27nonLHBR.KNNimputedMissing.jld2\nchrgw27nonLHBR: 9184 SNPs from 257 individuals\nLoaded GW_genomics_2022_with_new_genome/GW2022_GBS_012NA_files/GW2022_all4plates.genotypes.SNPs_only.whole_genome.Jan2025.chrgw26nonLHBR.KNNimputedMissing.jld2\nchrgw26nonLHBR: 11803 SNPs from 257 individuals\nLoaded GW_genomics_2022_with_new_genome/GW2022_GBS_012NA_files/GW2022_all4plates.genotypes.SNPs_only.whole_genome.Jan2025.chrgw25nonLHBR.KNNimputedMissing.jld2\nchrgw25nonLHBR: 3294 SNPs from 257 individuals\nLoaded GW_genomics_2022_with_new_genome/GW2022_GBS_012NA_files/GW2022_all4plates.genotypes.SNPs_only.whole_genome.Jan2025.chrgw24nonLHBR.KNNimputedMissing.jld2\nchrgw24nonLHBR: 13321 SNPs from 257 individuals\nLoaded GW_genomics_2022_with_new_genome/GW2022_GBS_012NA_files/GW2022_all4plates.genotypes.SNPs_only.whole_genome.Jan2025.chrgw23nonLHBR.KNNimputedMissing.jld2\nchrgw23nonLHBR: 12949 SNPs from 257 individuals\nLoaded GW_genomics_2022_with_new_genome/GW2022_GBS_012NA_files/GW2022_all4plates.genotypes.SNPs_only.whole_genome.Jan2025.chrgw22nonLHBR.KNNimputedMissing.jld2\nchrgw22nonLHBR: 4973 SNPs from 257 individuals\nLoaded GW_genomics_2022_with_new_genome/GW2022_GBS_012NA_files/GW2022_all4plates.genotypes.SNPs_only.whole_genome.Jan2025.chrgw21nonLHBR.KNNimputedMissing.jld2\nchrgw21nonLHBR: 12821 SNPs from 257 individuals\nLoaded GW_genomics_2022_with_new_genome/GW2022_GBS_012NA_files/GW2022_all4plates.genotypes.SNPs_only.whole_genome.Jan2025.chrgw20nonLHBR.KNNimputedMissing.jld2\nchrgw20nonLHBR: 30239 SNPs from 257 individuals\nLoaded GW_genomics_2022_with_new_genome/GW2022_GBS_012NA_files/GW2022_all4plates.genotypes.SNPs_only.whole_genome.Jan2025.chrgw19nonLHBR.KNNimputedMissing.jld2\nchrgw19nonLHBR: 23914 SNPs from 257 individuals\nLoaded GW_genomics_2022_with_new_genome/GW2022_GBS_012NA_files/GW2022_all4plates.genotypes.SNPs_only.whole_genome.Jan2025.chrgw18nonLHBR.KNNimputedMissing.jld2\nchrgw18nonLHBR: 17359 SNPs from 257 individuals\nLoaded GW_genomics_2022_with_new_genome/GW2022_GBS_012NA_files/GW2022_all4plates.genotypes.SNPs_only.whole_genome.Jan2025.chrgw17nonLHBR.KNNimputedMissing.jld2\nchrgw17nonLHBR: 24313 SNPs from 257 individuals\nLoaded GW_genomics_2022_with_new_genome/GW2022_GBS_012NA_files/GW2022_all4plates.genotypes.SNPs_only.whole_genome.Jan2025.chrgw15nonLHBR.KNNimputedMissing.jld2\nchrgw15nonLHBR: 25517 SNPs from 257 individuals\nLoaded GW_genomics_2022_with_new_genome/GW2022_GBS_012NA_files/GW2022_all4plates.genotypes.SNPs_only.whole_genome.Jan2025.chrgw14nonLHBR.KNNimputedMissing.jld2\nchrgw14nonLHBR: 28469 SNPs from 257 individuals\nLoaded GW_genomics_2022_with_new_genome/GW2022_GBS_012NA_files/GW2022_all4plates.genotypes.SNPs_only.whole_genome.Jan2025.chrgw13nonLHBR.KNNimputedMissing.jld2\nchrgw13nonLHBR: 30543 SNPs from 257 individuals\nLoaded GW_genomics_2022_with_new_genome/GW2022_GBS_012NA_files/GW2022_all4plates.genotypes.SNPs_only.whole_genome.Jan2025.chrgw12nonLHBR.KNNimputedMissing.jld2\nchrgw12nonLHBR: 31794 SNPs from 257 individuals\nLoaded GW_genomics_2022_with_new_genome/GW2022_GBS_012NA_files/GW2022_all4plates.genotypes.SNPs_only.whole_genome.Jan2025.chrgw11nonLHBR.KNNimputedMissing.jld2\nchrgw11nonLHBR: 27183 SNPs from 257 individuals\nLoaded GW_genomics_2022_with_new_genome/GW2022_GBS_012NA_files/GW2022_all4plates.genotypes.SNPs_only.whole_genome.Jan2025.chrgw10nonLHBR.KNNimputedMissing.jld2\nchrgw10nonLHBR: 26462 SNPs from 257 individuals\nLoaded GW_genomics_2022_with_new_genome/GW2022_GBS_012NA_files/GW2022_all4plates.genotypes.SNPs_only.whole_genome.Jan2025.chrgw9nonLHBR.KNNimputedMissing.jld2\nchrgw9nonLHBR: 37680 SNPs from 257 individuals\nLoaded GW_genomics_2022_with_new_genome/GW2022_GBS_012NA_files/GW2022_all4plates.genotypes.SNPs_only.whole_genome.Jan2025.chrgw8nonLHBR.KNNimputedMissing.jld2\nchrgw8nonLHBR: 37318 SNPs from 257 individuals\nLoaded GW_genomics_2022_with_new_genome/GW2022_GBS_012NA_files/GW2022_all4plates.genotypes.SNPs_only.whole_genome.Jan2025.chrgw7nonLHBR.KNNimputedMissing.jld2\nchrgw7nonLHBR: 35575 SNPs from 257 individuals\nLoaded GW_genomics_2022_with_new_genome/GW2022_GBS_012NA_files/GW2022_all4plates.genotypes.SNPs_only.whole_genome.Jan2025.chrgw6nonLHBR.KNNimputedMissing.jld2\nchrgw6nonLHBR: 39675 SNPs from 257 individuals\nLoaded GW_genomics_2022_with_new_genome/GW2022_GBS_012NA_files/GW2022_all4plates.genotypes.SNPs_only.whole_genome.Jan2025.chrgw5nonLHBR.KNNimputedMissing.jld2\nchrgw5nonLHBR: 54829 SNPs from 257 individuals\nLoaded GW_genomics_2022_with_new_genome/GW2022_GBS_012NA_files/GW2022_all4plates.genotypes.SNPs_only.whole_genome.Jan2025.chrgw4nonLHBR.KNNimputedMissing.jld2\nchrgw4nonLHBR: 47980 SNPs from 257 individuals\nLoaded GW_genomics_2022_with_new_genome/GW2022_GBS_012NA_files/GW2022_all4plates.genotypes.SNPs_only.whole_genome.Jan2025.chrgw3nonLHBR.KNNimputedMissing.jld2\nchrgw3nonLHBR: 79372 SNPs from 257 individuals\nLoaded GW_genomics_2022_with_new_genome/GW2022_GBS_012NA_files/GW2022_all4plates.genotypes.SNPs_only.whole_genome.Jan2025.chrgw2nonLHBR.KNNimputedMissing.jld2\nchrgw2nonLHBR: 91292 SNPs from 257 individuals\nLoaded GW_genomics_2022_with_new_genome/GW2022_GBS_012NA_files/GW2022_all4plates.genotypes.SNPs_only.whole_genome.Jan2025.chrgw1nonLHBR.KNNimputedMissing.jld2\nchrgw1nonLHBR: 77362 SNPs from 257 individuals\nLoaded GW_genomics_2022_with_new_genome/GW2022_GBS_012NA_files/GW2022_all4plates.genotypes.SNPs_only.whole_genome.Jan2025.chrgw1AnonLHBR.KNNimputedMissing.jld2\nchrgw1AnonLHBR: 44551 SNPs from 257 individuals\nLoaded GW_genomics_2022_with_new_genome/GW2022_GBS_012NA_files/GW2022_all4plates.genotypes.SNPs_only.whole_genome.Jan2025.chrgw4AnonLHBR.KNNimputedMissing.jld2\nchrgw4AnonLHBR: 17467 SNPs from 257 individuals\nLoaded GW_genomics_2022_with_new_genome/GW2022_GBS_012NA_files/GW2022_all4plates.genotypes.SNPs_only.whole_genome.Jan2025.chrgwZnonLHBR.KNNimputedMissing.jld2\nchrgwZnonLHBR: 50005 SNPs from 257 individuals\n\n\nNow do the PCA for non_LHBR parts of genome:\n\nflipPC1 = true\nflipPC2 = true\nPCA_wholeGenome = plotPCA(genos_imputed_loaded, ind_with_metadata_indFiltered, \n        groups_to_plot_PCA, group_colors_PCA; \n        sampleSet = \"greenish warblers\", regionText = \"non-LHBR wholeGenome\",\n        flip1 = flipPC1, flip2 = flipPC2,\n        lineOpacity = 0.7, fillOpacity = 0.6,\n        symbolSize = 14, showTitle = false)\ntotalObservationVariance = var(PCA_wholeGenome.model) \nPC1_variance, PC2_variance = principalvars(PCA_wholeGenome.model)[1:2]\nPC1_prop_variance = PC1_variance / totalObservationVariance\nPC2_prop_variance = PC2_variance / totalObservationVariance\nprintln(\"PC1 explains \", 100*PC1_prop_variance, \"% of the total variance.\nPC2 explains \", 100*PC2_prop_variance, \"%.\")\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\nPC1 explains 10.945476% of the total variance.\nPC2 explains 5.529751%.\n\n\nThe above looks quite similar to the whole-genome PCA including the LHBRs.\n\n\nDo non_LHBR for a specific chromosome:\n\nselection = pos_SNP_loaded.chrom .== \"gw4A\"\npos_SNP_loaded_oneChr = pos_SNP_loaded[selection, :]\ngenos_imputed_loaded_oneChr = genos_imputed_loaded[:, selection]\nflipPC1 = true\nflipPC2 = true\nPCA_oneChr = plotPCA(genos_imputed_loaded_oneChr, ind_with_metadata_indFiltered, \n        groups_to_plot_PCA, group_colors_PCA; \n        sampleSet = \"greenish warblers\", regionText = \"non-LHBR gw4A\",\n        flip1 = flipPC1, flip2 = flipPC2,\n        lineOpacity = 0.7, fillOpacity = 0.6,\n        symbolSize = 14, showTitle = false)\ntotalObservationVariance = var(PCA_oneChr.model) \nPC1_variance, PC2_variance = principalvars(PCA_oneChr.model)[1:2]\nPC1_prop_variance = PC1_variance / totalObservationVariance\nPC2_prop_variance = PC2_variance / totalObservationVariance\nprintln(\"PC1 explains \", 100*PC1_prop_variance, \"% of the total variance.\nPC2 explains \", 100*PC2_prop_variance, \"%.\")\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\nPC1 explains 7.5557256% of the total variance.\nPC2 explains 4.751407%.\n\n\nThere is a whole lot of signal for population structure in the non-LHBR regions—maybe not surprising given there are high-Fst regions with low ViSHet.",
    "crumbs": [
      "Home",
      "Greenish Warbler heterozygosity variance analysis"
    ]
  },
  {
    "objectID": "GW_Heterozygosity_Variance.html#choose-low-het-individuals-in-a-high-vishet-region",
    "href": "GW_Heterozygosity_Variance.html#choose-low-het-individuals-in-a-high-vishet-region",
    "title": "Greenish Warbler heterozygosity variance analysis",
    "section": "Choose low-het individuals in a high ViSHet region",
    "text": "Choose low-het individuals in a high ViSHet region\nNow that we have high ViSHet regions indicated, we can automate the choosing of essential homozygous individuals in those regions. Below I will do this for chrZ (and later chr15 and chr18).\nFirst, here’s two functions, first for getting the boundaries of the longest high ViSHet region from a scaffold, second for getting a bunch of info about the region:\n\nfunction getOneHighViSHetRegion(highViSHetRegions, chr)\n    selection = (highViSHetRegions.regionChrom .== chr)\n    if sum(selection) == 1\n        println(\"Good news: 1 region on that scaffold\")\n        positionMin = highViSHetRegions.regionStart[selection][1]\n        positionMax = highViSHetRegions.regionEnd[selection][1]\n        regionText = string(\"chr \", chr, \" \",positionMin,\" to \",positionMax)\n    elseif sum(selection) &gt; 1\n        println(\"More than 1 region on that scaffold. Using just the longest one.\")\n        highViSHetRegions_chr = highViSHetRegions[selection, :]\n        display(highViSHetRegions_chr)\n        # get biggest region (first one if tied):\n        regionSizes = highViSHetRegions_chr.regionEnd .- highViSHetRegions_chr.regionStart\n        indexOfLongest = findfirst(regionSizes .== maximum(regionSizes))\n        positionMin = highViSHetRegions_chr.regionStart[indexOfLongest]\n        positionMax = highViSHetRegions_chr.regionEnd[indexOfLongest]\n        regionText = string(\"chr \", chr, \" \",positionMin,\" to \",positionMax)\n    elseif sum(selection) == 0\n        println(\"No high ViSHet regions on that scaffold\")\n        return\n    end\n    return positionMin, positionMax, regionText\nend\n\n\nfunction getWindowedIndHetStanRegion(genos, pos, \n                                    highViSHetRegions, chr;\n                                    windowSize = 500)\n    # remake the windowedIndHet_standardized (done above in a different cell)\n    loci_selection = (pos.chrom .== chr)\n    pos_region = pos[loci_selection, :]\n    genotypes_region = genos[:, loci_selection]\n    windowedPos, windowedIndHet = getWindowedIndHet(genotypes_region, pos_region, windowSize)\n    windowedIndHet_standardized = standardizeIndHet(windowedIndHet)\n    # look up the boundaries of the high ViSHet region:\n    positionMin, positionMax, regionText = getOneHighViSHetRegion(highViSHetRegions, chr)\n    # choose just the windows that are in the high ViSHet region:\n    window_selection = (positionMin .&lt; windowedPos .&lt; positionMax)\n    windowedIndHetStanRegion = windowedIndHet_standardized[:,window_selection]\n    meanAcrossRegionIndHetStan = mean.(eachrow(windowedIndHetStanRegion)) \n    # choose loci in region\n    lociSelection = (positionMin .&lt; pos_region.position .&lt; positionMax)\n    pos_highViSHetRegion = pos_region[lociSelection, :]\n    genos_highViSHetRegion = genotypes_region[:, lociSelection]\n    # convert `-1` genotypes (which indicates missing) to `missing`:\n    replace!(genos_highViSHetRegion, -1 =&gt; missing)\n    regionInfo = chooseChrRegion(pos_highViSHetRegion, chr; positionMin=positionMin, positionMax=positionMax) # this makes appropriate text describing the region\n    return positionMin, positionMax, regionText, \n            windowedIndHetStanRegion, meanAcrossRegionIndHetStan,\n            genos_highViSHetRegion, pos_highViSHetRegion, regionInfo\nend\n\ngetWindowedIndHetStanRegion (generic function with 1 method)\n\n\n\n# choose scaffold\nchr = \"gwZ\"\n\npositionMin, positionMax, regionText, \n    windowedIndHetStanRegion, meanAcrossRegionIndHetStan,\n    genos_highViSHetRegion, pos_highViSHetRegion, regionInfo = \n    getWindowedIndHetStanRegion(genosOnly_included, \n                            pos_SNP_filtered, \n                            highViSHetRegions, chr;\n                            windowSize = 500)\n\n# inspect values for mean IndHetStan per individual for that high ViSHet region\nplot(meanAcrossRegionIndHetStan)\n\n# Add column to metadata containing the regionIndHetStan for this highHet region:\ncommand = \"ind_with_metadata_included.\" * chr * \"_regionIndHetStan = meanAcrossRegionIndHetStan\"\neval(Meta.parse(command)) # this executes the command constructed above\nind_with_metadata_included.regionIndHetStan = meanAcrossRegionIndHetStan\n\n#names(ind_with_metadata_included)\n\n# check whether missing data related to heterozygosity (good news: not really)\nplot(ind_with_metadata_included.numMissings, meanAcrossRegionIndHetStan)\n\n# PCA of all individuals:\n\ngenos_highViSHetRegion_imputed = Impute.svd(Matrix{Union{Missing, Float32}}(genos_highViSHetRegion))\n\nflipPC1 = true\nflipPC2 = false\n\nPCAmodelAll = plotPCA(genos_highViSHetRegion_imputed, ind_with_metadata_included, \n            groups_to_plot_PCA, group_colors_PCA; \n            sampleSet = \"greenish warblers\", regionText = regionText,\n            flip1 = flipPC1, flip2 = flipPC2,\n            lineOpacity = 0.7, fillOpacity = 0.6,\n            symbolSize = 14, showTitle = true,\n            xLabelText = string(\"Region PC1\"), yLabelText = string(\"Region PC2\"),\n            showPlot = false)\n\ndisplay(PCAmodelAll.PCAfig)\n\n# Add PC values to metadata for individuals included in PCA above:\nif flipPC1\n    PCAmodelAll.metadata.PC1 = -1 .* PCAmodelAll.values[1,:]\nelse \n    PCAmodelAll.metadata.PC1 = PCAmodelAll.values[1,:]\nend\nif flipPC2\n    PCAmodelAll.metadata.PC2 = -1 .* PCAmodelAll.values[2,:]\nelse\n    PCAmodelAll.metadata.PC2 = PCAmodelAll.values[2,:]\nend\n# also flip PC3:\nPCAmodelAll.metadata.PC3 = -1 .* PCAmodelAll.values[3,:]\n\n# For the next bit to work with above, make sure that all individuals in the above `plotPCA` command\n# are included in the `groups_to_plot_PCA`\n\n# choose inds with low IndHet in high ViSHet region:\nindSelection_lowIndHetStan = (meanAcrossRegionIndHetStan .&lt; 2) \n\n#Plot only the lowIndHetStan individuals, PC1 to PC2:\n\nfig_3A = CairoMakie.Figure()\nax = Axis(fig_3A[1, 1],\n    title = \"gwZ LHBR PC1 vs. PC2, only low heterozygosity\",\n    xlabel = \"Region PC1\", xlabelsize = 24,\n    ylabel = \"Region PC2\", ylabelsize = 24,\n    autolimitaspect = 1)\nhidedecorations!(ax, label = false, ticklabels = false, ticks = false) # hide background lattice\nfor i in eachindex(groups_to_plot_PCA) \n    selection = (PCAmodelAll.metadata.Fst_group .== groups_to_plot_PCA[i]) .& indSelection_lowIndHetStan\n    CairoMakie.scatter!(ax, PCAmodelAll.metadata.PC1[selection], PCAmodelAll.metadata.PC2[selection], marker = :diamond, color = (group_colors_PCA[i], 0.6), markersize = 14, strokewidth=0.5, strokecolor = (\"black\", 0.7))\nend\ndisplay(fig_3A)\nif false  # set to true to save plot\n    save(\"Figure3A_from_Julia.png\", fig_3A, px_per_unit = 2.0)\nend \n\nGood news: 1 region on that scaffold\n\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\n\nNow plot PC1 vs. PC3 for low ViSHet individuals\n\n#Plot only the lowIndHetStan individuals, PC1 to PC2:\n\nfig_3B = CairoMakie.Figure()\nax = Axis(fig_3B[1, 1],\n    title = \"gwZ LHBR PC1 vs. PC3, only low heterozygosity\",\n    xlabel = \"Region PC1\", xlabelsize = 24,\n    ylabel = \"Region PC3\", ylabelsize = 24,\n    autolimitaspect = 1)\nhidedecorations!(ax, label = false, ticklabels = false, ticks = false) # hide background lattice\nfor i in eachindex(groups_to_plot_PCA) \n    selection = (PCAmodelAll.metadata.Fst_group .== groups_to_plot_PCA[i]) .& indSelection_lowIndHetStan\n    CairoMakie.scatter!(ax, PCAmodelAll.metadata.PC1[selection], PCAmodelAll.metadata.PC3[selection], marker = :diamond, color = (group_colors_PCA[i], 0.6), markersize = 14, strokewidth=0.5, strokecolor = (\"black\", 0.7))\nend\ndisplay(fig_3B)\nif false  # set to true to save plot\n    save(\"Figure3B_from_Julia.png\", fig_3B, px_per_unit = 2.0)\nend \n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\n\n\nSave the individual colors in the metadata\n\nindColors = fill(\"\", size(PCAmodelAll.metadata, 1))\nfor i in axes(PCAmodelAll.metadata, 1)\n    indColors[i] = group_colors_PCA[findfirst(groups_to_plot_PCA .== PCAmodelAll.metadata.Fst_group[i])]\nend\nPCAmodelAll.metadata.indColorLeft = indColors\nPCAmodelAll.metadata.indColorRight = indColors\n\n257-element Vector{String}:\n \"blue\"\n \"red\"\n \"red\"\n \"red\"\n \"red\"\n \"red\"\n \"red\"\n \"purple\"\n \"red\"\n \"red\"\n \"red\"\n \"blue\"\n \"red\"\n ⋮\n \"olivedrab2\"\n \"olivedrab2\"\n \"olivedrab2\"\n \"olivedrab2\"\n \"olivedrab2\"\n \"olivedrab2\"\n \"olivedrab2\"\n \"olivedrab2\"\n \"olivedrab2\"\n \"olivedrab2\"\n \"olivedrab2\"\n \"olivedrab2\"\n\n\n\n\nPlot PC1 vs. PC2:\n\nfig_3C = CairoMakie.Figure()\nax = Axis(fig_3C[1, 1],\n    title = \"gwZ LHBR PC1 vs. PC2, all individuals\",\n    xlabel = \"Region PC1\", xlabelsize = 24,\n    ylabel = \"Region PC2\", ylabelsize = 24,\n    autolimitaspect = 1)\nhidedecorations!(ax, label = false, ticklabels = false, ticks = false) # hide background lattice\nfor i in eachindex(groups_to_plot_PCA) \n    selection = PCAmodelAll.metadata.Fst_group .== groups_to_plot_PCA[i]\n    CairoMakie.scatter!(ax, PCAmodelAll.metadata.PC1[selection], PCAmodelAll.metadata.PC2[selection], marker = :diamond, color = (group_colors_PCA[i], 0.6), markersize = 14, strokewidth=0.5, strokecolor = (\"black\", 0.7))\nend\ndisplay(fig_3C)\nif false  # set to true to save plot\n    save(\"Figure3C_from_Julia.png\", fig_3C, px_per_unit = 2.0)\nend \n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\n\n\nPlot PC1 vs. PC3:\n\nfig_3D = CairoMakie.Figure()\nax = Axis(fig_3D[1, 1],\n    title = \"gwZ LHBR PC1 vs. PC3, all individuals\",\n    xlabel = \"Region PC1\", xlabelsize = 24,\n    ylabel = \"Region PC3\", ylabelsize = 24,\n    autolimitaspect = 1)\nhidedecorations!(ax, label = false, ticklabels = false, ticks = false) # hide background lattice\nfor i in eachindex(groups_to_plot_PCA) \n    selection = PCAmodelAll.metadata.Fst_group .== groups_to_plot_PCA[i]\n    CairoMakie.scatter!(ax, PCAmodelAll.metadata.PC1[selection], PCAmodelAll.metadata.PC3[selection], marker = :diamond, color = (group_colors_PCA[i], 0.6), markersize = 14, strokewidth=0.5, strokecolor = (\"black\", 0.7))\nend\ndisplay(fig_3D)\nif false  # set to true to save plot\n    save(\"Figure3D_from_Julia.png\", fig_3D, px_per_unit = 2.0)\nend\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\n\n\nNow it is clear that there are six clear haplogroups of Z high ViSHet region. Divide samples into those groups, based on PCA scores, and then calculate pi within and pi between\n\n# Inspect Z chromosome PCA of low IndHet (&lt; 2) individuals,\n# and specify group boundaries:\n\nclusterNames = [\"vir\",\n                \"nit\",\n                \"lud\",\n                \"troch\",\n                \"obs\",\n                \"plumb\"]\n\nclusterColors = [\"blue\",\n                \"grey\",\n                \"seagreen4\",\n                \"yellow\",\n                \"orange\",\n                \"red\"]\n\nvir = (PCAmodelAll.metadata.PC1 .&lt; -4.5) .& \n        (3 .&lt; PCAmodelAll.metadata.PC2) .&\n        (PCAmodelAll.metadata.PC3 .&gt; 2) .& \n        indSelection_lowIndHetStan\nnit = (-4 .&lt; PCAmodelAll.metadata.PC1 .&lt; -2) .& \n        (1 .&lt; PCAmodelAll.metadata.PC2 .&lt; 3) .&\n        indSelection_lowIndHetStan\nlud = (PCAmodelAll.metadata.PC1 .&lt; -4.5) .& \n        (3 .&lt; PCAmodelAll.metadata.PC2) .& \n        (PCAmodelAll.metadata.PC3 .&lt; -2) .& \n        indSelection_lowIndHetStan\ntroch = (PCAmodelAll.metadata.PC2 .&lt; -5) .& \n        indSelection_lowIndHetStan\nobs = (-2 .&lt; PCAmodelAll.metadata.PC1 .&lt; 2) .& \n        (-3 .&lt; PCAmodelAll.metadata.PC2 .&lt; -1) .& \n        indSelection_lowIndHetStan\nplumb = (5 .&lt; PCAmodelAll.metadata.PC1) .& \n        indSelection_lowIndHetStan\n\n# check the individuals in each group\nPCAmodelAll.metadata.Fst_group[vir]\nPCAmodelAll.metadata.Fst_group[nit] # note there are two nitidus with nearly identical values\nPCAmodelAll.metadata.Fst_group[lud]\nPCAmodelAll.metadata.Fst_group[troch]\nPCAmodelAll.metadata.Fst_group[obs]\nPCAmodelAll.metadata.Fst_group[plumb]\n\nclusterArray = [vir nit lud troch obs plumb]\n\n# show numbers in each group\nprintln(\"The numbers in each group are $(sum(clusterArray, dims=1)) and the sum of those is $(sum(sum(clusterArray, dims=1)))\")\n\n# create vectors that indicate the groups and plot order for this analysis:\nclusterMembership = fill(\"none\", nrow(PCAmodelAll.metadata))\nplotOrder = fill(-9, nrow(PCAmodelAll.metadata))\nfor i in eachindex(clusterArray[1,:])\n    clusterMembership[clusterArray[:,i]] .= clusterNames[i]\n    plotOrder[clusterArray[:,i]] .= i\nend\n\n\"\"\"\n    getFreqsAndSampleSizesBySexForZ(genoData, sex, indGroup, groupsToCalc)\n\nCalculate allele frequencies and sample sizes for each group and SNP, taking into account sex for analysis of Z chromosome.\n\n​# Arguments\n- `genoData`: The genotype matrix, where rows are individuals and columns are loci, with genotype codes 0,1,2 meaning homozygous reference, heterozygote, homozygous alternate, and missing genotypes can be either -1 or `missing`.\n- `sex`: Vector of sexes ('f` or `m`)\n- `indGroup`: A vector providing the group name each individual belongs to.\n- `groupsToCalc`: A list of group names to include in calculations.\n\n# Notes\nReturns a tuple containing 1) a matrix of frequencies, and 2) a matrix of samples sizes (in both, rows are groups and columns are loci). \n\"\"\"\nfunction getFreqsAndSampleSizesBySexForZ(genoData, sex, indGroup, groupsToCalc)\n    if any(.!map(x -&gt; x in [\"F\", \"M\"], sex))\n        println(\"Warning: not all entries in sex vector are `F` or `M`\")\n    end\n    genoData[ismissing.(genoData)] .= -1 # if \"missing\" datatype is use, convert to -1\n    groupCount = length(groupsToCalc)\n    freqs = Array{Float32,2}(undef, groupCount, size(genoData, 2))\n    sampleSizes = Array{Number,2}(undef, groupCount, size(genoData, 2))\n    for i in 1:groupCount\n        # females:\n        selection = (indGroup .== groupsToCalc[i]) .& (sex .== \"F\") # gets the correct rows for individuals in the group \n        geno0countsF = sum(genoData[selection, :] .== 0, dims=1) # count by column the number of 0 genotypes (homozygous ref)\n        geno1countsF = sum(genoData[selection, :] .== 1, dims=1) # same for 1 genotypes (heterozygous)\n        geno2countsF = sum(genoData[selection, :] .== 2, dims=1) # same for 2 genotypes (homozygous alternate) \n\n        # males: \n        selection = (indGroup .== groupsToCalc[i]) .& (sex .== \"M\")\n        geno0countsM = sum(genoData[selection, :] .== 0, dims=1)\n        geno1countsM = sum(genoData[selection, :] .== 1, dims=1)\n        geno2countsM = sum(genoData[selection, :] .== 2, dims=1)\n        allele0counts = (2 .* geno0countsM) .+ geno1countsM .+ geno0countsF .+ (0.5 .* geno1countsF)\n        allele2counts = (2 .* geno2countsM) .+ geno1countsM .+ geno2countsF .+ (0.5 .* geno1countsF)\n        sumAlleleCounts = allele0counts .+ allele2counts\n        sampleSizes[i, :] = 0.5 .* sumAlleleCounts # sample size in number of individuals\n        freqs[i, :] = allele2counts ./ sumAlleleCounts\n    end\n    return freqs, sampleSizes\nend\n\n# Calculate allele freqs and sample sizes\nfreqs, sampleSizes = getFreqsAndSampleSizesBySexForZ(genos_highViSHetRegion, ind_with_metadata_included.sex, clusterMembership, clusterNames)\nprintln(\"Calculated population allele frequencies and sample sizes\")\n\n# Calculate per-site pi (within-group nucleotide distance)\n\nsitePi = getSitePi(freqs, sampleSizes)\n\n# calculate pairwise Dxy per site, using data in \"freqs\" and groups in \"groups\"\n\nDxy, pairwiseDxyClusterNames = getDxy(freqs, clusterNames)\n\nFst, FstNumerator, FstDenominator, pairwiseFstClusterNames = getFst(freqs, sampleSizes, clusterNames; among=false)  # set among to FALSE if no among Fst wanted (some things won't work without it) \n\n# Now get averages of pi and Dxy for whole region:\n\nregionPiTable = DataFrame(cluster = clusterNames, pi = getRegionPi(sitePi))\n#= 6×2 DataFrame\n Row │ cluster  pi         \n     │ String   Float64    \n─────┼─────────────────────\n   1 │ vir      0.00706945\n   2 │ nit      0.0035094\n   3 │ lud      0.00794828\n   4 │ troch    0.00968743\n   5 │ obs      0.0112686\n   6 │ plumb    0.0104236 =#\n\nregionDxyTable = DataFrame(cluster_pair = pairwiseDxyClusterNames, Dxy = getRegionDxy(Dxy))\n#=\n15×2 DataFrame\n Row │ cluster_pair  Dxy       \n     │ String        Float64   \n─────┼─────────────────────────\n   1 │ vir_nit       0.0388124\n   2 │ vir_lud       0.0173121\n   3 │ vir_troch     0.0410345\n   4 │ vir_obs       0.037509\n   5 │ vir_plumb     0.0466843\n   6 │ nit_lud       0.0365198\n   7 │ nit_troch     0.0464045\n   8 │ nit_obs       0.0427296\n   9 │ nit_plumb     0.0524538\n  10 │ lud_troch     0.038968\n  11 │ lud_obs       0.0354195\n  12 │ lud_plumb     0.0445131\n  13 │ troch_obs     0.0265615\n  14 │ troch_plumb   0.0404278\n  15 │ obs_plumb     0.0365139 =#\n\n# It seems the distances are not very consistent with a bifurcating tree,\n# nor 1-D isolation by distance, but something more complex.\n# Obscuratus is closer to viridanus than troch is.\n# Nitidus quite distant but gets put in centre of PCA because off on its own axis.\n\n# Make a genotype-by-individual plot using all variable loci in the region,\nmissingFractionAllowed = 0.1\n# in metadata, replace `Fst_group` column with cluster info (needed for the function below):\nPCAmodelAll.metadata.original_Fst_groups = PCAmodelAll.metadata.Fst_group # store the Fst_groups in this\nPCAmodelAll.metadata.Fst_group = clusterMembership\nPCAmodelAll.metadata.original_plot_order = PCAmodelAll.metadata.plot_order # store the original plot_order in this\nPCAmodelAll.metadata.plot_order = plotOrder\n\n# limit the SNPs to those with variants greater than 50% in \n# at least one pop, and less than 50% in at least one pop.\n# (So for each column in `freqs`, the maximum should be &gt; 0.5 \n# and the minimum should be &lt; 0.5)\nselectedSNPs = (vec(maximum(freqs, dims=1)) .&gt; 0.5) .& (vec(minimum(freqs, dims=1)) .&lt; 0.5)\ngenos_selectedSNPs = genos_highViSHetRegion[:, selectedSNPs]\npos_selectedSNPs = pos_highViSHetRegion[selectedSNPs, :]\nFst_selectedSNPs = Fst[:, selectedSNPs]\nfreqs_selectedSNPs = freqs[:, selectedSNPs]\n\n# limit the number of individuals per group to plot\nnumIndsToPlot = [15, 15, 15, 15, 15, 15]\n\ngenosForGBI, indMetadataforGBI = limitIndsToPlot(clusterNames, numIndsToPlot, \n                                            genos_selectedSNPs, PCAmodelAll.metadata;\n                                            sortByMissing = true)\n\nplotGenotypeByIndividual(regionInfo, pos_selectedSNPs,\n                genosForGBI, indMetadataforGBI, freqs_selectedSNPs, clusterNames, clusterColors;\n                missingFractionAllowed = missingFractionAllowed,\n                titleFontSize = 20,\n                indColorRightProvided = true)\n\nThe numbers in each group are [37 2 38 80 5 73] and the sum of those is 235\nCalculated population allele frequencies and sample sizes\n\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\n\n(Scene (768px, 960px):\n  0 Plots\n  2 Child Scenes:\n    ├ Scene (768px, 960px)\n    └ Scene (768px, 960px), Union{Missing, Int16}[0 0 … 0 0; 0 0 … 0 0; … ; 0 0 … 0 0; 0 0 … 0 0], [68372991, 68434641, 68434654, 68434681, 68506332, 68506385, 68506399, 68533951, 68682243, 68795208  …  73563085, 73563098, 73586599, 73680319, 73743035, 73743078, 73743083, 73743128, 73743136, 73743151], 67×18 DataFrame\n Row │ ind                        ID                         location  group   ⋯\n     │ String                     String                     String7   String1 ⋯\n─────┼──────────────────────────────────────────────────────────────────────────\n   1 │ GW_Armando_plate1_JF12G04  GW_Armando_plate1_JF12G04  ST_vi     vir     ⋯\n   2 │ GW_Armando_plate2_JF16G02  GW_Armando_plate2_JF16G02  DV_vi     plumb_v\n   3 │ GW_Lane5_AA1               GW_Lane5_AA1               AA        vir_S\n   4 │ GW_Lane5_AA5               GW_Lane5_AA5               AA        vir_S\n   5 │ GW_Lane5_TL1               GW_Lane5_TL1               TL        vir     ⋯\n   6 │ GW_Lane5_TL10              GW_Lane5_TL10              TL        vir\n   7 │ GW_Lane5_TL11              GW_Lane5_TL11              TL        vir\n   8 │ GW_Lane5_TL8               GW_Lane5_TL8               TL        vir\n   9 │ GW_Lane5_YK5               GW_Lane5_YK5               YK        vir     ⋯\n  10 │ GW_Lane5_YK6               GW_Lane5_YK6               YK        vir\n  11 │ GW_Armando_plate1_AB1      GW_Armando_plate1_AB1      AB        vir\n  ⋮  │             ⋮                          ⋮                 ⋮          ⋮   ⋱\n  58 │ GW_Armando_plate1_JF09G02  GW_Armando_plate1_JF09G02  ST        plumb\n  59 │ GW_Armando_plate1_JF11G01  GW_Armando_plate1_JF11G01  ST        plumb   ⋯\n  60 │ GW_Armando_plate1_JF12G01  GW_Armando_plate1_JF12G01  ST        plumb\n  61 │ GW_Armando_plate1_JF12G02  GW_Armando_plate1_JF12G02  ST        plumb\n  62 │ GW_Armando_plate1_JF13G01  GW_Armando_plate1_JF13G01  ST        plumb\n  63 │ GW_Armando_plate1_JF22G01  GW_Armando_plate1_JF22G01  MB        plumb   ⋯\n  64 │ GW_Armando_plate1_JF23G01  GW_Armando_plate1_JF23G01  VB        plumb\n  65 │ GW_Armando_plate1_JF26G01  GW_Armando_plate1_JF26G01  ST        plumb\n  66 │ GW_Armando_plate1_JF27G01  GW_Armando_plate1_JF27G01  ST        plumb\n  67 │ GW_Armando_plate1_JF29G01  GW_Armando_plate1_JF29G01  ST        plumb   ⋯\n                                                  15 columns and 46 rows omitted)\n\n\n\n\n\nNow show a GBI plot like above, but with heterozygotes:\n\nclusterNamesWithHets = [\"vir\",\n                        \"vir_lud\",\n                        \"nit\",\n                        \"lud\",\n                        \"lud_troch\",\n                        \"troch\",\n                        \"obs\",\n                        \"plumb\"]\n\nclusterColorsWithHets = [\"blue\",\n                        \"lightseagreen\",\n                        \"grey\",\n                        \"green\",\n                        \"yellowgreen\",\n                        \"yellow\",\n                        \"orange\",\n                        \"red\"]\n\nvir_lud = (PCAmodelAll.metadata.PC1 .&lt; -4.5) .& \n        (3 .&lt; PCAmodelAll.metadata.PC2) .&\n        (-1 .&lt; PCAmodelAll.metadata.PC3 .&lt; 0) # Note this one has lowIndHetStan but is mix of vir and lud\nlud_troch = (-5 .&lt; PCAmodelAll.metadata.PC1 .&lt; -1) .&\n                (-3 .&lt; PCAmodelAll.metadata.PC2 .&lt; 1) .&\n                 .!indSelection_lowIndHetStan\n\nclusterArray = [vir vir_lud nit lud lud_troch troch obs plumb]\n\nsum(clusterArray, dims=1)\n\nif sum(sum(clusterArray, dims=1)) == size(PCAmodelAll.metadata, 1)\n    println(\"Good news: Individuals included in a group matches total number of individuals\")\nelse \n    println(\"Warning: Individuals included in a group ($(sum(sum(clusterArray, dims=1)))) do NOT match total number of individuals ($(size(PCAmodelAll.metadata, 1)))\")\nend\n\n# check which individuals left out:\n\nsum(clusterArray, dims=2)\n\nPCAmodelAll.metadata.ind[vec(sum(clusterArray, dims=2) .== 0)]\nPCAmodelAll.metadata.PC1[vec(sum(clusterArray, dims=2) .== 0)]\nPCAmodelAll.metadata.PC2[vec(sum(clusterArray, dims=2) .== 0)]\nindSelection_lowIndHetStan[vec(sum(clusterArray, dims=2) .== 0)]\n\n# create vectors that indicate the groups and plot order for this analysis:\nclusterMembershipWithHets = fill(\"none\", nrow(PCAmodelAll.metadata))\nplotOrderWithHets = fill(-9, nrow(PCAmodelAll.metadata))\nfor i in eachindex(clusterArray[1,:])\n    clusterMembershipWithHets[clusterArray[:,i]] .= clusterNamesWithHets[i]\n    plotOrderWithHets[clusterArray[:,i]] .= i\nend\n\n# Add column to main metadata object containing the cluster membership for this highHet region:\ncommand = \"ind_with_metadata_included.\" * chr * \"_cluster = clusterMembershipWithHets\"\neval(Meta.parse(command)) # this executes the command constructed above\n\n# in metadata, replace `Fst_group` column with cluster info (needed for the function below):\nPCAmodelAll.metadata.Fst_group = clusterMembershipWithHets\nPCAmodelAll.metadata.plot_order = plotOrderWithHets\n\n# limit the number of individuals per group to plot\nnumIndsToPlotWithHets = fill(15, length(clusterNamesWithHets))\n\ngenosForGBI, indMetadataforGBI = limitIndsToPlot(clusterNamesWithHets, numIndsToPlotWithHets, \n                                            genos_selectedSNPs, PCAmodelAll.metadata;\n                                            sortByMissing = true)\n\nplotGenotypeByIndividual(regionInfo, pos_selectedSNPs,\n                genosForGBI, indMetadataforGBI, freqs_selectedSNPs, clusterNamesWithHets, clusterColorsWithHets;\n                missingFractionAllowed = missingFractionAllowed,\n                indColorLeftProvided = false,\n                indColorRightProvided = true)\n\nGood news: Individuals included in a group matches total number of individuals\n\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\n\n(Scene (768px, 960px):\n  0 Plots\n  2 Child Scenes:\n    ├ Scene (768px, 960px)\n    └ Scene (768px, 960px), Union{Missing, Int16}[0 0 … 0 0; 0 0 … 0 0; … ; 0 0 … 0 0; 0 0 … 0 0], [68372991, 68434641, 68434654, 68434681, 68506332, 68506385, 68506399, 68533951, 68682243, 68795208  …  73563085, 73563098, 73586599, 73680319, 73743035, 73743078, 73743083, 73743128, 73743136, 73743151], 83×18 DataFrame\n Row │ ind                        ID                         location  group   ⋯\n     │ String                     String                     String7   String1 ⋯\n─────┼──────────────────────────────────────────────────────────────────────────\n   1 │ GW_Armando_plate1_JF12G04  GW_Armando_plate1_JF12G04  ST_vi     vir     ⋯\n   2 │ GW_Armando_plate2_JF16G02  GW_Armando_plate2_JF16G02  DV_vi     plumb_v\n   3 │ GW_Lane5_AA1               GW_Lane5_AA1               AA        vir_S\n   4 │ GW_Lane5_AA5               GW_Lane5_AA5               AA        vir_S\n   5 │ GW_Lane5_TL1               GW_Lane5_TL1               TL        vir     ⋯\n   6 │ GW_Lane5_TL10              GW_Lane5_TL10              TL        vir\n   7 │ GW_Lane5_TL11              GW_Lane5_TL11              TL        vir\n   8 │ GW_Lane5_TL8               GW_Lane5_TL8               TL        vir\n   9 │ GW_Lane5_YK5               GW_Lane5_YK5               YK        vir     ⋯\n  10 │ GW_Lane5_YK6               GW_Lane5_YK6               YK        vir\n  11 │ GW_Armando_plate1_AB1      GW_Armando_plate1_AB1      AB        vir\n  ⋮  │             ⋮                          ⋮                 ⋮          ⋮   ⋱\n  74 │ GW_Armando_plate1_JF09G02  GW_Armando_plate1_JF09G02  ST        plumb\n  75 │ GW_Armando_plate1_JF11G01  GW_Armando_plate1_JF11G01  ST        plumb   ⋯\n  76 │ GW_Armando_plate1_JF12G01  GW_Armando_plate1_JF12G01  ST        plumb\n  77 │ GW_Armando_plate1_JF12G02  GW_Armando_plate1_JF12G02  ST        plumb\n  78 │ GW_Armando_plate1_JF13G01  GW_Armando_plate1_JF13G01  ST        plumb\n  79 │ GW_Armando_plate1_JF22G01  GW_Armando_plate1_JF22G01  MB        plumb   ⋯\n  80 │ GW_Armando_plate1_JF23G01  GW_Armando_plate1_JF23G01  VB        plumb\n  81 │ GW_Armando_plate1_JF26G01  GW_Armando_plate1_JF26G01  ST        plumb\n  82 │ GW_Armando_plate1_JF27G01  GW_Armando_plate1_JF27G01  ST        plumb\n  83 │ GW_Armando_plate1_JF29G01  GW_Armando_plate1_JF29G01  ST        plumb   ⋯\n                                                  15 columns and 62 rows omitted)\n\n\n\n\n\nshow GBI plot according to original groups and plot order\n\nPCAmodelAll.metadata.plot_order = PCAmodelAll.metadata.original_plot_order\n\ngenosForGBI, indMetadataforGBI = limitIndsToPlot(clusterNamesWithHets, numIndsToPlotWithHets, \n                                            genos_selectedSNPs, PCAmodelAll.metadata;\n                                            sortByMissing = true)\n\nplotGenotypeByIndividual(regionInfo, pos_selectedSNPs,\n                genosForGBI, indMetadataforGBI, freqs_selectedSNPs, clusterNamesWithHets, clusterColorsWithHets;\n                missingFractionAllowed = missingFractionAllowed,\n                indColorLeftProvided = false,\n                indColorRightProvided = true)\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\n\n(Scene (768px, 960px):\n  0 Plots\n  2 Child Scenes:\n    ├ Scene (768px, 960px)\n    └ Scene (768px, 960px), Union{Missing, Int16}[0 0 … 0 0; 0 0 … 0 0; … ; 0 0 … 0 0; 0 0 … 0 0], [68372991, 68434641, 68434654, 68434681, 68506332, 68506385, 68506399, 68533951, 68682243, 68795208  …  73563085, 73563098, 73586599, 73680319, 73743035, 73743078, 73743083, 73743128, 73743136, 73743151], 83×18 DataFrame\n Row │ ind                        ID                         location  group   ⋯\n     │ String                     String                     String7   String1 ⋯\n─────┼──────────────────────────────────────────────────────────────────────────\n   1 │ GW_Armando_plate1_JF12G04  GW_Armando_plate1_JF12G04  ST_vi     vir     ⋯\n   2 │ GW_Armando_plate2_JF16G02  GW_Armando_plate2_JF16G02  DV_vi     plumb_v\n   3 │ GW_Armando_plate2_JE31G01  GW_Armando_plate2_JE31G01  VB_vi     vir_mis\n   4 │ GW_Lane5_YK5               GW_Lane5_YK5               YK        vir\n   5 │ GW_Lane5_YK6               GW_Lane5_YK6               YK        vir     ⋯\n   6 │ GW_Armando_plate1_AB1      GW_Armando_plate1_AB1      AB        vir\n   7 │ GW_Lane5_TL1               GW_Lane5_TL1               TL        vir\n   8 │ GW_Lane5_TL10              GW_Lane5_TL10              TL        vir\n   9 │ GW_Lane5_TL11              GW_Lane5_TL11              TL        vir     ⋯\n  10 │ GW_Lane5_TL8               GW_Lane5_TL8               TL        vir\n  11 │ GW_Armando_plate1_TL3      GW_Armando_plate1_TL3      TL        vir\n  ⋮  │             ⋮                          ⋮                 ⋮          ⋮   ⋱\n  74 │ GW_Armando_plate1_JF09G01  GW_Armando_plate1_JF09G01  ST        plumb\n  75 │ GW_Armando_plate1_JF09G02  GW_Armando_plate1_JF09G02  ST        plumb   ⋯\n  76 │ GW_Armando_plate1_JF11G01  GW_Armando_plate1_JF11G01  ST        plumb\n  77 │ GW_Armando_plate1_JF12G01  GW_Armando_plate1_JF12G01  ST        plumb\n  78 │ GW_Armando_plate1_JF12G02  GW_Armando_plate1_JF12G02  ST        plumb\n  79 │ GW_Armando_plate1_JF13G01  GW_Armando_plate1_JF13G01  ST        plumb   ⋯\n  80 │ GW_Armando_plate1_JF26G01  GW_Armando_plate1_JF26G01  ST        plumb\n  81 │ GW_Armando_plate1_JF27G01  GW_Armando_plate1_JF27G01  ST        plumb\n  82 │ GW_Armando_plate1_JF29G01  GW_Armando_plate1_JF29G01  ST        plumb\n  83 │ GW_Armando_plate1_JF23G01  GW_Armando_plate1_JF23G01  VB        plumb   ⋯\n                                                  15 columns and 62 rows omitted)\n\n\n\n\n\nshow same but with all individuals\n\nPCAmodelAll.metadata.plot_order = PCAmodelAll.metadata.original_plot_order\n\n# Set no limit (or high limit anyway) on the number of individuals per group to plot\nnumIndsToPlotWithHets = fill(1000, length(clusterNamesWithHets))\n\ngenosForGBI, indMetadataforGBI = limitIndsToPlot(clusterNamesWithHets, numIndsToPlotWithHets, \n                                            genos_selectedSNPs, PCAmodelAll.metadata;\n                                            sortByMissing = true)\n\nplotInfo = plotGenotypeByIndividual(regionInfo, pos_selectedSNPs,\n                genosForGBI, indMetadataforGBI, freqs_selectedSNPs, clusterNamesWithHets, clusterColorsWithHets;\n                missingFractionAllowed = missingFractionAllowed,\n                indFontSize=6, figureSize=(1200, 1600),\n                indColorLeftProvided = false,\n                indColorRightProvided = true)\n\nif true  # set to true to save plot\n    save(\"FigureS1_from_Julia.png\", plotInfo[1], px_per_unit = 2.0)\nend\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\nCairoMakie.Screen{IMAGE}\n\n\n\n\nShow just the west area (without nitidus)\n\nclusterNamesWithHetsWest = [\"vir\",\n                        \"lud\",\n                        \"lud_troch\",\n                        \"troch\",]\n\nclusterColorsWithHetsWest = [\"blue\",\n                        \"green\",\n                        \"yellowgreen\",\n                        \"yellow\"]\n\n# limit the SNPs to those with variants greater than 50% in \n# at least one pop, and less than 50% in at least one pop.\n# (So for each column in `freqs`, the maximum should be &gt; 0.5 \n# and the minimum should be &lt; 0.5)\n# Calculate allele freqs and sample sizes\nfreqs, sampleSizes = getFreqsAndSampleSizesBySexForZ(genos_selectedSNPs, ind_with_metadata_included.sex, clusterMembershipWithHets, clusterNamesWithHetsWest)\nprintln(\"Calculated population allele frequencies and sample sizes\")\nselectedSNPs = (vec(maximum(freqs, dims=1)) .&gt; 0.5) .& (vec(minimum(freqs, dims=1)) .&lt; 0.5)\ngenos_selectedSNPs2 = genos_selectedSNPs[:, selectedSNPs]\npos_selectedSNPs2 = pos_selectedSNPs[selectedSNPs, :]\nfreqs_selectedSNPs2 = freqs[:, selectedSNPs]\n\nnumIndsToPlotWithHets = [100, 100, 100, 100]\n\ngenosForGBI, indMetadataforGBI = limitIndsToPlot(clusterNamesWithHetsWest, numIndsToPlotWithHets, \n                                            genos_selectedSNPs2, PCAmodelAll.metadata;\n                                            sortByMissing = true)\n\nplotGenotypeByIndividual(regionInfo, pos_selectedSNPs2,\n                genosForGBI, indMetadataforGBI, freqs_selectedSNPs2, clusterNamesWithHetsWest, clusterColorsWithHetsWest;\n                missingFractionAllowed = missingFractionAllowed,\n                indColorLeftProvided = false,\n                indColorRightProvided = true)\n\nCalculated population allele frequencies and sample sizes\n\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\n\n(Scene (768px, 960px):\n  0 Plots\n  2 Child Scenes:\n    ├ Scene (768px, 960px)\n    └ Scene (768px, 960px), Union{Missing, Int16}[0 0 … 0 0; 0 0 … 0 0; … ; 1 1 … 2 0; 0 0 … 2 0], [68434641, 68434654, 68434681, 68506332, 68506385, 68533951, 68682243, 68795208, 69062410, 69164105  …  73298332, 73298436, 73347645, 73504646, 73558384, 73563098, 73680319, 73743035, 73743128, 73743151], 176×18 DataFrame\n Row │ ind                        ID                         location  group   ⋯\n     │ String                     String                     String7   String1 ⋯\n─────┼──────────────────────────────────────────────────────────────────────────\n   1 │ GW_Armando_plate1_JF12G04  GW_Armando_plate1_JF12G04  ST_vi     vir     ⋯\n   2 │ GW_Lane5_STvi3             GW_Lane5_STvi3             ST_vi     vir\n   3 │ GW_Armando_plate2_JF30G01  GW_Armando_plate2_JF30G01  ST_vi     vir_mis\n   4 │ GW_Lane5_STvi1             GW_Lane5_STvi1             ST_vi     vir\n   5 │ GW_Armando_plate2_JF03G01  GW_Armando_plate2_JF03G01  ST_vi     vir_mis ⋯\n   6 │ GW_Lane5_STvi2             GW_Lane5_STvi2             ST_vi     vir\n   7 │ GW_Armando_plate2_JF16G02  GW_Armando_plate2_JF16G02  DV_vi     plumb_v\n   8 │ GW_Armando_plate1_JF16G01  GW_Armando_plate1_JF16G01  DV_vi     plumb_v\n   9 │ GW_Armando_plate2_JE31G01  GW_Armando_plate2_JE31G01  VB_vi     vir_mis ⋯\n  10 │ GW_Armando_plate2_JF03G02  GW_Armando_plate2_JF03G02  VB_vi     vir_mis\n  11 │ GW_Lane5_YK5               GW_Lane5_YK5               YK        vir\n  ⋮  │             ⋮                          ⋮                 ⋮          ⋮   ⋱\n 167 │ GW_Lane5_LN4               GW_Lane5_LN4               LN        troch_L\n 168 │ GW_Armando_plate2_LN2      GW_Armando_plate2_LN2      LN        troch_L ⋯\n 169 │ GW_Lane5_LN19              GW_Lane5_LN19              LN        troch_L\n 170 │ GW_Lane5_LN6               GW_Lane5_LN6               LN        troch_L\n 171 │ GW_Lane5_LN7               GW_Lane5_LN7               LN        troch_L\n 172 │ GW_Lane5_LN10              GW_Lane5_LN10              LN        troch_L ⋯\n 173 │ GW_Lane5_LN1               GW_Lane5_LN1               LN        troch_L\n 174 │ GW_Lane5_LN8               GW_Lane5_LN8               LN        troch_L\n 175 │ GW_Lane5_LN12              GW_Lane5_LN12              LN        troch_L\n 176 │ GW_Lane5_LN16              GW_Lane5_LN16              LN        troch_L ⋯\n                                                 15 columns and 155 rows omitted)\n\n\n\n\n\nShow just the east area\n\nclusterNamesWithHetsEast = [\"troch\",\n                            \"obs\",\n                            \"plumb\"]\n\nclusterColorsWithHetsEast = [\"yellow\",\n                            \"orange\",\n                            \"red\"]\n\n# limit the SNPs to those with variants greater than 50% in \n# at least one pop, and less than 50% in at least one pop.\n# (So for each column in `freqs`, the maximum should be &gt; 0.5 \n# and the minimum should be &lt; 0.5)\n# Calculate allele freqs and sample sizes\nfreqs, sampleSizes = getFreqsAndSampleSizesBySexForZ(genos_selectedSNPs, ind_with_metadata_included.sex, clusterMembershipWithHets, clusterNamesWithHetsEast)\nprintln(\"Calculated population allele frequencies and sample sizes\")\nselectedSNPs = (vec(maximum(freqs, dims=1)) .&gt; 0.5) .& (vec(minimum(freqs, dims=1)) .&lt; 0.5)\ngenos_selectedSNPs2 = genos_selectedSNPs[:, selectedSNPs]\npos_selectedSNPs2 = pos_selectedSNPs[selectedSNPs, :]\nfreqs_selectedSNPs2 = freqs[:, selectedSNPs]\n\nnumIndsToPlotWithHetsEast = fill(100, length(clusterNamesWithHetsEast))\n\ngenosForGBI, indMetadataforGBI = limitIndsToPlot(clusterNamesWithHetsEast, numIndsToPlotWithHetsEast, \n                                            genos_selectedSNPs2, PCAmodelAll.metadata;\n                                            sortByMissing = true)\n\nplotGenotypeByIndividual(regionInfo, pos_selectedSNPs2,\n                genosForGBI, indMetadataforGBI, freqs_selectedSNPs2, clusterNamesWithHetsEast, clusterColorsWithHetsEast;\n                missingFractionAllowed = missingFractionAllowed,\n                indColorLeftProvided = false,\n                indColorRightProvided = true)\n\nCalculated population allele frequencies and sample sizes\n\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\n\n(Scene (768px, 960px):\n  0 Plots\n  2 Child Scenes:\n    ├ Scene (768px, 960px)\n    └ Scene (768px, 960px), Union{Missing, Int16}[0 0 … 0 0; 1 1 … 0 0; … ; 2 2 … 0 2; 2 2 … 0 2], [68434641, 68434654, 68533951, 68795208, 69010058, 69062405, 69103733, 69164105, 69293527, 69321751  …  73316610, 73344945, 73389057, 73471732, 73504381, 73504408, 73504704, 73743078, 73743083, 73743128], 158×18 DataFrame\n Row │ ind                           ID                            location  g ⋯\n     │ String                        String                        String7   S ⋯\n─────┼──────────────────────────────────────────────────────────────────────────\n   1 │ GW_Armando_plate1_TTGW70      GW_Armando_plate1_TTGW70      SA        l ⋯\n   2 │ GW_Armando_plate1_TTGW72      GW_Armando_plate1_TTGW72      SA        l\n   3 │ GW_Armando_plate1_TTGW78      GW_Armando_plate1_TTGW78      SA        l\n   4 │ GW_Armando_plate2_TTGW77      GW_Armando_plate2_TTGW77      SA        l\n   5 │ GW_Armando_plate2_TTGW79      GW_Armando_plate2_TTGW79      SA        l ⋯\n   6 │ GW_Armando_plate2_TTGW80      GW_Armando_plate2_TTGW80      SA        l\n   7 │ GW_Armando_plate2_TTGW73      GW_Armando_plate2_TTGW73      SA        l\n   8 │ GW_Armando_plate2_TTGW75      GW_Armando_plate2_TTGW75      SA        l\n   9 │ GW_Lane5_PT12                 GW_Lane5_PT12                 KL        l ⋯\n  10 │ GW_Armando_plate1_TTGW-15-08  GW_Armando_plate1_TTGW-15-08  SR        l\n  11 │ GW_Armando_plate2_TTGW28      GW_Armando_plate2_TTGW28      SR        l\n  ⋮  │              ⋮                             ⋮                   ⋮        ⋱\n 149 │ GW_Armando_plate1_JF24G02     GW_Armando_plate1_JF24G02     VB        p\n 150 │ GW_Armando_plate1_JF23G02     GW_Armando_plate1_JF23G02     VB        p ⋯\n 151 │ GW_Armando_plate1_JG02G02     GW_Armando_plate1_JG02G02     PR        p\n 152 │ GW_Armando_plate1_JG02G04     GW_Armando_plate1_JG02G04     PR        p\n 153 │ GW_Armando_plate2_JG01G01     GW_Armando_plate2_JG01G01     PR        p\n 154 │ GW_Armando_plate2_JG02G01     GW_Armando_plate2_JG02G01     PR        p ⋯\n 155 │ GW_Armando_plate2_JG02G03     GW_Armando_plate2_JG02G03     PR        p\n 156 │ GW_Lane5_SL1                  GW_Lane5_SL1                  SL        p\n 157 │ GW_Lane5_SL2                  GW_Lane5_SL2                  SL        p\n 158 │ GW_Armando_plate1_JF10G03     GW_Armando_plate1_JF10G03     ST        p ⋯\n                                                 15 columns and 137 rows omitted)\n\n\n\n\n\nShow just the northern area\n\nclusterNamesWithHetsNorth = [\"vir\",\n                            \"plumb\"]\n\nclusterColorsWithHetsNorth = [\"blue\",\n                            \"red\"]\n\n# limit the SNPs to those with variants greater than 50% in \n# at least one pop, and less than 50% in at least one pop.\n# (So for each column in `freqs`, the maximum should be &gt; 0.5 \n# and the minimum should be &lt; 0.5)\n# Calculate allele freqs and sample sizes\nfreqs, sampleSizes = getFreqsAndSampleSizes(genos_selectedSNPs, clusterMembershipWithHets, clusterNamesWithHetsNorth)\nprintln(\"Calculated population allele frequencies and sample sizes\")\nselectedSNPs = (vec(maximum(freqs, dims=1)) .&gt; 0.5) .& (vec(minimum(freqs, dims=1)) .&lt; 0.5)\ngenos_selectedSNPs2 = genos_selectedSNPs[:, selectedSNPs]\npos_selectedSNPs2 = pos_selectedSNPs[selectedSNPs, :]\nfreqs_selectedSNPs2 = freqs[:, selectedSNPs]\n\nnumIndsToPlotWithHets = [100, 100, 100]\n\ngenosForGBI, indMetadataforGBI = limitIndsToPlot(clusterNamesWithHetsNorth, numIndsToPlotWithHets, \n                                            genos_selectedSNPs2, PCAmodelAll.metadata;\n                                            sortByMissing = true)\n\nplotGenotypeByIndividual(regionInfo, pos_selectedSNPs2,\n                genosForGBI, indMetadataforGBI, freqs_selectedSNPs2, clusterNamesWithHetsNorth, clusterColorsWithHetsNorth;\n                missingFractionAllowed = missingFractionAllowed,\n                indColorLeftProvided = false,\n                indColorRightProvided = true)\n\nCalculated population allele frequencies and sample sizes\n\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\n\n(Scene (768px, 960px):\n  0 Plots\n  2 Child Scenes:\n    ├ Scene (768px, 960px)\n    └ Scene (768px, 960px), Union{Missing, Int16}[0 0 … 0 0; 0 0 … 0 0; … ; 2 2 … 2 2; 2 2 … 2 2], [68434681, 68506332, 68506385, 68682243, 69010058, 69062410, 69103733, 69253971, 69267458, 69275355  …  73309732, 73316610, 73344945, 73347645, 73389057, 73471732, 73504381, 73558384, 73563098, 73743078], 110×18 DataFrame\n Row │ ind                        ID                         location  group   ⋯\n     │ String                     String                     String7   String1 ⋯\n─────┼──────────────────────────────────────────────────────────────────────────\n   1 │ GW_Armando_plate1_JF12G04  GW_Armando_plate1_JF12G04  ST_vi     vir     ⋯\n   2 │ GW_Armando_plate2_JF30G01  GW_Armando_plate2_JF30G01  ST_vi     vir_mis\n   3 │ GW_Lane5_STvi3             GW_Lane5_STvi3             ST_vi     vir\n   4 │ GW_Armando_plate2_JF03G01  GW_Armando_plate2_JF03G01  ST_vi     vir_mis\n   5 │ GW_Lane5_STvi1             GW_Lane5_STvi1             ST_vi     vir     ⋯\n   6 │ GW_Lane5_STvi2             GW_Lane5_STvi2             ST_vi     vir\n   7 │ GW_Armando_plate2_JF16G02  GW_Armando_plate2_JF16G02  DV_vi     plumb_v\n   8 │ GW_Armando_plate1_JF16G01  GW_Armando_plate1_JF16G01  DV_vi     plumb_v\n   9 │ GW_Armando_plate2_JE31G01  GW_Armando_plate2_JE31G01  VB_vi     vir_mis ⋯\n  10 │ GW_Armando_plate2_JF03G02  GW_Armando_plate2_JF03G02  VB_vi     vir_mis\n  11 │ GW_Lane5_YK5               GW_Lane5_YK5               YK        vir\n  ⋮  │             ⋮                          ⋮                 ⋮          ⋮   ⋱\n 101 │ GW_Armando_plate1_JF24G02  GW_Armando_plate1_JF24G02  VB        plumb\n 102 │ GW_Armando_plate1_JF23G02  GW_Armando_plate1_JF23G02  VB        plumb   ⋯\n 103 │ GW_Armando_plate1_JG02G02  GW_Armando_plate1_JG02G02  PR        plumb\n 104 │ GW_Armando_plate1_JG02G04  GW_Armando_plate1_JG02G04  PR        plumb\n 105 │ GW_Armando_plate2_JG01G01  GW_Armando_plate2_JG01G01  PR        plumb\n 106 │ GW_Armando_plate2_JG02G01  GW_Armando_plate2_JG02G01  PR        plumb   ⋯\n 107 │ GW_Armando_plate2_JG02G03  GW_Armando_plate2_JG02G03  PR        plumb\n 108 │ GW_Lane5_SL1               GW_Lane5_SL1               SL        plumb\n 109 │ GW_Lane5_SL2               GW_Lane5_SL2               SL        plumb\n 110 │ GW_Armando_plate1_JF10G03  GW_Armando_plate1_JF10G03  ST        plumb_v ⋯\n                                                  15 columns and 89 rows omitted)\n\n\n\n\n\nDo a PCA based on above info, on just the west side of the ring\n\ngroups_to_plot_PCA_westside = [\"vir\",\"vir_S\",\"nit\", \"lud_PK\", \"lud_KS\", \"lud_central\", \"lud_Sath\", \"lud_ML\",\"troch_west\",\"troch_LN\"]\ngroup_colors_PCA_westside = [\"blue\",\"turquoise1\",\"grey\",\"seagreen4\",\"seagreen3\",\"seagreen2\",\"olivedrab3\",\"olivedrab2\",\"olivedrab1\",\"yellow\"]\n\n# without nitidus:\ngroups_to_plot_PCA_westside = [\"vir\",\"vir_S\", \"lud_PK\", \"lud_KS\", \"lud_central\", \"lud_Sath\", \"lud_ML\",\"troch_west\",\"troch_LN\"]\ngroup_colors_PCA_westside = [\"blue\",\"turquoise1\",\"seagreen4\",\"seagreen3\",\"seagreen2\",\"olivedrab3\",\"olivedrab2\",\"olivedrab1\",\"yellow\"]\n\nPCAmodel = plotPCA(genos_highViSHetRegion_imputed, ind_with_metadata_included, \n            groups_to_plot_PCA_westside, group_colors_PCA_westside; \n            sampleSet = \"greenish warblers (west side)\", regionText = regionText,\n            flip1 = flipPC1, flip2 = flipPC2,\n            lineOpacity = 0.7, fillOpacity = 0.6,\n            symbolSize = 14, showTitle = true,\n            xLabelText = string(\"Region PC1\"), yLabelText = string(\"Region PC2\"),\n            showPlot = false)\n\ndisplay(PCAmodel.PCAfig)\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\nCairoMakie.Screen{IMAGE}\n\n\n\n\nDo a PCA based on above info, on just the east side of the ring\n\ngroups_to_plot_PCA_eastside = [\"troch_LN\",\"troch_EM\",\"obs\",\"plumb_BJ\",\"plumb\",\"plumb_vir\"]\ngroup_colors_PCA_eastside = [\"yellow\",\"gold\",\"orange\",\"pink\",\"red\",\"purple\"];\n\nPCAmodel = plotPCA(genos_highViSHetRegion_imputed, ind_with_metadata_included, \n            groups_to_plot_PCA_eastside, group_colors_PCA_eastside; \n            sampleSet = \"greenish warblers (east side)\", regionText = regionText,\n            flip1 = flipPC1, flip2 = flipPC2,\n            lineOpacity = 0.7, fillOpacity = 0.6,\n            symbolSize = 14, showTitle = true,\n            xLabelText = string(\"Region PC1\"), yLabelText = string(\"Region PC2\"),\n            showPlot = false)\n\ndisplay(PCAmodel.PCAfig)\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\nCairoMakie.Screen{IMAGE}\n\n\n\n\nShow PCA for just the western haploblocks of the ring, for just chr Z\n\nind_with_metadata_included_temp = copy(ind_with_metadata_included)\n\n# Leave out the individuals that don't have western haplogroup genotypes\nhapGroups_to_plot_PCA_westside = [\"vir\",\"vir_lud\", \"nit\", \"lud\"]\nselection = map(in(hapGroups_to_plot_PCA_westside), clusterMembershipWithHets)\nind_with_metadata_included_temp.Fst_group[.!selection] .= \"ignore\" # write over the group name so function below won't plot that individual\n\ngroups_to_plot_PCA_westside = [\"vir\",\"vir_S\",\"nit\", \"lud_PK\", \"lud_KS\", \"lud_central\", \"lud_Sath\", \"lud_ML\",\"troch_west\",\"troch_LN\"]\ngroup_colors_PCA_westside = [\"blue\",\"turquoise1\",\"grey\",\"seagreen4\",\"seagreen3\",\"seagreen2\",\"olivedrab3\",\"olivedrab2\",\"olivedrab1\",\"yellow\"]\n\nflipPC1 = true\nflipPC2 = true\n\nPCAmodelHapWest = plotPCA(genos_highViSHetRegion_imputed, ind_with_metadata_included_temp, \n            groups_to_plot_PCA_westside, group_colors_PCA_westside; \n            sampleSet = \"greenish warblers west haps\", regionText = regionText,\n            flip1 = flipPC1, flip2 = flipPC2,\n            lineOpacity = 0.7, fillOpacity = 0.6,\n            symbolSize = 14, showTitle = true,\n            xLabelText = string(\"Region PC1\"), yLabelText = string(\"Region PC2\"),\n            showPlot = false)\n\ndisplay(PCAmodelHapWest.PCAfig)\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\nCairoMakie.Screen{IMAGE}\n\n\n\n\nShow PCA for just the eastern haploblocks of the ring, for just chr Z\n\nind_with_metadata_included_temp = copy(ind_with_metadata_included)\n\n# Leave out the individuals that don't have western haplogroup genotypes\nhapGroups_to_plot_PCA_eastside = [\"troch\", \"obs\", \"plumb\"]\nselection = map(in(hapGroups_to_plot_PCA_eastside), clusterMembershipWithHets)\nind_with_metadata_included_temp.Fst_group[.!selection] .= \"ignore\" # write over the group name so function below won't plot that individual\n\ngroups_to_plot_PCA_eastside = [\"troch_LN\",\"troch_EM\",\"obs\",\"plumb\",\"plumb_vir\",\"plumb_BJ\"]\ngroup_colors_PCA_eastside = [\"yellow\",\"gold\",\"orange\",\"red\",\"purple\",\"pink\"];\n\nflipPC1 = true\nflipPC2 = true\n\nPCAmodelHapEast = plotPCA(genos_highViSHetRegion_imputed, ind_with_metadata_included_temp, \n            groups_to_plot_PCA_eastside, group_colors_PCA_eastside; \n            sampleSet = \"greenish warblers east haps\", regionText = regionText,\n            flip1 = flipPC1, flip2 = flipPC2,\n            lineOpacity = 0.7, fillOpacity = 0.6,\n            symbolSize = 14, showTitle = true,\n            xLabelText = string(\"Region PC1\"), yLabelText = string(\"Region PC2\"),\n            showPlot = false)\n\ndisplay(PCAmodelHapEast.PCAfig)\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\nCairoMakie.Screen{IMAGE}\n\n\n\n\nDo a PCA based on a same-size region elsewhere on the Z (with low ViSHet):\n\n# get length of region\nlengthHighViSHetRegion = positionMax - positionMin\n\nleftLocus = 1_000_000 # start at 1 Mb from left side\nrightLocus = leftLocus + lengthHighViSHetRegion\nregionText_lowViSHetRegion = string(\"chr \", chr, \" \",leftLocus,\" to \",rightLocus)\n\nlociSelection = (leftLocus .&lt;= pos_region.position .&lt;= rightLocus)\ngenotypes_lowViSHetRegion = genotypes_region[:, lociSelection]\n\n# impute missing genotypes:\n\ngenotypes_lowViSHetRegion_imputed = Impute.svd(Matrix{Union{Missing, Float32}}(genotypes_lowViSHetRegion))\n\nflipPC1 = true\nflipPC2 = true\n\nPCAmodel = plotPCA(genotypes_lowViSHetRegion_imputed, ind_with_metadata_included, \n            groups_to_plot_PCA, group_colors_PCA; \n            sampleSet = \"greenish warblers\", regionText = regionText_lowViSHetRegion,\n            flip1 = flipPC1, flip2 = flipPC2,\n            lineOpacity = 0.7, fillOpacity = 0.6,\n            symbolSize = 14, showTitle = true,\n            xLabelText = string(\"Region PC1\"), yLabelText = string(\"Region PC2\"),\n            showPlot = false)\n\ndisplay(PCAmodel.PCAfig)\nif false  # set to true to save plot\n    save(\"FigureS2A_gwZ_nonHLBRarbitrary_from_Julia.png\", PCAmodel.PCAfig, px_per_unit = 2.0)\nend \n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238",
    "crumbs": [
      "Home",
      "Greenish Warbler heterozygosity variance analysis"
    ]
  },
  {
    "objectID": "GW_Heterozygosity_Variance.html#do-similar-as-above-but-for-chr-15",
    "href": "GW_Heterozygosity_Variance.html#do-similar-as-above-but-for-chr-15",
    "title": "Greenish Warbler heterozygosity variance analysis",
    "section": "Do similar as above but for chr 15:",
    "text": "Do similar as above but for chr 15:\n\n# choose scaffold\nchr = \"gw15\"\n\npositionMin, positionMax, regionText, \n    windowedIndHetStanRegion, meanAcrossRegionIndHetStan,\n    genos_highViSHetRegion, pos_highViSHetRegion, regionInfo = \n    getWindowedIndHetStanRegion(genosOnly_included, \n                            pos_SNP_filtered, \n                            highViSHetRegions, chr;\n                            windowSize = 500)\n\n# inspect values for mean IndHetStan per individual for that high ViSHet region\nplot(meanAcrossRegionIndHetStan)\n\n# Add column to metadata containing the regionIndHetStan for this highHet region:\ncommand = \"ind_with_metadata_included.\" * chr * \"_regionIndHetStan = meanAcrossRegionIndHetStan\"\neval(Meta.parse(command)) # this executes the command constructed above\nind_with_metadata_included.regionIndHetStan = meanAcrossRegionIndHetStan\n\n#names(ind_with_metadata_included)\n\n# check whether missing data related to heterozygosity (good news: not really)\nplot(ind_with_metadata_included.numMissings, meanAcrossRegionIndHetStan)\n\n# PCA of all individuals:\n\ngenos_highViSHetRegion_imputed = Impute.svd(Matrix{Union{Missing, Float32}}(genos_highViSHetRegion))\n\nflipPC1 = true\nflipPC2 = true\n\nPCAmodelAll = plotPCA(genos_highViSHetRegion_imputed, ind_with_metadata_included, \n            groups_to_plot_PCA, group_colors_PCA; \n            sampleSet = \"greenish warblers\", regionText = regionText,\n            flip1 = flipPC1, flip2 = flipPC2,\n            lineOpacity = 0.7, fillOpacity = 0.6,\n            symbolSize = 14, showTitle = true,\n            xLabelText = string(\"Region PC1\"), yLabelText = string(\"Region PC2\"),\n            showPlot = false)\n\ndisplay(PCAmodelAll.PCAfig)\n\n# Add PC values to metadata for individuals included in PCA above:\nif flipPC1\n    PCAmodelAll.metadata.PC1 = -1 .* PCAmodelAll.values[1,:]\nelse \n    PCAmodelAll.metadata.PC1 = PCAmodelAll.values[1,:]\nend\nif flipPC2\n    PCAmodelAll.metadata.PC2 = -1 .* PCAmodelAll.values[2,:]\nelse\n    PCAmodelAll.metadata.PC2 = PCAmodelAll.values[2,:]\nend\nPCAmodelAll.metadata.PC3 = PCAmodelAll.values[3,:]\n\n# For the next bit to work with above, make sure that all individuals in the above `plotPCA` command\n# are included in the `groups_to_plot_PCA`\n\n# choose inds with low IndHet in high ViSHet region:\nindSelection_lowIndHetStan = (meanAcrossRegionIndHetStan .&lt; 1.75) \n\n#Plot only the lowIndHetStan individuals:\n\nf = CairoMakie.Figure()\nax = Axis(f[1, 1],\n    title = \"PC1 vs. PC2, only low heterozygosity\",\n    xlabel = \"Region PC1\", xlabelsize = 24,\n    ylabel = \"Region PC2\", ylabelsize = 24,\n    autolimitaspect = 1)\nhidedecorations!(ax, label = false, ticklabels = false, ticks = false) # hide background lattice\nfor i in eachindex(groups_to_plot_PCA) \n    selection = (PCAmodelAll.metadata.Fst_group .== groups_to_plot_PCA[i]) .& indSelection_lowIndHetStan\n    CairoMakie.scatter!(ax, PCAmodelAll.metadata.PC1[selection], PCAmodelAll.metadata.PC2[selection], marker = :diamond, color = (group_colors_PCA[i], 0.6), markersize = 14, strokewidth=0.5, strokecolor = (\"black\", 0.7))\nend\ndisplay(f)\n\nGood news: 1 region on that scaffold\n\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\nCairoMakie.Screen{IMAGE}\n\n\n\nSave the individual colors in the metadata\n\nindColors = fill(\"\", size(PCAmodelAll.metadata, 1))\nfor i in axes(PCAmodelAll.metadata, 1)\n    indColors[i] = group_colors_PCA[findfirst(groups_to_plot_PCA .== PCAmodelAll.metadata.Fst_group[i])]\nend\nPCAmodelAll.metadata.indColorLeft = indColors\nPCAmodelAll.metadata.indColorRight = indColors\n\n257-element Vector{String}:\n \"blue\"\n \"red\"\n \"red\"\n \"red\"\n \"red\"\n \"red\"\n \"red\"\n \"purple\"\n \"red\"\n \"red\"\n \"red\"\n \"blue\"\n \"red\"\n ⋮\n \"olivedrab2\"\n \"olivedrab2\"\n \"olivedrab2\"\n \"olivedrab2\"\n \"olivedrab2\"\n \"olivedrab2\"\n \"olivedrab2\"\n \"olivedrab2\"\n \"olivedrab2\"\n \"olivedrab2\"\n \"olivedrab2\"\n \"olivedrab2\"\n\n\n\n\nPlot PC1 vs. PC2:\n\nf = CairoMakie.Figure()\nax = Axis(f[1, 1],\n    title = \"PC1 vs. PC2\",\n    xlabel = \"Region PC1\", xlabelsize = 24,\n    ylabel = \"Region PC2\", ylabelsize = 24,\n    autolimitaspect = 1)\nhidedecorations!(ax, label = false, ticklabels = false, ticks = false) # hide background lattice\nfor i in eachindex(groups_to_plot_PCA) \n    selection = PCAmodelAll.metadata.Fst_group .== groups_to_plot_PCA[i]\n    CairoMakie.scatter!(ax, PCAmodelAll.metadata.PC1[selection], PCAmodelAll.metadata.PC2[selection], marker = :diamond, color = (group_colors_PCA[i], 0.6), markersize = 14, strokewidth=0.5, strokecolor = (\"black\", 0.7))\nend\ndisplay(f)\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\nCairoMakie.Screen{IMAGE}\n\n\n\n\nPlot PC1 vs. PC3:\n\nf = CairoMakie.Figure()\nax = Axis(f[1, 1],\n    title = \"PC1 vs. PC3\",\n    xlabel = \"Region PC1\", xlabelsize = 24,\n    ylabel = \"Region PC3\", ylabelsize = 24,\n    autolimitaspect = 1)\nhidedecorations!(ax, label = false, ticklabels = false, ticks = false) # hide background lattice\nfor i in eachindex(groups_to_plot_PCA) \n    selection = PCAmodelAll.metadata.Fst_group .== groups_to_plot_PCA[i]\n    CairoMakie.scatter!(ax, PCAmodelAll.metadata.PC1[selection], PCAmodelAll.metadata.PC3[selection], marker = :diamond, color = (group_colors_PCA[i], 0.6), markersize = 14, strokewidth=0.5, strokecolor = (\"black\", 0.7))\nend\ndisplay(f)\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\nCairoMakie.Screen{IMAGE}\n\n\n\n\nAt chr 15 high ViSHet region, there are only 5 clear haplogroups (PC3 does not distinguish vir and lud). Divide samples into those groups, based on PCA scores, and then calculate pi within and pi between\n\nclusterNames = [\"virLud\",\n                \"nit\",\n                \"troch\",\n                \"obs\",\n                \"plumb\"]\n\nclusterColors = [\"green\",\n                \"grey\",\n                \"yellowgreen\",\n                \"orange\",\n                \"red\"]\n\nvirLud = (PCAmodelAll.metadata.PC1 .&lt; -5) .& \n            indSelection_lowIndHetStan\nnit = (-5 .&lt; PCAmodelAll.metadata.PC1 .&lt; -2.5) .&\n            indSelection_lowIndHetStan\ntroch = (-1 .&lt; PCAmodelAll.metadata.PC1 .&lt; 2.5) .&\n            (PCAmodelAll.metadata.PC3 .&lt; 1) .&\n            indSelection_lowIndHetStan\nobs = (0 .&lt; PCAmodelAll.metadata.PC1 .&lt; 3) .&\n            (-5.5 .&lt; PCAmodelAll.metadata.PC2 .&lt; -3) .& \n            indSelection_lowIndHetStan\nplumb = (7 .&lt; PCAmodelAll.metadata.PC1) .& \n            indSelection_lowIndHetStan\n\n# check the individuals in each group\nPCAmodelAll.metadata.Fst_group[virLud]\nPCAmodelAll.metadata.Fst_group[nit]\nPCAmodelAll.metadata.Fst_group[troch]\nPCAmodelAll.metadata.Fst_group[obs]\nPCAmodelAll.metadata.Fst_group[plumb]\n\nclusterArray = [virLud nit troch obs plumb]\n\n# show numbers in each group\nprintln(\"The numbers in each group are $(sum(clusterArray, dims=1)) and the sum of those is $(sum(sum(clusterArray, dims=1)))\")\n\n# create vectors that indicate the groups and plot order for this analysis:\nclusterMembership = fill(\"none\", nrow(PCAmodelAll.metadata))\nplotOrder = fill(-9, nrow(PCAmodelAll.metadata))\nfor i in eachindex(clusterArray[1,:])\n    clusterMembership[clusterArray[:,i]] .= clusterNames[i]\n    plotOrder[clusterArray[:,i]] .= i\nend\n\n# Calculate allele freqs and sample sizes\nfreqs, sampleSizes = getFreqsAndSampleSizes(genos_highViSHetRegion, clusterMembership, clusterNames)\nprintln(\"Calculated population allele frequencies and sample sizes\")\n\n# Calculate per-site pi (within-group nucleotide distance)\n\nsitePi = getSitePi(freqs, sampleSizes)\n\n# calculate pairwise Dxy per site, using data in \"freqs\" and groups in \"groups\"\n\nDxy, pairwiseDxyClusterNames = getDxy(freqs, clusterNames)\n\nFst, FstNumerator, FstDenominator, pairwiseFstClusterNames = getFst(freqs, sampleSizes, clusterNames; among=false)  # set among to FALSE if no among Fst wanted (some things won't work without it) \n\n# Now get averages of pi and Dxy for whole region:\n\nregionPiTable = DataFrame(cluster = clusterNames, pi = getRegionPi(sitePi))\n#= 5×2 DataFrame\n Row │ cluster  pi         \n     │ String   Float64    \n─────┼─────────────────────\n   1 │ virLud   0.00892738\n   2 │ nit      0.00677711\n   3 │ troch    0.00725483\n   4 │ obs      0.0083953\n   5 │ plumb    0.00673292 =#\n\nregionDxyTable = DataFrame(cluster_pair = pairwiseDxyClusterNames, Dxy = getRegionDxy(Dxy))\n#= 10×2 DataFrame\n Row │ cluster_pair  Dxy       \n     │ String        Float64   \n─────┼─────────────────────────\n   1 │ virLud_nit    0.032793\n   2 │ virLud_troch  0.0326016\n   3 │ virLud_obs    0.0334515\n   4 │ virLud_plumb  0.041869\n   5 │ nit_troch     0.0389012\n   6 │ nit_obs       0.0393449\n   7 │ nit_plumb     0.0476769\n   8 │ troch_obs     0.0150895\n   9 │ troch_plumb   0.0294242\n  10 │ obs_plumb     0.0297807 =#\n\n# Make a genotype-by-individual plot using all variable loci in the region,\nmissingFractionAllowed = 0.1\n# in metadata, replace `Fst_group` column with cluster info (needed for the function below):\nPCAmodelAll.metadata.original_Fst_groups = PCAmodelAll.metadata.Fst_group # store the Fst_groups in this\nPCAmodelAll.metadata.Fst_group = clusterMembership\nPCAmodelAll.metadata.original_plot_order = PCAmodelAll.metadata.plot_order # store the original plot_order in this\nPCAmodelAll.metadata.plot_order = plotOrder\n\n# limit the SNPs to those with variants greater than 50% in \n# at least one pop, and less than 50% in at least one pop.\n# (So for each column in `freqs`, the maximum should be &gt; 0.5 \n# and the minimum should be &lt; 0.5)\nselectedSNPs = (vec(maximum(freqs, dims=1)) .&gt; 0.5) .& (vec(minimum(freqs, dims=1)) .&lt; 0.5)\ngenos_selectedSNPs = genos_highViSHetRegion[:, selectedSNPs]\npos_selectedSNPs = pos_highViSHetRegion[selectedSNPs, :]\nFst_selectedSNPs = Fst[:, selectedSNPs]\nfreqs_selectedSNPs = freqs[:, selectedSNPs]\n\n# limit the number of individuals per group to plot\nnumIndsToPlot = fill(15, length(clusterNames))\n\ngenosForGBI, indMetadataforGBI = limitIndsToPlot(clusterNames, numIndsToPlot, \n                                            genos_selectedSNPs, PCAmodelAll.metadata;\n                                            sortByMissing = true)\n\nplotGenotypeByIndividual(regionInfo, pos_selectedSNPs,\n                genosForGBI, indMetadataforGBI, freqs_selectedSNPs, clusterNames, clusterColors;\n                missingFractionAllowed = missingFractionAllowed,\n                indColorRightProvided = true)\n\nThe numbers in each group are [78 2 71 5 70] and the sum of those is 226\nCalculated population allele frequencies and sample sizes\n\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\n\n(Scene (768px, 960px):\n  0 Plots\n  2 Child Scenes:\n    ├ Scene (768px, 960px)\n    └ Scene (768px, 960px), Union{Missing, Int16}[0 0 … 0 0; 0 1 … 0 0; … ; 0 2 … 2 0; 0 2 … 2 0], [5282897, 5282956, 5309350, 5337401, 5354821, 5354857, 5490417, 5522381, 5528891, 5684034  …  7539351, 7539368, 7571024, 7598479, 7598515, 7620519, 7678099, 7790537, 7813358, 7832029], 52×20 DataFrame\n Row │ ind                           ID                            location  g ⋯\n     │ String                        String                        String7   S ⋯\n─────┼──────────────────────────────────────────────────────────────────────────\n   1 │ GW_Armando_plate1_AB1         GW_Armando_plate1_AB1         AB        v ⋯\n   2 │ GW_Armando_plate1_JF12G04     GW_Armando_plate1_JF12G04     ST_vi     v\n   3 │ GW_Armando_plate1_JF16G01     GW_Armando_plate1_JF16G01     DV_vi     p\n   4 │ GW_Armando_plate1_TL3         GW_Armando_plate1_TL3         TL        v\n   5 │ GW_Armando_plate1_TTGW10      GW_Armando_plate1_TTGW10      SU        l ⋯\n   6 │ GW_Armando_plate1_TTGW19      GW_Armando_plate1_TTGW19      TH        l\n   7 │ GW_Armando_plate1_TTGW59      GW_Armando_plate1_TTGW59      NG        l\n   8 │ GW_Armando_plate1_TTGW-15-07  GW_Armando_plate1_TTGW-15-07  SR        l\n   9 │ GW_Armando_plate2_JE31G01     GW_Armando_plate2_JE31G01     VB_vi     v ⋯\n  10 │ GW_Armando_plate2_JF16G02     GW_Armando_plate2_JF16G02     DV_vi     p\n  11 │ GW_Armando_plate2_TTGW09      GW_Armando_plate2_TTGW09      SU        l\n  ⋮  │              ⋮                             ⋮                   ⋮        ⋱\n  43 │ GW_Armando_plate1_JF13G01     GW_Armando_plate1_JF13G01     ST        p\n  44 │ GW_Armando_plate1_JF15G03     GW_Armando_plate1_JF15G03     DV        p ⋯\n  45 │ GW_Armando_plate1_JF22G01     GW_Armando_plate1_JF22G01     MB        p\n  46 │ GW_Armando_plate1_JF23G01     GW_Armando_plate1_JF23G01     VB        p\n  47 │ GW_Armando_plate1_JF23G02     GW_Armando_plate1_JF23G02     VB        p\n  48 │ GW_Armando_plate1_JF24G02     GW_Armando_plate1_JF24G02     VB        p ⋯\n  49 │ GW_Armando_plate1_JF26G01     GW_Armando_plate1_JF26G01     ST        p\n  50 │ GW_Armando_plate1_JF27G01     GW_Armando_plate1_JF27G01     ST        p\n  51 │ GW_Armando_plate1_JF29G01     GW_Armando_plate1_JF29G01     ST        p\n  52 │ GW_Armando_plate1_JG02G04     GW_Armando_plate1_JG02G04     PR        p ⋯\n                                                  17 columns and 31 rows omitted)\n\n\n\n\n\nNow show a GBI plot like above, but with heterozygotes:\n\nclusterNamesWithHets = [\"virLud\",\n                        \"nit\",\n                        \"virLud_troch\",\n                        \"troch\",\n                        \"obs\",\n                        \"plumb\",\n                        \"vir_plumb\"]\n\nclusterColorsWithHets = [\"blue\",\n                        \"grey\",\n                        \"yellowgreen\",\n                        \"yellow\",\n                        \"orange\",\n                        \"red\",\n                        \"purple\"]\n\nvirLud_troch = (-5 .&lt; PCAmodelAll.metadata.PC1 .&lt; 0) .&\n                (-5.5 .&lt; PCAmodelAll.metadata.PC2 .&lt; 0) .&\n                 .!indSelection_lowIndHetStan\nvir_plumb = (-2 .&lt; PCAmodelAll.metadata.PC1 .&lt; 2) .&\n                (3 .&lt; PCAmodelAll.metadata.PC2 .&lt; 5.5) .&\n                 .!indSelection_lowIndHetStan\n\nclusterArray = [virLud nit virLud_troch troch obs plumb vir_plumb]\n\nsum(clusterArray, dims=1)\n\nif sum(sum(clusterArray, dims=1)) == size(PCAmodelAll.metadata, 1)\n    println(\"Good news: Individuals included in a group matches total number of individuals\")\nelse \n    println(\"Warning: Individuals included in a group ($(sum(sum(clusterArray, dims=1)))) do NOT match total number of individuals ($(size(PCAmodelAll.metadata, 1)))\")\nend\n\n# create vectors that indicate the groups and plot order for this analysis:\nclusterMembershipWithHets = fill(\"none\", nrow(PCAmodelAll.metadata))\nplotOrderWithHets = fill(-9, nrow(PCAmodelAll.metadata))\nfor i in eachindex(clusterArray[1,:])\n    clusterMembershipWithHets[clusterArray[:,i]] .= clusterNamesWithHets[i]\n    plotOrderWithHets[clusterArray[:,i]] .= i\nend\n\n# Add column to main metadata object containing the cluster membership for this highHet region:\ncommand = \"ind_with_metadata_included.\" * chr * \"_cluster = clusterMembershipWithHets\"\neval(Meta.parse(command)) # this executes the command constructed above\n\n# in metadata, replace `Fst_group` column with cluster info (needed for the function below):\nPCAmodelAll.metadata.Fst_group = clusterMembershipWithHets\nPCAmodelAll.metadata.plot_order = plotOrderWithHets\n\n# limit the number of individuals per group to plot\nnumIndsToPlotWithHets = fill(15, length(clusterNamesWithHets))\n\ngenosForGBI, indMetadataforGBI = limitIndsToPlot(clusterNamesWithHets, numIndsToPlotWithHets, \n                                            genos_selectedSNPs, PCAmodelAll.metadata;\n                                            sortByMissing = true)\n\nplotGenotypeByIndividual(regionInfo, pos_selectedSNPs,\n                genosForGBI, indMetadataforGBI, freqs_selectedSNPs, clusterNamesWithHets, clusterColorsWithHets;\n                missingFractionAllowed = missingFractionAllowed,\n                indColorLeftProvided = false,\n                indColorRightProvided = true)\n\nGood news: Individuals included in a group matches total number of individuals\n\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\n\n(Scene (768px, 960px):\n  0 Plots\n  2 Child Scenes:\n    ├ Scene (768px, 960px)\n    └ Scene (768px, 960px), Union{Missing, Int16}[0 0 … 0 0; 0 1 … 0 0; … ; 0 1 … 1 0; 0 1 … 2 0], [5282897, 5282956, 5309350, 5337401, 5354821, 5354857, 5490417, 5522381, 5528891, 5684034  …  7539351, 7539368, 7571024, 7598479, 7598515, 7620519, 7678099, 7790537, 7813358, 7832029], 70×20 DataFrame\n Row │ ind                           ID                            location  g ⋯\n     │ String                        String                        String7   S ⋯\n─────┼──────────────────────────────────────────────────────────────────────────\n   1 │ GW_Armando_plate1_AB1         GW_Armando_plate1_AB1         AB        v ⋯\n   2 │ GW_Armando_plate1_JF12G04     GW_Armando_plate1_JF12G04     ST_vi     v\n   3 │ GW_Armando_plate1_JF16G01     GW_Armando_plate1_JF16G01     DV_vi     p\n   4 │ GW_Armando_plate1_TL3         GW_Armando_plate1_TL3         TL        v\n   5 │ GW_Armando_plate1_TTGW10      GW_Armando_plate1_TTGW10      SU        l ⋯\n   6 │ GW_Armando_plate1_TTGW19      GW_Armando_plate1_TTGW19      TH        l\n   7 │ GW_Armando_plate1_TTGW59      GW_Armando_plate1_TTGW59      NG        l\n   8 │ GW_Armando_plate1_TTGW-15-07  GW_Armando_plate1_TTGW-15-07  SR        l\n   9 │ GW_Armando_plate2_JE31G01     GW_Armando_plate2_JE31G01     VB_vi     v ⋯\n  10 │ GW_Armando_plate2_JF16G02     GW_Armando_plate2_JF16G02     DV_vi     p\n  11 │ GW_Armando_plate2_TTGW09      GW_Armando_plate2_TTGW09      SU        l\n  ⋮  │              ⋮                             ⋮                   ⋮        ⋱\n  61 │ GW_Armando_plate1_JF23G01     GW_Armando_plate1_JF23G01     VB        p\n  62 │ GW_Armando_plate1_JF23G02     GW_Armando_plate1_JF23G02     VB        p ⋯\n  63 │ GW_Armando_plate1_JF24G02     GW_Armando_plate1_JF24G02     VB        p\n  64 │ GW_Armando_plate1_JF26G01     GW_Armando_plate1_JF26G01     ST        p\n  65 │ GW_Armando_plate1_JF27G01     GW_Armando_plate1_JF27G01     ST        p\n  66 │ GW_Armando_plate1_JF29G01     GW_Armando_plate1_JF29G01     ST        p ⋯\n  67 │ GW_Armando_plate1_JG02G04     GW_Armando_plate1_JG02G04     PR        p\n  68 │ GW_Armando_plate2_JF07G01     GW_Armando_plate2_JF07G01     ST        p\n  69 │ GW_Armando_plate2_JG01G01     GW_Armando_plate2_JG01G01     PR        p\n  70 │ GW_Armando_plate1_JF10G03     GW_Armando_plate1_JF10G03     ST        p ⋯\n                                                  17 columns and 49 rows omitted)\n\n\n\n\n\nShow just the west area (without nitidus)\n\nclusterNamesWithHetsWest = [\"virLud\",\n                        \"virLud_troch\",\n                        \"troch\"]\n\nclusterColorsWithHetsWest = [\"blue\",\n                        \"yellowgreen\",\n                        \"yellow\"]\n\n# limit the SNPs to those with variants greater than 50% in \n# at least one pop, and less than 50% in at least one pop.\n# (So for each column in `freqs`, the maximum should be &gt; 0.5 \n# and the minimum should be &lt; 0.5)\n# Calculate allele freqs and sample sizes\nfreqs, sampleSizes = getFreqsAndSampleSizes(genos_selectedSNPs, clusterMembershipWithHets, clusterNamesWithHetsWest)\nprintln(\"Calculated population allele frequencies and sample sizes\")\nselectedSNPs = (vec(maximum(freqs, dims=1)) .&gt; 0.5) .& (vec(minimum(freqs, dims=1)) .&lt; 0.5)\ngenos_selectedSNPs2 = genos_selectedSNPs[:, selectedSNPs]\npos_selectedSNPs2 = pos_selectedSNPs[selectedSNPs, :]\nfreqs_selectedSNPs2 = freqs[:, selectedSNPs]\n\nnumIndsToPlotWithHets = [100, 100, 100]\n\ngenosForGBI, indMetadataforGBI = limitIndsToPlot(clusterNamesWithHetsWest, numIndsToPlotWithHets, \n                                            genos_selectedSNPs2, PCAmodelAll.metadata;\n                                            sortByMissing = true)\n\nplotGenotypeByIndividual(regionInfo, pos_selectedSNPs2,\n                genosForGBI, indMetadataforGBI, freqs_selectedSNPs2, clusterNamesWithHetsWest, clusterColorsWithHetsWest;\n                missingFractionAllowed = missingFractionAllowed,\n                indColorLeftProvided = false,\n                indColorRightProvided = true)\n\nCalculated population allele frequencies and sample sizes\n\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\n\n(Scene (768px, 960px):\n  0 Plots\n  2 Child Scenes:\n    ├ Scene (768px, 960px)\n    └ Scene (768px, 960px), Union{Missing, Int16}[0 0 … 0 0; 0 1 … 0 0; … ; 2 2 … 101 2; 0 2 … 2 101], [5282897, 5282956, 5309350, 5354821, 5522381, 5692997, 5693003, 5697689, 5774179, 5777672  …  7339982, 7371724, 7371744, 7539368, 7598479, 7598515, 7620519, 7678099, 7790537, 7813358], 177×20 DataFrame\n Row │ ind                           ID                            location  g ⋯\n     │ String                        String                        String7   S ⋯\n─────┼──────────────────────────────────────────────────────────────────────────\n   1 │ GW_Armando_plate1_AB1         GW_Armando_plate1_AB1         AB        v ⋯\n   2 │ GW_Armando_plate1_JF12G04     GW_Armando_plate1_JF12G04     ST_vi     v\n   3 │ GW_Armando_plate1_JF16G01     GW_Armando_plate1_JF16G01     DV_vi     p\n   4 │ GW_Armando_plate1_TL3         GW_Armando_plate1_TL3         TL        v\n   5 │ GW_Armando_plate1_TTGW10      GW_Armando_plate1_TTGW10      SU        l ⋯\n   6 │ GW_Armando_plate1_TTGW17      GW_Armando_plate1_TTGW17      TH        l\n   7 │ GW_Armando_plate1_TTGW19      GW_Armando_plate1_TTGW19      TH        l\n   8 │ GW_Armando_plate1_TTGW59      GW_Armando_plate1_TTGW59      NG        l\n   9 │ GW_Armando_plate1_TTGW-15-07  GW_Armando_plate1_TTGW-15-07  SR        l ⋯\n  10 │ GW_Armando_plate2_JE31G01     GW_Armando_plate2_JE31G01     VB_vi     v\n  11 │ GW_Armando_plate2_JF16G02     GW_Armando_plate2_JF16G02     DV_vi     p\n  ⋮  │              ⋮                             ⋮                   ⋮        ⋱\n 168 │ GW_Lane5_PT2                  GW_Lane5_PT2                  ML        l\n 169 │ GW_Liz_GBS_Liz5190            GW_Liz_GBS_Liz5190            ML        l ⋯\n 170 │ GW_Liz_GBS_Liz6008            GW_Liz_GBS_Liz6008            ML        l\n 171 │ GW_Liz_GBS_Liz6478            GW_Liz_GBS_Liz6478            ML        l\n 172 │ GW_Lane5_LN12                 GW_Lane5_LN12                 LN        t\n 173 │ GW_Liz_GBS_Liz5178            GW_Liz_GBS_Liz5178            ML        l ⋯\n 174 │ GW_Liz_GBS_Liz5179            GW_Liz_GBS_Liz5179            ML        l\n 175 │ GW_Liz_GBS_Liz5194            GW_Liz_GBS_Liz5194            ML        l\n 176 │ GW_Lane5_MN1                  GW_Lane5_MN1                  MN        t\n 177 │ GW_Liz_GBS_Liz5144            GW_Liz_GBS_Liz5144            ML        l ⋯\n                                                 17 columns and 156 rows omitted)\n\n\n\n\n\nShow just the east area\n\nclusterNamesWithHetsEast = [\"troch\",\n                            \"obs\",\n                            \"plumb\"]\n\nclusterColorsWithHetsEast = [\"yellow\",\n                            \"orange\",\n                            \"red\"]\n\n# limit the SNPs to those with variants greater than 50% in \n# at least one pop, and less than 50% in at least one pop.\n# (So for each column in `freqs`, the maximum should be &gt; 0.5 \n# and the minimum should be &lt; 0.5)\n# Calculate allele freqs and sample sizes\nfreqs, sampleSizes = getFreqsAndSampleSizes(genos_selectedSNPs, clusterMembershipWithHets, clusterNamesWithHetsEast)\nprintln(\"Calculated population allele frequencies and sample sizes\")\nselectedSNPs = (vec(maximum(freqs, dims=1)) .&gt; 0.5) .& (vec(minimum(freqs, dims=1)) .&lt; 0.5)\ngenos_selectedSNPs2 = genos_selectedSNPs[:, selectedSNPs]\npos_selectedSNPs2 = pos_selectedSNPs[selectedSNPs, :]\nfreqs_selectedSNPs2 = freqs[:, selectedSNPs]\n\nnumIndsToPlotWithHetsEast = fill(100, length(clusterNamesWithHetsEast))\n\ngenosForGBI, indMetadataforGBI = limitIndsToPlot(clusterNamesWithHetsEast, numIndsToPlotWithHetsEast, \n                                            genos_selectedSNPs2, PCAmodelAll.metadata;\n                                            sortByMissing = true)\n\nplotGenotypeByIndividual(regionInfo, pos_selectedSNPs2,\n                genosForGBI, indMetadataforGBI, freqs_selectedSNPs2, clusterNamesWithHetsEast, clusterColorsWithHetsEast;\n                missingFractionAllowed = missingFractionAllowed,\n                indColorLeftProvided = false,\n                indColorRightProvided = true)\n\nCalculated population allele frequencies and sample sizes\n\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\n\n(Scene (768px, 960px):\n  0 Plots\n  2 Child Scenes:\n    ├ Scene (768px, 960px)\n    └ Scene (768px, 960px), Union{Missing, Int16}[2 1 … 0 1; 0 0 … 0 1; … ; 2 2 … 0 2; 2 2 … 1 2], [5282897, 5309350, 5337401, 5490417, 5522381, 5528891, 5684034, 5692997, 5693003, 5693043  …  7120357, 7161643, 7189896, 7286852, 7293716, 7374312, 7414344, 7539351, 7571024, 7598515], 146×20 DataFrame\n Row │ ind                         ID                          location  group ⋯\n     │ String                      String                      String7   Strin ⋯\n─────┼──────────────────────────────────────────────────────────────────────────\n   1 │ GW_Armando_plate1_TTGW01    GW_Armando_plate1_TTGW01    MN        troch ⋯\n   2 │ GW_Armando_plate1_TTGW05r2  GW_Armando_plate1_TTGW05r2  MN        troch\n   3 │ GW_Armando_plate1_TTGW63    GW_Armando_plate1_TTGW63    SP        lud_S\n   4 │ GW_Armando_plate1_TTGW65    GW_Armando_plate1_TTGW65    SP        lud_S\n   5 │ GW_Armando_plate1_TTGW70    GW_Armando_plate1_TTGW70    SA        lud_S ⋯\n   6 │ GW_Armando_plate1_TTGW72    GW_Armando_plate1_TTGW72    SA        lud_S\n   7 │ GW_Armando_plate1_TTGW78    GW_Armando_plate1_TTGW78    SA        lud_S\n   8 │ GW_Armando_plate2_LN2       GW_Armando_plate2_LN2       LN        troch\n   9 │ GW_Armando_plate2_TTGW03    GW_Armando_plate2_TTGW03    MN        troch ⋯\n  10 │ GW_Armando_plate2_TTGW61    GW_Armando_plate2_TTGW61    SP        lud_S\n  11 │ GW_Armando_plate2_TTGW62    GW_Armando_plate2_TTGW62    SP        lud_S\n  ⋮  │             ⋮                           ⋮                  ⋮            ⋱\n 137 │ GW_Lane5_SL2                GW_Lane5_SL2                SL        plumb\n 138 │ GW_Lane5_ST12               GW_Lane5_ST12               ST        plumb ⋯\n 139 │ GW_Lane5_ST3                GW_Lane5_ST3                ST        plumb\n 140 │ GW_Lane5_TA1                GW_Lane5_TA1                TA        plumb\n 141 │ GW_Armando_plate1_JF09G01   GW_Armando_plate1_JF09G01   ST        plumb\n 142 │ GW_Armando_plate1_JG02G02   GW_Armando_plate1_JG02G02   PR        plumb ⋯\n 143 │ GW_Armando_plate1_JG12G01   GW_Armando_plate1_JG12G01   ST        plumb\n 144 │ GW_Armando_plate2_JF15G02   GW_Armando_plate2_JF15G02   DV        plumb\n 145 │ GW_Lane5_AN1                GW_Lane5_AN1                AN        plumb\n 146 │ GW_Lane5_UY6                GW_Lane5_UY6                UY        plumb ⋯\n                                                 17 columns and 125 rows omitted)\n\n\n\n\n\nShow just the northern area\n\nclusterNamesWithHetsNorth = [\"virLud\",\n                            \"vir_plumb\",\n                            \"plumb\"]\n\nclusterColorsWithHetsNorth = [\"blue\",\n                            \"purple\",\n                            \"red\"]\n\n# limit the SNPs to those with variants greater than 50% in \n# at least one pop, and less than 50% in at least one pop.\n# (So for each column in `freqs`, the maximum should be &gt; 0.5 \n# and the minimum should be &lt; 0.5)\n# Calculate allele freqs and sample sizes\nfreqs, sampleSizes = getFreqsAndSampleSizes(genos_selectedSNPs, clusterMembershipWithHets, clusterNamesWithHetsNorth)\nprintln(\"Calculated population allele frequencies and sample sizes\")\nselectedSNPs = (vec(maximum(freqs, dims=1)) .&gt; 0.5) .& (vec(minimum(freqs, dims=1)) .&lt; 0.5)\ngenos_selectedSNPs2 = genos_selectedSNPs[:, selectedSNPs]\npos_selectedSNPs2 = pos_selectedSNPs[selectedSNPs, :]\nfreqs_selectedSNPs2 = freqs[:, selectedSNPs]\n\nnumIndsToPlotWithHets = [100, 100, 100]\n\ngenosForGBI, indMetadataforGBI = limitIndsToPlot(clusterNamesWithHetsNorth, numIndsToPlotWithHets, \n                                            genos_selectedSNPs2, PCAmodelAll.metadata;\n                                            sortByMissing = true)\n\nplotGenotypeByIndividual(regionInfo, pos_selectedSNPs2,\n                genosForGBI, indMetadataforGBI, freqs_selectedSNPs2, clusterNamesWithHetsNorth, clusterColorsWithHetsNorth;\n                missingFractionAllowed = missingFractionAllowed,\n                indColorLeftProvided = false,\n                indColorRightProvided = true)\n\nCalculated population allele frequencies and sample sizes\n\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\n\n(Scene (768px, 960px):\n  0 Plots\n  2 Child Scenes:\n    ├ Scene (768px, 960px)\n    └ Scene (768px, 960px), Union{Missing, Int16}[0 0 … 0 0; 1 0 … 0 0; … ; 1 1 … 1 1; 1 1 … 1 2], [5282956, 5354821, 5490417, 5528891, 5684034, 5697689, 5701683, 5704379, 5774179, 5777672  …  7371744, 7414344, 7539351, 7539368, 7571024, 7598479, 7620519, 7678099, 7790537, 7813358], 151×20 DataFrame\n Row │ ind                           ID                            location  g ⋯\n     │ String                        String                        String7   S ⋯\n─────┼──────────────────────────────────────────────────────────────────────────\n   1 │ GW_Armando_plate1_AB1         GW_Armando_plate1_AB1         AB        v ⋯\n   2 │ GW_Armando_plate1_JF12G04     GW_Armando_plate1_JF12G04     ST_vi     v\n   3 │ GW_Armando_plate1_JF16G01     GW_Armando_plate1_JF16G01     DV_vi     p\n   4 │ GW_Armando_plate1_TL3         GW_Armando_plate1_TL3         TL        v\n   5 │ GW_Armando_plate1_TTGW10      GW_Armando_plate1_TTGW10      SU        l ⋯\n   6 │ GW_Armando_plate1_TTGW19      GW_Armando_plate1_TTGW19      TH        l\n   7 │ GW_Armando_plate1_TTGW59      GW_Armando_plate1_TTGW59      NG        l\n   8 │ GW_Armando_plate1_TTGW-15-07  GW_Armando_plate1_TTGW-15-07  SR        l\n   9 │ GW_Armando_plate1_TTGW-15-09  GW_Armando_plate1_TTGW-15-09  SR        l ⋯\n  10 │ GW_Armando_plate2_JE31G01     GW_Armando_plate2_JE31G01     VB_vi     v\n  11 │ GW_Armando_plate2_JF16G02     GW_Armando_plate2_JF16G02     DV_vi     p\n  ⋮  │              ⋮                             ⋮                   ⋮        ⋱\n 142 │ GW_Lane5_BK3                  GW_Lane5_BK3                  BK        p\n 143 │ GW_Lane5_SL2                  GW_Lane5_SL2                  SL        p ⋯\n 144 │ GW_Lane5_ST12                 GW_Lane5_ST12                 ST        p\n 145 │ GW_Lane5_ST3                  GW_Lane5_ST3                  ST        p\n 146 │ GW_Lane5_UY2                  GW_Lane5_UY2                  UY        p\n 147 │ GW_Lane5_UY6                  GW_Lane5_UY6                  UY        p ⋯\n 148 │ GW_Armando_plate1_JG02G02     GW_Armando_plate1_JG02G02     PR        p\n 149 │ GW_Armando_plate2_JF07G01     GW_Armando_plate2_JF07G01     ST        p\n 150 │ GW_Armando_plate2_JG01G01     GW_Armando_plate2_JG01G01     PR        p\n 151 │ GW_Armando_plate1_JF10G03     GW_Armando_plate1_JF10G03     ST        p ⋯\n                                                 17 columns and 130 rows omitted)",
    "crumbs": [
      "Home",
      "Greenish Warbler heterozygosity variance analysis"
    ]
  },
  {
    "objectID": "GW_Heterozygosity_Variance.html#now-do-the-same-for-chr-28",
    "href": "GW_Heterozygosity_Variance.html#now-do-the-same-for-chr-28",
    "title": "Greenish Warbler heterozygosity variance analysis",
    "section": "Now do the same for chr 28",
    "text": "Now do the same for chr 28\n\n# choose scaffold\nchr = \"gw28\"\n\npositionMin, positionMax, regionText, \n    windowedIndHetStanRegion, meanAcrossRegionIndHetStan,\n    genos_highViSHetRegion, pos_highViSHetRegion, regionInfo = \n    getWindowedIndHetStanRegion(genosOnly_included, \n                            pos_SNP_filtered, \n                            highViSHetRegions, chr;\n                            windowSize = 500)\n\n# inspect values for mean IndHetStan per individual for that high ViSHet region\nplot(meanAcrossRegionIndHetStan)\n\n# Add column to metadata containing the regionIndHetStan for this highHet region:\ncommand = \"ind_with_metadata_included.\" * chr * \"_regionIndHetStan = meanAcrossRegionIndHetStan\"\neval(Meta.parse(command)) # this executes the command constructed above\nind_with_metadata_included.regionIndHetStan = meanAcrossRegionIndHetStan\n\n#names(ind_with_metadata_included)\n\n# check whether missing data related to heterozygosity (good news: not really)\nplot(ind_with_metadata_included.numMissings, meanAcrossRegionIndHetStan)\n\n# PCA of all individuals:\n\ngenos_highViSHetRegion_imputed = Impute.svd(Matrix{Union{Missing, Float32}}(genos_highViSHetRegion))\n\nflipPC1 = true\nflipPC2 = true\n\nPCAmodelAll = plotPCA(genos_highViSHetRegion_imputed, ind_with_metadata_included, \n            groups_to_plot_PCA, group_colors_PCA; \n            sampleSet = \"greenish warblers\", regionText = regionText,\n            flip1 = flipPC1, flip2 = flipPC2,\n            lineOpacity = 0.7, fillOpacity = 0.6,\n            symbolSize = 14, showTitle = true,\n            xLabelText = string(\"Region PC1\"), yLabelText = string(\"Region PC2\"),\n            showPlot = false)\n\ndisplay(PCAmodelAll.PCAfig)\n\n# Add PC values to metadata for individuals included in PCA above:\nif flipPC1\n    PCAmodelAll.metadata.PC1 = -1 .* PCAmodelAll.values[1,:]\nelse \n    PCAmodelAll.metadata.PC1 = PCAmodelAll.values[1,:]\nend\nif flipPC2\n    PCAmodelAll.metadata.PC2 = -1 .* PCAmodelAll.values[2,:]\nelse\n    PCAmodelAll.metadata.PC2 = PCAmodelAll.values[2,:]\nend\nPCAmodelAll.metadata.PC3 = PCAmodelAll.values[3,:]\n\n# For the next bit to work with above, make sure that all individuals in the above `plotPCA` command\n# are included in the `groups_to_plot_PCA`\n\n# choose inds with low IndHet in high ViSHet region:\nindSelection_lowIndHetStan = (meanAcrossRegionIndHetStan .&lt; 2) \n\n#Plot only the lowIndHetStan individuals:\n\nf = CairoMakie.Figure()\nax = Axis(f[1, 1],\n    title = \"PC1 vs. PC2, only low heterozygosity\",\n    xlabel = \"Region PC1\", xlabelsize = 24,\n    ylabel = \"Region PC2\", ylabelsize = 24,\n    autolimitaspect = 1)\nhidedecorations!(ax, label = false, ticklabels = false, ticks = false) # hide background lattice\nfor i in eachindex(groups_to_plot_PCA) \n    selection = (PCAmodelAll.metadata.Fst_group .== groups_to_plot_PCA[i]) .& indSelection_lowIndHetStan\n    CairoMakie.scatter!(ax, PCAmodelAll.metadata.PC1[selection], PCAmodelAll.metadata.PC2[selection], marker = :diamond, color = (group_colors_PCA[i], 0.6), markersize = 14, strokewidth=0.5, strokecolor = (\"black\", 0.7))\nend\ndisplay(f)\n\nGood news: 1 region on that scaffold\n\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\nCairoMakie.Screen{IMAGE}\n\n\n\nSave the individual colors in the metadata\n\nindColors = fill(\"\", size(PCAmodelAll.metadata, 1))\nfor i in axes(PCAmodelAll.metadata, 1)\n    indColors[i] = group_colors_PCA[findfirst(groups_to_plot_PCA .== PCAmodelAll.metadata.Fst_group[i])]\nend\nPCAmodelAll.metadata.indColorLeft = indColors\nPCAmodelAll.metadata.indColorRight = indColors\n\n257-element Vector{String}:\n \"blue\"\n \"red\"\n \"red\"\n \"red\"\n \"red\"\n \"red\"\n \"red\"\n \"purple\"\n \"red\"\n \"red\"\n \"red\"\n \"blue\"\n \"red\"\n ⋮\n \"olivedrab2\"\n \"olivedrab2\"\n \"olivedrab2\"\n \"olivedrab2\"\n \"olivedrab2\"\n \"olivedrab2\"\n \"olivedrab2\"\n \"olivedrab2\"\n \"olivedrab2\"\n \"olivedrab2\"\n \"olivedrab2\"\n \"olivedrab2\"\n\n\n\n\nPlot PC1 vs. PC2:\n\nf = CairoMakie.Figure()\nax = Axis(f[1, 1],\n    title = \"PC1 vs. PC2\",\n    xlabel = \"Region PC1\", xlabelsize = 24,\n    ylabel = \"Region PC2\", ylabelsize = 24,\n    autolimitaspect = 1)\nhidedecorations!(ax, label = false, ticklabels = false, ticks = false) # hide background lattice\nfor i in eachindex(groups_to_plot_PCA) \n    selection = PCAmodelAll.metadata.Fst_group .== groups_to_plot_PCA[i]\n    CairoMakie.scatter!(ax, PCAmodelAll.metadata.PC1[selection], PCAmodelAll.metadata.PC2[selection], marker = :diamond, color = (group_colors_PCA[i], 0.6), markersize = 14, strokewidth=0.5, strokecolor = (\"black\", 0.7))\nend\ndisplay(f)\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\nCairoMakie.Screen{IMAGE}\n\n\n\n\nPlot PC1 vs. PC3:\n\nf = CairoMakie.Figure()\nax = Axis(f[1, 1],\n    title = \"PC1 vs. PC3\",\n    xlabel = \"Region PC1\", xlabelsize = 24,\n    ylabel = \"Region PC3\", ylabelsize = 24,\n    autolimitaspect = 1)\nhidedecorations!(ax, label = false, ticklabels = false, ticks = false) # hide background lattice\nfor i in eachindex(groups_to_plot_PCA) \n    selection = PCAmodelAll.metadata.Fst_group .== groups_to_plot_PCA[i]\n    CairoMakie.scatter!(ax, PCAmodelAll.metadata.PC1[selection], PCAmodelAll.metadata.PC3[selection], marker = :diamond, color = (group_colors_PCA[i], 0.6), markersize = 14, strokewidth=0.5, strokecolor = (\"black\", 0.7))\nend\ndisplay(f)\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\nCairoMakie.Screen{IMAGE}\n\n\n\n\nAt chr 28 high ViSHet region, there are only 5 clear haplogroups (yellow and orange are close). Vir and lud don’t distinguish along PC3, as nitidus varies there. Divide samples into those groups, based on PCA scores, and then calculate pi within and pi between\n\nclusterNames = [\"virLud\",\n                \"nit\",\n                \"troch\",\n                \"obs\",\n                \"plumb\"]\n\nclusterColors = [\"blue\",\n                \"grey\",\n                \"yellowgreen\",\n                \"orange\",\n                \"red\"]\n\nvirLud = (PCAmodelAll.metadata.PC1 .&lt; -4) .& indSelection_lowIndHetStan\nnit = (-1 .&lt; PCAmodelAll.metadata.PC1 .&lt; 1) .& indSelection_lowIndHetStan\ntroch = (1 .&lt; PCAmodelAll.metadata.PC1 .&lt; 3) .& \n        (PCAmodelAll.metadata.PC2 .&lt; -3.2) .& \n        indSelection_lowIndHetStan\nobs = (1 .&lt; PCAmodelAll.metadata.PC1 .&lt; 2.5) .& \n        (-3.2 .&lt; PCAmodelAll.metadata.PC2 .&lt; -1) .&\n        indSelection_lowIndHetStan\nplumb = (3 .&lt; PCAmodelAll.metadata.PC1) .& \n        (2.5 .&lt; PCAmodelAll.PC2) .&\n        indSelection_lowIndHetStan\n\n# check the individuals in each group\nPCAmodelAll.metadata.Fst_group[virLud]\nPCAmodelAll.metadata.Fst_group[nit]\nPCAmodelAll.metadata.Fst_group[troch]\nPCAmodelAll.metadata.Fst_group[obs]\nPCAmodelAll.metadata.Fst_group[plumb]\n\nclusterArray = [virLud nit troch obs plumb]\n\n# show numbers in each group\nprintln(\"The numbers in each group are $(sum(clusterArray, dims=1)) and the sum of those is $(sum(sum(clusterArray, dims=1)))\")\n\n# create vectors that indicate the groups and plot order for this analysis:\nclusterMembership = fill(\"none\", nrow(PCAmodelAll.metadata))\nplotOrder = fill(-9, nrow(PCAmodelAll.metadata))\nfor i in eachindex(clusterArray[1,:])\n    clusterMembership[clusterArray[:,i]] .= clusterNames[i]\n    plotOrder[clusterArray[:,i]] .= i\nend\n\n# Calculate allele freqs and sample sizes\nfreqs, sampleSizes = getFreqsAndSampleSizes(genos_highViSHetRegion, clusterMembership, clusterNames)\nprintln(\"Calculated population allele frequencies and sample sizes\")\n\n# Calculate per-site pi (within-group nucleotide distance)\n\nsitePi = getSitePi(freqs, sampleSizes)\n\n# calculate pairwise Dxy per site, using data in \"freqs\" and groups in \"groups\"\n\nDxy, pairwiseDxyClusterNames = getDxy(freqs, clusterNames)\n\nFst, FstNumerator, FstDenominator, pairwiseFstClusterNames = getFst(freqs, sampleSizes, clusterNames; among=false)  # set among to FALSE if no among Fst wanted (some things won't work without it) \n\n# Now get averages of pi and Dxy for whole region:\n\nregionPiTable = DataFrame(cluster = clusterNames, pi = getRegionPi(sitePi))\n#= 5×2 DataFrame\n Row │ cluster  pi         \n     │ String   Float64    \n─────┼─────────────────────\n   1 │ virLud   0.00792304\n   2 │ nit      0.00320189\n   3 │ troch    0.00734994\n   4 │ obs      0.0101536\n   5 │ plumb    0.00270239 =#\n\nregionDxyTable = DataFrame(cluster_pair = pairwiseDxyClusterNames, Dxy = getRegionDxy(Dxy))\n#= 10×2 DataFrame\n Row │ cluster_pair  Dxy       \n     │ String        Float64   \n─────┼─────────────────────────\n   1 │ virLud_nit    0.0334156\n   2 │ virLud_troch  0.0318841\n   3 │ virLud_obs    0.0351279\n   4 │ virLud_plumb  0.0330054\n   5 │ nit_troch     0.0314387\n   6 │ nit_obs       0.0344624\n   7 │ nit_plumb     0.0307517\n   8 │ troch_obs     0.0188902\n   9 │ troch_plumb   0.0234771\n  10 │ obs_plumb     0.0265753 =#\n\n# Make a genotype-by-individual plot using all variable loci in the region,\nmissingFractionAllowed = 0.1\n# in metadata, replace `Fst_group` column with cluster info (needed for the function below):\nPCAmodelAll.metadata.original_Fst_groups = PCAmodelAll.metadata.Fst_group # store the Fst_groups in this\nPCAmodelAll.metadata.Fst_group = clusterMembership\nPCAmodelAll.metadata.original_plot_order = PCAmodelAll.metadata.plot_order # store the original plot_order in this\nPCAmodelAll.metadata.plot_order = plotOrder\n\n# limit the SNPs to those with variants greater than 50% in \n# at least one pop, and less than 50% in at least one pop.\n# (So for each column in `freqs`, the maximum should be &gt; 0.5 \n# and the minimum should be &lt; 0.5)\nselectedSNPs = (vec(maximum(freqs, dims=1)) .&gt; 0.5) .& (vec(minimum(freqs, dims=1)) .&lt; 0.5)\ngenos_selectedSNPs = genos_highViSHetRegion[:, selectedSNPs]\npos_selectedSNPs = pos_highViSHetRegion[selectedSNPs, :]\nFst_selectedSNPs = Fst[:, selectedSNPs]\nfreqs_selectedSNPs = freqs[:, selectedSNPs]\n\n# limit the number of individuals per group to plot\nnumIndsToPlot = fill(15, length(clusterNames))\n\ngenosForGBI, indMetadataforGBI = limitIndsToPlot(clusterNames, numIndsToPlot, \n                                            genos_selectedSNPs, PCAmodelAll.metadata;\n                                            sortByMissing = true)\n\nplotGenotypeByIndividual(regionInfo, pos_selectedSNPs,\n                genosForGBI, indMetadataforGBI, freqs_selectedSNPs, clusterNames, clusterColors;\n                missingFractionAllowed = missingFractionAllowed,\n                indColorRightProvided = true)\n\nThe numbers in each group are [74 2 65 3 67] and the sum of those is 211\nCalculated population allele frequencies and sample sizes\n\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\n\n(Scene (768px, 960px):\n  0 Plots\n  2 Child Scenes:\n    ├ Scene (768px, 960px)\n    └ Scene (768px, 960px), Union{Missing, Int16}[0 0 … 0 0; 0 0 … 0 0; … ; 0 2 … 2 2; 0 2 … 2 2], [1825835, 1828808, 1835122, 1857465, 1857494, 1871762, 1872060, 1872112, 1872224, 1872436  …  2195993, 2200040, 2239778, 2242803, 2245870, 2264261, 2265267, 2424032, 2430336, 2430428], 50×22 DataFrame\n Row │ ind                           ID                            location  g ⋯\n     │ String                        String                        String7   S ⋯\n─────┼──────────────────────────────────────────────────────────────────────────\n   1 │ GW_Armando_plate1_JF12G04     GW_Armando_plate1_JF12G04     ST_vi     v ⋯\n   2 │ GW_Armando_plate1_TL3         GW_Armando_plate1_TL3         TL        v\n   3 │ GW_Armando_plate1_TTGW19      GW_Armando_plate1_TTGW19      TH        l\n   4 │ GW_Armando_plate1_TTGW53      GW_Armando_plate1_TTGW53      NG        l\n   5 │ GW_Armando_plate1_TTGW57      GW_Armando_plate1_TTGW57      NG        l ⋯\n   6 │ GW_Armando_plate1_TTGW58      GW_Armando_plate1_TTGW58      NG        l\n   7 │ GW_Armando_plate1_TTGW-15-07  GW_Armando_plate1_TTGW-15-07  SR        l\n   8 │ GW_Armando_plate2_JE31G01     GW_Armando_plate2_JE31G01     VB_vi     v\n   9 │ GW_Armando_plate2_JF16G02     GW_Armando_plate2_JF16G02     DV_vi     p ⋯\n  10 │ GW_Armando_plate2_JF30G01     GW_Armando_plate2_JF30G01     ST_vi     v\n  11 │ GW_Armando_plate2_TTGW08      GW_Armando_plate2_TTGW08      SU        l\n  ⋮  │              ⋮                             ⋮                   ⋮        ⋱\n  41 │ GW_Armando_plate1_JF12G01     GW_Armando_plate1_JF12G01     ST        p\n  42 │ GW_Armando_plate1_JF12G02     GW_Armando_plate1_JF12G02     ST        p ⋯\n  43 │ GW_Armando_plate1_JF13G01     GW_Armando_plate1_JF13G01     ST        p\n  44 │ GW_Armando_plate1_JF15G03     GW_Armando_plate1_JF15G03     DV        p\n  45 │ GW_Armando_plate1_JF20G01     GW_Armando_plate1_JF20G01     MB        p\n  46 │ GW_Armando_plate1_JF22G01     GW_Armando_plate1_JF22G01     MB        p ⋯\n  47 │ GW_Armando_plate1_JF23G01     GW_Armando_plate1_JF23G01     VB        p\n  48 │ GW_Armando_plate1_JF23G02     GW_Armando_plate1_JF23G02     VB        p\n  49 │ GW_Armando_plate1_JF27G01     GW_Armando_plate1_JF27G01     ST        p\n  50 │ GW_Armando_plate1_JF29G01     GW_Armando_plate1_JF29G01     ST        p ⋯\n                                                  19 columns and 29 rows omitted)",
    "crumbs": [
      "Home",
      "Greenish Warbler heterozygosity variance analysis"
    ]
  },
  {
    "objectID": "GW_Heterozygosity_Variance.html#now-show-a-gbi-plot-like-above-but-with-heterozygotes-2",
    "href": "GW_Heterozygosity_Variance.html#now-show-a-gbi-plot-like-above-but-with-heterozygotes-2",
    "title": "Greenish Warbler heterozygosity variance analysis",
    "section": "Now show a GBI plot like above, but with heterozygotes:",
    "text": "Now show a GBI plot like above, but with heterozygotes:\n\nclusterNamesWithHets = [\"virLud\",\n                        \"virLud_nit\",\n                        \"nit\",\n                        \"virLud_troch\",\n                        \"troch\",\n                        \"obs\",\n                        \"obsHet\",\n                        \"obs_plumb\",\n                        \"plumb\",\n                        \"vir_plumb\"]\n\nclusterColorsWithHets = [\"blue\",\n                        \"slateblue1\",\n                        \"grey\",\n                        \"yellowgreen\",\n                        \"yellow\",\n                        \"orange\",\n                        \"darkgoldenrod1\",\n                        \"darkorange1\",\n                        \"red\",\n                        \"purple\"]\n\nvirLud_nit = (-4 .&lt; PCAmodelAll.metadata.PC1 .&lt; -2) .&\n                (0 .&lt; PCAmodelAll.metadata.PC2 .&lt; 2) .&\n                 .!indSelection_lowIndHetStan\nvirLud_troch = (-2.5 .&lt; PCAmodelAll.metadata.PC1 .&lt; 0) .&\n                (-3.5 .&lt; PCAmodelAll.metadata.PC2 .&lt; 0) .&\n                 .!indSelection_lowIndHetStan\nobsHet = (1.5 .&lt; PCAmodelAll.metadata.PC1 .&lt; 3) .&\n                (-3.5 .&lt; PCAmodelAll.metadata.PC2 .&lt; -1) .&\n                 .!indSelection_lowIndHetStan\nobs_plumb = (2.5 .&lt; PCAmodelAll.metadata.PC1 .&lt; 4) .&\n                (-1 .&lt; PCAmodelAll.metadata.PC2 .&lt; 2) .&\n                 .!indSelection_lowIndHetStan\nvir_plumb = (-2 .&lt; PCAmodelAll.metadata.PC1 .&lt; 2) .&\n                (2 .&lt; PCAmodelAll.metadata.PC2 .&lt; 4) .&\n                 .!indSelection_lowIndHetStan\n\n# check the individuals in each group\nPCAmodelAll.metadata.Fst_group[virLud]\nPCAmodelAll.metadata.Fst_group[virLud_nit]\nPCAmodelAll.metadata.Fst_group[nit]\nPCAmodelAll.metadata.Fst_group[virLud_troch]\nPCAmodelAll.metadata.Fst_group[troch]\nPCAmodelAll.metadata.Fst_group[obs]\nPCAmodelAll.metadata.Fst_group[obsHet]\nPCAmodelAll.metadata.Fst_group[obs_plumb]\nPCAmodelAll.metadata.Fst_group[plumb]\nPCAmodelAll.metadata.Fst_group[vir_plumb]\n\nclusterArray = [virLud virLud_nit nit virLud_troch troch obs obsHet obs_plumb plumb vir_plumb]\n\nsum(clusterArray, dims=1)\n\nif sum(sum(clusterArray, dims=1)) == size(PCAmodelAll.metadata, 1)\n    println(\"Good news: Individuals included in a group matches total number of individuals\")\nend\n\n# create vectors that indicate the groups and plot order for this analysis:\nclusterMembershipWithHets = fill(\"none\", nrow(PCAmodelAll.metadata))\nplotOrderWithHets = fill(-9, nrow(PCAmodelAll.metadata))\nfor i in eachindex(clusterArray[1,:])\n    clusterMembershipWithHets[clusterArray[:,i]] .= clusterNamesWithHets[i]\n    plotOrderWithHets[clusterArray[:,i]] .= i\nend\n\n# Add column to main metadata object containing the cluster membership for this highHet region:\ncommand = \"ind_with_metadata_included.\" * chr * \"_cluster = clusterMembershipWithHets\"\neval(Meta.parse(command)) # this executes the command constructed above\n\n# in metadata, replace `Fst_group` column with cluster info (needed for the function below):\nPCAmodelAll.metadata.Fst_group = clusterMembershipWithHets\nPCAmodelAll.metadata.plot_order = plotOrderWithHets\n\n# limit the number of individuals per group to plot\nnumIndsToPlotWithHets = fill(15, length(clusterNamesWithHets))\n\ngenosForGBI, indMetadataforGBI = limitIndsToPlot(clusterNamesWithHets, numIndsToPlotWithHets, \n                                            genos_selectedSNPs, PCAmodelAll.metadata;\n                                            sortByMissing = true)\n\nplotGenotypeByIndividual(regionInfo, pos_selectedSNPs,\n                genosForGBI, indMetadataforGBI, freqs_selectedSNPs, clusterNamesWithHets, clusterColorsWithHets;\n                missingFractionAllowed = missingFractionAllowed,\n                indColorLeftProvided = false,\n                indColorRightProvided = true)\n\nGood news: Individuals included in a group matches total number of individuals\n\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\n\n(Scene (768px, 960px):\n  0 Plots\n  2 Child Scenes:\n    ├ Scene (768px, 960px)\n    └ Scene (768px, 960px), Union{Missing, Int16}[0 0 … 0 0; 0 0 … 0 0; … ; -99 1 … 1 1; 0 1 … 1 1], [1825835, 1828808, 1835122, 1857465, 1857494, 1871762, 1872060, 1872112, 1872224, 1872436  …  2195993, 2200040, 2239778, 2242803, 2245870, 2264261, 2265267, 2424032, 2430336, 2430428], 74×22 DataFrame\n Row │ ind                           ID                            location  g ⋯\n     │ String                        String                        String7   S ⋯\n─────┼──────────────────────────────────────────────────────────────────────────\n   1 │ GW_Armando_plate1_JF12G04     GW_Armando_plate1_JF12G04     ST_vi     v ⋯\n   2 │ GW_Armando_plate1_TL3         GW_Armando_plate1_TL3         TL        v\n   3 │ GW_Armando_plate1_TTGW19      GW_Armando_plate1_TTGW19      TH        l\n   4 │ GW_Armando_plate1_TTGW53      GW_Armando_plate1_TTGW53      NG        l\n   5 │ GW_Armando_plate1_TTGW57      GW_Armando_plate1_TTGW57      NG        l ⋯\n   6 │ GW_Armando_plate1_TTGW58      GW_Armando_plate1_TTGW58      NG        l\n   7 │ GW_Armando_plate1_TTGW-15-07  GW_Armando_plate1_TTGW-15-07  SR        l\n   8 │ GW_Armando_plate2_JE31G01     GW_Armando_plate2_JE31G01     VB_vi     v\n   9 │ GW_Armando_plate2_JF16G02     GW_Armando_plate2_JF16G02     DV_vi     p ⋯\n  10 │ GW_Armando_plate2_JF30G01     GW_Armando_plate2_JF30G01     ST_vi     v\n  11 │ GW_Armando_plate2_TTGW08      GW_Armando_plate2_TTGW08      SU        l\n  ⋮  │              ⋮                             ⋮                   ⋮        ⋱\n  65 │ GW_Armando_plate1_JF22G01     GW_Armando_plate1_JF22G01     MB        p\n  66 │ GW_Armando_plate1_JF23G01     GW_Armando_plate1_JF23G01     VB        p ⋯\n  67 │ GW_Armando_plate1_JF23G02     GW_Armando_plate1_JF23G02     VB        p\n  68 │ GW_Armando_plate1_JF27G01     GW_Armando_plate1_JF27G01     ST        p\n  69 │ GW_Armando_plate1_JF29G01     GW_Armando_plate1_JF29G01     ST        p\n  70 │ GW_Armando_plate1_JF24G02     GW_Armando_plate1_JF24G02     VB        p ⋯\n  71 │ GW_Armando_plate2_JF15G02     GW_Armando_plate2_JF15G02     DV        p\n  72 │ GW_Armando_plate2_JF27G02     GW_Armando_plate2_JF27G02     ST        p\n  73 │ GW_Armando_plate1_JF10G03     GW_Armando_plate1_JF10G03     ST        p\n  74 │ GW_Armando_plate1_JF09G01     GW_Armando_plate1_JF09G01     ST        p ⋯\n                                                  19 columns and 53 rows omitted)\n\n\n\n\nshow GBI plot according to original groups and plot order\n\nPCAmodelAll.metadata.plot_order = PCAmodelAll.metadata.original_plot_order\n\ngenosForGBI, indMetadataforGBI = limitIndsToPlot(clusterNamesWithHets, numIndsToPlotWithHets, \n                                            genos_selectedSNPs, PCAmodelAll.metadata;\n                                            sortByMissing = true)\n\nplotGenotypeByIndividual(regionInfo, pos_selectedSNPs,\n                genosForGBI, indMetadataforGBI, freqs_selectedSNPs, clusterNamesWithHets, clusterColorsWithHets;\n                missingFractionAllowed = missingFractionAllowed,\n                indColorLeftProvided = false,\n                indColorRightProvided = true)\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\n\n(Scene (768px, 960px):\n  0 Plots\n  2 Child Scenes:\n    ├ Scene (768px, 960px)\n    └ Scene (768px, 960px), Union{Missing, Int16}[0 0 … 0 0; 0 0 … 0 0; … ; 0 1 … 1 1; -99 1 … 1 1], [1825835, 1828808, 1835122, 1857465, 1857494, 1871762, 1872060, 1872112, 1872224, 1872436  …  2195993, 2200040, 2239778, 2242803, 2245870, 2264261, 2265267, 2424032, 2430336, 2430428], 74×22 DataFrame\n Row │ ind                        ID                         location  group   ⋯\n     │ String                     String                     String7   String1 ⋯\n─────┼──────────────────────────────────────────────────────────────────────────\n   1 │ GW_Armando_plate1_JF12G04  GW_Armando_plate1_JF12G04  ST_vi     vir     ⋯\n   2 │ GW_Armando_plate2_JF30G01  GW_Armando_plate2_JF30G01  ST_vi     vir_mis\n   3 │ GW_Armando_plate2_JF16G02  GW_Armando_plate2_JF16G02  DV_vi     plumb_v\n   4 │ GW_Armando_plate2_JE31G01  GW_Armando_plate2_JE31G01  VB_vi     vir_mis\n   5 │ GW_Armando_plate1_TL3      GW_Armando_plate1_TL3      TL        vir     ⋯\n   6 │ GW_Lane5_AA1               GW_Lane5_AA1               AA        vir_S\n   7 │ GW_Lane5_TU1               GW_Lane5_TU1               TU        nit\n   8 │ GW_Lane5_TU2               GW_Lane5_TU2               TU        nit\n   9 │ GW_Armando_plate1_TTGW70   GW_Armando_plate1_TTGW70   SA        lud_Sat ⋯\n  10 │ GW_Armando_plate1_TTGW72   GW_Armando_plate1_TTGW72   SA        lud_Sat\n  11 │ GW_Armando_plate1_TTGW78   GW_Armando_plate1_TTGW78   SA        lud_Sat\n  ⋮  │             ⋮                          ⋮                 ⋮            ⋮ ⋱\n  65 │ GW_Armando_plate1_JF27G01  GW_Armando_plate1_JF27G01  ST        plumb\n  66 │ GW_Armando_plate1_JF29G01  GW_Armando_plate1_JF29G01  ST        plumb   ⋯\n  67 │ GW_Armando_plate2_JF27G02  GW_Armando_plate2_JF27G02  ST        plumb\n  68 │ GW_Armando_plate1_JF09G01  GW_Armando_plate1_JF09G01  ST        plumb\n  69 │ GW_Armando_plate1_JF15G03  GW_Armando_plate1_JF15G03  DV        plumb\n  70 │ GW_Armando_plate2_JF15G02  GW_Armando_plate2_JF15G02  DV        plumb   ⋯\n  71 │ GW_Armando_plate1_JF23G01  GW_Armando_plate1_JF23G01  VB        plumb\n  72 │ GW_Armando_plate1_JF23G02  GW_Armando_plate1_JF23G02  VB        plumb\n  73 │ GW_Armando_plate1_JF24G02  GW_Armando_plate1_JF24G02  VB        plumb\n  74 │ GW_Armando_plate1_JF10G03  GW_Armando_plate1_JF10G03  ST        plumb_v ⋯\n                                                  19 columns and 53 rows omitted)\n\n\n\n\n\nshow same but with all individuals\n\nPCAmodelAll.metadata.plot_order = PCAmodelAll.metadata.original_plot_order\n\n# Set no limit (or high limit anyway) on the number of individuals per group to plot\nnumIndsToPlotWithHets = fill(1000, length(clusterNamesWithHets))\n\ngenosForGBI, indMetadataforGBI = limitIndsToPlot(clusterNamesWithHets, numIndsToPlotWithHets, \n                                            genos_selectedSNPs, PCAmodelAll.metadata;\n                                            sortByMissing = true)\n\nplotGenotypeByIndividual(regionInfo, pos_selectedSNPs,\n                genosForGBI, indMetadataforGBI, freqs_selectedSNPs, clusterNamesWithHets, clusterColorsWithHets;\n                missingFractionAllowed = missingFractionAllowed,\n                indColorLeftProvided = false,\n                indColorRightProvided = true)\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\n\n(Scene (768px, 960px):\n  0 Plots\n  2 Child Scenes:\n    ├ Scene (768px, 960px)\n    └ Scene (768px, 960px), Union{Missing, Int16}[0 0 … 0 0; 0 0 … 0 0; … ; 0 2 … 2 2; -99 1 … 1 1], [1825835, 1828808, 1835122, 1857465, 1857494, 1871762, 1872060, 1872112, 1872224, 1872436  …  2195993, 2200040, 2239778, 2242803, 2245870, 2264261, 2265267, 2424032, 2430336, 2430428], 257×22 DataFrame\n Row │ ind                        ID                         location  group   ⋯\n     │ String                     String                     String7   String1 ⋯\n─────┼──────────────────────────────────────────────────────────────────────────\n   1 │ GW_Armando_plate1_JF12G04  GW_Armando_plate1_JF12G04  ST_vi     vir     ⋯\n   2 │ GW_Armando_plate2_JF30G01  GW_Armando_plate2_JF30G01  ST_vi     vir_mis\n   3 │ GW_Armando_plate2_JF03G01  GW_Armando_plate2_JF03G01  ST_vi     vir_mis\n   4 │ GW_Lane5_STvi1             GW_Lane5_STvi1             ST_vi     vir\n   5 │ GW_Lane5_STvi3             GW_Lane5_STvi3             ST_vi     vir     ⋯\n   6 │ GW_Lane5_STvi2             GW_Lane5_STvi2             ST_vi     vir\n   7 │ GW_Armando_plate2_JF16G02  GW_Armando_plate2_JF16G02  DV_vi     plumb_v\n   8 │ GW_Armando_plate1_JF16G01  GW_Armando_plate1_JF16G01  DV_vi     plumb_v\n   9 │ GW_Armando_plate2_JE31G01  GW_Armando_plate2_JE31G01  VB_vi     vir_mis ⋯\n  10 │ GW_Armando_plate2_JF03G02  GW_Armando_plate2_JF03G02  VB_vi     vir_mis\n  11 │ GW_Lane5_YK11              GW_Lane5_YK11              YK        vir\n  ⋮  │             ⋮                          ⋮                 ⋮          ⋮   ⋱\n 248 │ GW_Armando_plate2_JF25G01  GW_Armando_plate2_JF25G01  VB        plumb\n 249 │ GW_Armando_plate1_JF24G02  GW_Armando_plate1_JF24G02  VB        plumb   ⋯\n 250 │ GW_Armando_plate1_JG02G02  GW_Armando_plate1_JG02G02  PR        plumb\n 251 │ GW_Armando_plate1_JG02G04  GW_Armando_plate1_JG02G04  PR        plumb\n 252 │ GW_Armando_plate2_JG01G01  GW_Armando_plate2_JG01G01  PR        plumb\n 253 │ GW_Armando_plate2_JG02G01  GW_Armando_plate2_JG02G01  PR        plumb   ⋯\n 254 │ GW_Armando_plate2_JG02G03  GW_Armando_plate2_JG02G03  PR        plumb\n 255 │ GW_Lane5_SL1               GW_Lane5_SL1               SL        plumb\n 256 │ GW_Lane5_SL2               GW_Lane5_SL2               SL        plumb\n 257 │ GW_Armando_plate1_JF10G03  GW_Armando_plate1_JF10G03  ST        plumb_v ⋯\n                                                 19 columns and 236 rows omitted)\n\n\n\n\n\nshow same but with only vir and plumb pops\n\nincludeTheseClusters = [\"virLud\", \"plumb\"] # these are the haplotype clusters to include in the choice below of SNPs to show\n\n# Calculate allele freqs and sample sizes\nfreqs_local, sampleSizes_local = getFreqsAndSampleSizes(genos_selectedSNPs, clusterMembership, includeTheseClusters)\n\n# limit the SNPs to those with variants greater than 50% in \n# at least one pop, and less than 50% in at least one pop.\n# (So for each column in `freqs`, the maximum should be &gt; 0.5 \n# and the minimum should be &lt; 0.5)\nselectedSNPs = (vec(maximum(freqs_local, dims=1)) .&gt; 0.5) .& (vec(minimum(freqs_local, dims=1)) .&lt; 0.5)\ngenosForGBI = genos_selectedSNPs[:, selectedSNPs]\nposForGBI = pos_selectedSNPs[selectedSNPs, :]\nfreqsForGBI = freqs_local[:, selectedSNPs]\n\nplotGroups = [\"vir\", \"plumb\", \"plumb_vir\"] # these are the original Fst_groups\nplotGroupColors = [\"blue\", \"red\", \"purple\"]\n\nmetadataForGBI = copy(PCAmodelAll.metadata)\n\nmetadataForGBI.Fst_group = metadataForGBI.original_Fst_groups\n\nplotGenotypeByIndividual(regionInfo, posForGBI,\n                genosForGBI, metadataForGBI, freqsForGBI, plotGroups, plotGroupColors;\n                missingFractionAllowed = missingFractionAllowed)\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\n\n(Scene (768px, 960px):\n  0 Plots\n  2 Child Scenes:\n    ├ Scene (768px, 960px)\n    └ Scene (768px, 960px), Union{Missing, Int16}[0 0 … 0 0; 0 0 … 0 0; … ; 2 2 … 2 2; 1 1 … 1 1], [1828808, 1871762, 1872060, 1872224, 1872436, 1877640, 1879000, 1879179, 1879284, 1946507  …  2111032, 2122636, 2188531, 2188581, 2190739, 2195551, 2195993, 2200040, 2430336, 2430428], 100×22 DataFrame\n Row │ ind                        ID                         location  group   ⋯\n     │ String                     String                     String7   String1 ⋯\n─────┼──────────────────────────────────────────────────────────────────────────\n   1 │ GW_Armando_plate1_JF12G04  GW_Armando_plate1_JF12G04  ST_vi     vir     ⋯\n   2 │ GW_Armando_plate2_JF03G01  GW_Armando_plate2_JF03G01  ST_vi     vir_mis\n   3 │ GW_Armando_plate2_JF30G01  GW_Armando_plate2_JF30G01  ST_vi     vir_mis\n   4 │ GW_Lane5_STvi1             GW_Lane5_STvi1             ST_vi     vir\n   5 │ GW_Lane5_STvi2             GW_Lane5_STvi2             ST_vi     vir     ⋯\n   6 │ GW_Lane5_STvi3             GW_Lane5_STvi3             ST_vi     vir\n   7 │ GW_Armando_plate1_JF16G01  GW_Armando_plate1_JF16G01  DV_vi     plumb_v\n   8 │ GW_Armando_plate2_JF16G02  GW_Armando_plate2_JF16G02  DV_vi     plumb_v\n   9 │ GW_Armando_plate2_JE31G01  GW_Armando_plate2_JE31G01  VB_vi     vir_mis ⋯\n  10 │ GW_Armando_plate2_JF03G02  GW_Armando_plate2_JF03G02  VB_vi     vir_mis\n  11 │ GW_Lane5_YK11              GW_Lane5_YK11              YK        vir\n  ⋮  │             ⋮                          ⋮                 ⋮          ⋮   ⋱\n  91 │ GW_Armando_plate2_JF24G01  GW_Armando_plate2_JF24G01  VB        plumb\n  92 │ GW_Armando_plate2_JF25G01  GW_Armando_plate2_JF25G01  VB        plumb   ⋯\n  93 │ GW_Armando_plate1_JG02G02  GW_Armando_plate1_JG02G02  PR        plumb\n  94 │ GW_Armando_plate1_JG02G04  GW_Armando_plate1_JG02G04  PR        plumb\n  95 │ GW_Armando_plate2_JG01G01  GW_Armando_plate2_JG01G01  PR        plumb\n  96 │ GW_Armando_plate2_JG02G01  GW_Armando_plate2_JG02G01  PR        plumb   ⋯\n  97 │ GW_Armando_plate2_JG02G03  GW_Armando_plate2_JG02G03  PR        plumb\n  98 │ GW_Lane5_SL1               GW_Lane5_SL1               SL        plumb\n  99 │ GW_Lane5_SL2               GW_Lane5_SL2               SL        plumb\n 100 │ GW_Armando_plate1_JF10G03  GW_Armando_plate1_JF10G03  ST        plumb_v ⋯\n                                                  19 columns and 79 rows omitted)\n\n\n\n\n\nshow same but with only vir lud troch pops\n\nincludeTheseClusters = [\"virLud\", \"troch\"] # these are the haplotype clusters to include in the choice below of SNPs to show\n\n# Calculate allele freqs and sample sizes\nfreqs_local, sampleSizes_local = getFreqsAndSampleSizes(genos_selectedSNPs, clusterMembership, includeTheseClusters)\n\n# limit the SNPs to those with variants greater than 50% in \n# at least one pop, and less than 50% in at least one pop.\n# (So for each column in `freqs`, the maximum should be &gt; 0.5 \n# and the minimum should be &lt; 0.5)\nselectedSNPs = (vec(maximum(freqs_local, dims=1)) .&gt; 0.5) .& (vec(minimum(freqs_local, dims=1)) .&lt; 0.5)\ngenosForGBI = genos_selectedSNPs[:, selectedSNPs]\nposForGBI = pos_selectedSNPs[selectedSNPs, :]\nfreqsForGBI = freqs_local[:, selectedSNPs]\n\nplotGroups = [\"vir\", \"plumb\", \"plumb_vir\"] # these are the original Fst_groups\nplotGroupColors = [\"blue\", \"red\", \"purple\"]\n\nmetadataForGBI = copy(PCAmodelAll.metadata)\nmetadataForGBI.Fst_group = metadataForGBI.original_Fst_groups\n\nplotGroups = [\"vir\", \"vir_S\", \"lud_PK\", \"lud_KS\", \"lud_central\", \"lud_Sath\", \"lud_ML\", \"troch_west\", \"troch_LN\"]\nplotGroupColors = [\"blue\",\"turquoise1\", \"seagreen4\",\"seagreen3\",\"seagreen2\",\"olivedrab3\",\"olivedrab2\",\"olivedrab1\",\"yellow\"]\n\n# Set no limit (or high limit anyway) on the number of individuals per group to plot\nnumIndsToPlotWithHets = fill(10, length(plotGroups))\n\ngenosForGBI_limited, indMetadataforGBI_limited = limitIndsToPlot(plotGroups,\n                                            numIndsToPlotWithHets, \n                                            genosForGBI, metadataForGBI;\n                                            sortByMissing = false)\n\nplotGenotypeByIndividual(regionInfo, posForGBI,\n                genosForGBI_limited, indMetadataforGBI_limited, freqsForGBI, plotGroups, plotGroupColors;\n                missingFractionAllowed = missingFractionAllowed)\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\n\n(Scene (768px, 960px):\n  0 Plots\n  2 Child Scenes:\n    ├ Scene (768px, 960px)\n    └ Scene (768px, 960px), Union{Missing, Int16}[0 0 … 0 0; 0 0 … 0 0; … ; 2 1 … 2 2; 2 0 … 2 2], [1828808, 1857465, 1857494, 1871762, 1872112, 1872224, 1872436, 1877640, 1879179, 1879284  …  2111032, 2122636, 2147415, 2179072, 2188581, 2195551, 2195993, 2239778, 2424032, 2430428], 74×22 DataFrame\n Row │ ind                        ID                         location  group   ⋯\n     │ String                     String                     String7   String1 ⋯\n─────┼──────────────────────────────────────────────────────────────────────────\n   1 │ GW_Armando_plate1_JF12G04  GW_Armando_plate1_JF12G04  ST_vi     vir     ⋯\n   2 │ GW_Armando_plate2_JF03G01  GW_Armando_plate2_JF03G01  ST_vi     vir_mis\n   3 │ GW_Armando_plate2_JF30G01  GW_Armando_plate2_JF30G01  ST_vi     vir_mis\n   4 │ GW_Armando_plate1_JF16G01  GW_Armando_plate1_JF16G01  DV_vi     plumb_v\n   5 │ GW_Armando_plate2_JF16G02  GW_Armando_plate2_JF16G02  DV_vi     plumb_v ⋯\n   6 │ GW_Armando_plate2_JE31G01  GW_Armando_plate2_JE31G01  VB_vi     vir_mis\n   7 │ GW_Armando_plate2_JF03G02  GW_Armando_plate2_JF03G02  VB_vi     vir_mis\n   8 │ GW_Armando_plate1_AB1      GW_Armando_plate1_AB1      AB        vir\n   9 │ GW_Lane5_AB2               GW_Lane5_AB2               AB        vir     ⋯\n  10 │ GW_Armando_plate1_TL3      GW_Armando_plate1_TL3      TL        vir\n  11 │ GW_Lane5_AA1               GW_Lane5_AA1               AA        vir_S\n  ⋮  │             ⋮                          ⋮                 ⋮          ⋮   ⋱\n  65 │ GW_Armando_plate2_LN2      GW_Armando_plate2_LN2      LN        troch_L\n  66 │ GW_Lane5_LN1               GW_Lane5_LN1               LN        troch_L ⋯\n  67 │ GW_Lane5_LN10              GW_Lane5_LN10              LN        troch_L\n  68 │ GW_Lane5_LN12              GW_Lane5_LN12              LN        troch_L\n  69 │ GW_Lane5_LN14              GW_Lane5_LN14              LN        troch_L\n  70 │ GW_Lane5_LN16              GW_Lane5_LN16              LN        troch_L ⋯\n  71 │ GW_Lane5_LN18              GW_Lane5_LN18              LN        troch_L\n  72 │ GW_Lane5_LN19              GW_Lane5_LN19              LN        troch_L\n  73 │ GW_Lane5_LN20              GW_Lane5_LN20              LN        troch_L\n  74 │ GW_Lane5_LN3               GW_Lane5_LN3               LN        troch_L ⋯\n                                                  19 columns and 53 rows omitted)\n\n\n\n\n\nshow same but with only troch plumb pops\n\nincludeTheseClusters = [\"troch\", \"obs\", \"plumb\"] # these are the haplotype clusters to include in the choice below of SNPs to show\n\n# Calculate allele freqs and sample sizes\nfreqs_local, sampleSizes_local = getFreqsAndSampleSizes(genos_selectedSNPs, clusterMembership, includeTheseClusters)\n\n# limit the SNPs to those with variants greater than 50% in \n# at least one pop, and less than 50% in at least one pop.\n# (So for each column in `freqs`, the maximum should be &gt; 0.5 \n# and the minimum should be &lt; 0.5)\nselectedSNPs = (vec(maximum(freqs_local, dims=1)) .&gt; 0.5) .& (vec(minimum(freqs_local, dims=1)) .&lt; 0.5)\ngenosForGBI = genos_selectedSNPs[:, selectedSNPs]\nposForGBI = pos_selectedSNPs[selectedSNPs, :]\nfreqsForGBI = freqs_local[:, selectedSNPs]\n\nmetadataForGBI = copy(PCAmodelAll.metadata)\nmetadataForGBI.Fst_group = metadataForGBI.original_Fst_groups\n\n# remove individuals that have vir haplotypes, as this could otherwise be mistaken for introgression from obscuratus:\n\nremoveTheseInds = [\"GW_Armando_plate1_JF24G02\", # gw19 hetero from plumb \n                    \"GW_Armando_plate1_JF07G03\", # gw19 hetero from plumb\n                    \"GW_Armando_plate1_JF12G02\", # gw19 hetero from plumb\n                    \"GW_Armando_plate1_JF09G01\"] # gw28 is hetero from plumb \nselection = map(in(removeTheseInds), metadataForGBI.ind)\nmetadataForGBI = metadataForGBI[.!selection, :]\ngenosForGBI = genosForGBI[.!selection, :]\n\nplotGroups = [\"troch_LN\",\"troch_EM\",\"obs\",\"plumb_BJ\",\"plumb\"]\nplotGroupColors = [\"yellow\",\"gold\",\"orange\",\"pink\",\"red\"]\n\n# Set  limit on the number of individuals per group to plot\nnumIndsToPlotWithHets = fill(15, length(plotGroups))\n\n# metadataForGBI[metadataForGBI.Fst_group .== \"plumb\", :]\n\ngenosForGBI_limited, indMetadataforGBI_limited = limitIndsToPlot(plotGroups,\n                                            numIndsToPlotWithHets, \n                                            genosForGBI, metadataForGBI;\n                                            sortByMissing = false)\n\n# indMetadataforGBI_limited[indMetadataforGBI_limited.Fst_group .== \"plumb\", :]\n\nplotGenotypeByIndividual(regionInfo, posForGBI,\n                genosForGBI_limited, indMetadataforGBI_limited, freqsForGBI, plotGroups, plotGroupColors;\n                missingFractionAllowed = missingFractionAllowed)\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\n\n(Scene (768px, 960px):\n  0 Plots\n  2 Child Scenes:\n    ├ Scene (768px, 960px)\n    └ Scene (768px, 960px), Union{Missing, Int16}[1 1 … 0 0; 1 1 … 0 0; … ; 2 2 … 2 2; 2 2 … 2 2], [1857465, 1857494, 1872060, 1872112, 1879000, 1946511, 1948810, 1963744, 1963988, 1979848  …  2155255, 2179072, 2188531, 2190736, 2190739, 2200040, 2239778, 2245870, 2424032, 2430336], 37×22 DataFrame\n Row │ ind                        ID                         location  group   ⋯\n     │ String                     String                     String7   String1 ⋯\n─────┼──────────────────────────────────────────────────────────────────────────\n   1 │ GW_Armando_plate2_LN2      GW_Armando_plate2_LN2      LN        troch_L ⋯\n   2 │ GW_Lane5_LN1               GW_Lane5_LN1               LN        troch_L\n   3 │ GW_Lane5_LN10              GW_Lane5_LN10              LN        troch_L\n   4 │ GW_Lane5_LN12              GW_Lane5_LN12              LN        troch_L\n   5 │ GW_Lane5_LN14              GW_Lane5_LN14              LN        troch_L ⋯\n   6 │ GW_Lane5_LN16              GW_Lane5_LN16              LN        troch_L\n   7 │ GW_Lane5_LN18              GW_Lane5_LN18              LN        troch_L\n   8 │ GW_Lane5_LN19              GW_Lane5_LN19              LN        troch_L\n   9 │ GW_Lane5_LN20              GW_Lane5_LN20              LN        troch_L ⋯\n  10 │ GW_Lane5_LN3               GW_Lane5_LN3               LN        troch_L\n  11 │ GW_Lane5_LN4               GW_Lane5_LN4               LN        troch_L\n  ⋮  │             ⋮                          ⋮                 ⋮         ⋮    ⋱\n  28 │ GW_Armando_plate1_JF09G02  GW_Armando_plate1_JF09G02  ST        plumb\n  29 │ GW_Armando_plate1_JF11G01  GW_Armando_plate1_JF11G01  ST        plumb   ⋯\n  30 │ GW_Armando_plate1_JF12G01  GW_Armando_plate1_JF12G01  ST        plumb\n  31 │ GW_Armando_plate1_JF13G01  GW_Armando_plate1_JF13G01  ST        plumb\n  32 │ GW_Armando_plate1_JF26G01  GW_Armando_plate1_JF26G01  ST        plumb\n  33 │ GW_Armando_plate1_JF27G01  GW_Armando_plate1_JF27G01  ST        plumb   ⋯\n  34 │ GW_Armando_plate1_JF29G01  GW_Armando_plate1_JF29G01  ST        plumb\n  35 │ GW_Armando_plate1_JF15G03  GW_Armando_plate1_JF15G03  DV        plumb\n  36 │ GW_Armando_plate1_JF23G01  GW_Armando_plate1_JF23G01  VB        plumb\n  37 │ GW_Armando_plate1_JF23G02  GW_Armando_plate1_JF23G02  VB        plumb   ⋯\n                                                  19 columns and 16 rows omitted)",
    "crumbs": [
      "Home",
      "Greenish Warbler heterozygosity variance analysis"
    ]
  },
  {
    "objectID": "GW_Heterozygosity_Variance.html#show-just-the-west-area-without-nitidus-2",
    "href": "GW_Heterozygosity_Variance.html#show-just-the-west-area-without-nitidus-2",
    "title": "Greenish Warbler heterozygosity variance analysis",
    "section": "Show just the west area (without nitidus)",
    "text": "Show just the west area (without nitidus)\n\nclusterNamesWithHetsWest = [\"virLud\",\n                        \"virLud_troch\",\n                        \"troch\"]\n\nclusterColorsWithHetsWest = [\"blue\",\n                        \"yellowgreen\",\n                        \"yellow\"]\n\n# limit the SNPs to those with variants greater than 50% in \n# at least one pop, and less than 50% in at least one pop.\n# (So for each column in `freqs`, the maximum should be &gt; 0.5 \n# and the minimum should be &lt; 0.5)\n# Calculate allele freqs and sample sizes\nfreqs, sampleSizes = getFreqsAndSampleSizes(genos_selectedSNPs, clusterMembershipWithHets, clusterNamesWithHetsWest)\nprintln(\"Calculated population allele frequencies and sample sizes\")\nselectedSNPs = (vec(maximum(freqs, dims=1)) .&gt; 0.5) .& (vec(minimum(freqs, dims=1)) .&lt; 0.5)\ngenos_selectedSNPs2 = genos_selectedSNPs[:, selectedSNPs]\npos_selectedSNPs2 = pos_selectedSNPs[selectedSNPs, :]\nfreqs_selectedSNPs2 = freqs[:, selectedSNPs]\n\nnumIndsToPlotWithHets = [100, 100, 100]\n\ngenosForGBI, indMetadataforGBI = limitIndsToPlot(clusterNamesWithHetsWest, numIndsToPlotWithHets, \n                                            genos_selectedSNPs2, PCAmodelAll.metadata;\n                                            sortByMissing = true)\n\nplotGenotypeByIndividual(regionInfo, pos_selectedSNPs2,\n                genosForGBI, indMetadataforGBI, freqs_selectedSNPs2, clusterNamesWithHetsWest, clusterColorsWithHetsWest;\n                missingFractionAllowed = missingFractionAllowed,\n                indColorLeftProvided = false,\n                indColorRightProvided = true)\n\nCalculated population allele frequencies and sample sizes\n\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\n\n(Scene (768px, 960px):\n  0 Plots\n  2 Child Scenes:\n    ├ Scene (768px, 960px)\n    └ Scene (768px, 960px), Union{Missing, Int16}[0 0 … 0 0; 0 1 … 0 0; … ; 2 0 … 2 2; 2 1 … 2 2], [1828808, 1857465, 1857494, 1871762, 1872112, 1872224, 1872436, 1877640, 1879179, 1879284  …  2111032, 2122636, 2147415, 2179072, 2188581, 2195551, 2195993, 2239778, 2424032, 2430428], 176×22 DataFrame\n Row │ ind                        ID                         location  group   ⋯\n     │ String                     String                     String7   String1 ⋯\n─────┼──────────────────────────────────────────────────────────────────────────\n   1 │ GW_Armando_plate1_JF12G04  GW_Armando_plate1_JF12G04  ST_vi     vir     ⋯\n   2 │ GW_Armando_plate2_JF30G01  GW_Armando_plate2_JF30G01  ST_vi     vir_mis\n   3 │ GW_Armando_plate2_JF03G01  GW_Armando_plate2_JF03G01  ST_vi     vir_mis\n   4 │ GW_Lane5_STvi1             GW_Lane5_STvi1             ST_vi     vir\n   5 │ GW_Lane5_STvi3             GW_Lane5_STvi3             ST_vi     vir     ⋯\n   6 │ GW_Lane5_STvi2             GW_Lane5_STvi2             ST_vi     vir\n   7 │ GW_Armando_plate2_JF16G02  GW_Armando_plate2_JF16G02  DV_vi     plumb_v\n   8 │ GW_Armando_plate1_JF16G01  GW_Armando_plate1_JF16G01  DV_vi     plumb_v\n   9 │ GW_Armando_plate2_JE31G01  GW_Armando_plate2_JE31G01  VB_vi     vir_mis ⋯\n  10 │ GW_Armando_plate2_JF03G02  GW_Armando_plate2_JF03G02  VB_vi     vir_mis\n  11 │ GW_Lane5_YK11              GW_Lane5_YK11              YK        vir\n  ⋮  │             ⋮                          ⋮                 ⋮          ⋮   ⋱\n 167 │ GW_Lane5_LN18              GW_Lane5_LN18              LN        troch_L\n 168 │ GW_Lane5_LN19              GW_Lane5_LN19              LN        troch_L ⋯\n 169 │ GW_Lane5_LN20              GW_Lane5_LN20              LN        troch_L\n 170 │ GW_Lane5_LN3               GW_Lane5_LN3               LN        troch_L\n 171 │ GW_Lane5_LN4               GW_Lane5_LN4               LN        troch_L\n 172 │ GW_Lane5_LN6               GW_Lane5_LN6               LN        troch_L ⋯\n 173 │ GW_Armando_plate2_LN2      GW_Armando_plate2_LN2      LN        troch_L\n 174 │ GW_Lane5_LN16              GW_Lane5_LN16              LN        troch_L\n 175 │ GW_Lane5_LN8               GW_Lane5_LN8               LN        troch_L\n 176 │ GW_Lane5_LN7               GW_Lane5_LN7               LN        troch_L ⋯\n                                                 19 columns and 155 rows omitted)",
    "crumbs": [
      "Home",
      "Greenish Warbler heterozygosity variance analysis"
    ]
  },
  {
    "objectID": "GW_Heterozygosity_Variance.html#show-just-the-east-area-2",
    "href": "GW_Heterozygosity_Variance.html#show-just-the-east-area-2",
    "title": "Greenish Warbler heterozygosity variance analysis",
    "section": "Show just the east area",
    "text": "Show just the east area\n\nclusterNamesWithHetsWest = [\"troch\",\n                            \"obs\",\n                            \"obsHet\",\n                            \"obs_plumb\",\n                            \"plumb\"]\n\nclusterColorsWithHetsWest = [\"yellow\",\n                            \"orange\",\n                            \"darkgoldenrod1\",\n                            \"darkorange1\",\n                            \"red\"]\n\n# limit the SNPs to those with variants greater than 50% in \n# at least one pop, and less than 50% in at least one pop.\n# (So for each column in `freqs`, the maximum should be &gt; 0.5 \n# and the minimum should be &lt; 0.5)\n# Calculate allele freqs and sample sizes\nfreqs, sampleSizes = getFreqsAndSampleSizes(genos_selectedSNPs, clusterMembershipWithHets, clusterNamesWithHetsWest)\nprintln(\"Calculated population allele frequencies and sample sizes\")\nselectedSNPs = (vec(maximum(freqs, dims=1)) .&gt; 0.5) .& (vec(minimum(freqs, dims=1)) .&lt; 0.5)\ngenos_selectedSNPs2 = genos_selectedSNPs[:, selectedSNPs]\npos_selectedSNPs2 = pos_selectedSNPs[selectedSNPs, :]\nfreqs_selectedSNPs2 = freqs[:, selectedSNPs]\n\nnumIndsToPlotWithHets = [100, 100, 100, 100, 100]\n\ngenosForGBI, indMetadataforGBI = limitIndsToPlot(clusterNamesWithHetsWest, numIndsToPlotWithHets, \n                                            genos_selectedSNPs2, PCAmodelAll.metadata;\n                                            sortByMissing = true)\n\nplotGenotypeByIndividual(regionInfo, pos_selectedSNPs2,\n                genosForGBI, indMetadataforGBI, freqs_selectedSNPs2, clusterNamesWithHetsWest, clusterColorsWithHetsWest;\n                missingFractionAllowed = missingFractionAllowed,\n                indColorLeftProvided = false,\n                indColorRightProvided = true)\n\nCalculated population allele frequencies and sample sizes\n\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\n\n(Scene (768px, 960px):\n  0 Plots\n  2 Child Scenes:\n    ├ Scene (768px, 960px)\n    └ Scene (768px, 960px), Union{Missing, Int16}[2 2 … 0 0; 1 1 … 0 0; … ; 2 2 … 2 2; 2 2 … 2 2], [1857465, 1857494, 1872060, 1872112, 1879000, 1946511, 1948810, 1963744, 1963988, 1979848  …  2155255, 2179072, 2188531, 2190736, 2190739, 2200040, 2239778, 2245870, 2424032, 2430336], 138×22 DataFrame\n Row │ ind                        ID                         location  group   ⋯\n     │ String                     String                     String7   String1 ⋯\n─────┼──────────────────────────────────────────────────────────────────────────\n   1 │ GW_Armando_plate1_TTGW70   GW_Armando_plate1_TTGW70   SA        lud_Sat ⋯\n   2 │ GW_Armando_plate1_TTGW72   GW_Armando_plate1_TTGW72   SA        lud_Sat\n   3 │ GW_Armando_plate1_TTGW78   GW_Armando_plate1_TTGW78   SA        lud_Sat\n   4 │ GW_Armando_plate2_TTGW73   GW_Armando_plate2_TTGW73   SA        lud_Sat\n   5 │ GW_Armando_plate2_TTGW75   GW_Armando_plate2_TTGW75   SA        lud_Sat ⋯\n   6 │ GW_Armando_plate2_TTGW77   GW_Armando_plate2_TTGW77   SA        lud_Sat\n   7 │ GW_Armando_plate2_TTGW80   GW_Armando_plate2_TTGW80   SA        lud_Sat\n   8 │ GW_Armando_plate2_TTGW79   GW_Armando_plate2_TTGW79   SA        lud_Sat\n   9 │ GW_Armando_plate1_TTGW55   GW_Armando_plate1_TTGW55   NG        lud_Nai ⋯\n  10 │ GW_Armando_plate1_TTGW59   GW_Armando_plate1_TTGW59   NG        lud_Nai\n  11 │ GW_Lane5_PT2               GW_Lane5_PT2               ML        lud_ML\n  ⋮  │             ⋮                          ⋮                 ⋮            ⋮ ⋱\n 129 │ GW_Armando_plate1_JF23G02  GW_Armando_plate1_JF23G02  VB        plumb\n 130 │ GW_Armando_plate2_JF24G01  GW_Armando_plate2_JF24G01  VB        plumb   ⋯\n 131 │ GW_Armando_plate2_JF25G01  GW_Armando_plate2_JF25G01  VB        plumb\n 132 │ GW_Armando_plate1_JG02G02  GW_Armando_plate1_JG02G02  PR        plumb\n 133 │ GW_Armando_plate1_JG02G04  GW_Armando_plate1_JG02G04  PR        plumb\n 134 │ GW_Armando_plate2_JG01G01  GW_Armando_plate2_JG01G01  PR        plumb   ⋯\n 135 │ GW_Armando_plate2_JG02G01  GW_Armando_plate2_JG02G01  PR        plumb\n 136 │ GW_Armando_plate2_JG02G03  GW_Armando_plate2_JG02G03  PR        plumb\n 137 │ GW_Lane5_SL1               GW_Lane5_SL1               SL        plumb\n 138 │ GW_Lane5_SL2               GW_Lane5_SL2               SL        plumb   ⋯\n                                                 19 columns and 117 rows omitted)",
    "crumbs": [
      "Home",
      "Greenish Warbler heterozygosity variance analysis"
    ]
  },
  {
    "objectID": "GW_Heterozygosity_Variance.html#show-just-the-northern-area-2",
    "href": "GW_Heterozygosity_Variance.html#show-just-the-northern-area-2",
    "title": "Greenish Warbler heterozygosity variance analysis",
    "section": "Show just the northern area",
    "text": "Show just the northern area\n\nclusterNamesWithHetsWest = [\"virLud\",\n                            \"vir_plumb\",\n                            \"plumb\"]\n\nclusterColorsWithHetsWest = [\"blue\",\n                            \"purple\",\n                            \"red\"]\n\n# limit the SNPs to those with variants greater than 50% in \n# at least one pop, and less than 50% in at least one pop.\n# (So for each column in `freqs`, the maximum should be &gt; 0.5 \n# and the minimum should be &lt; 0.5)\n# Calculate allele freqs and sample sizes\nfreqs, sampleSizes = getFreqsAndSampleSizes(genos_selectedSNPs, clusterMembershipWithHets, clusterNamesWithHetsWest)\nprintln(\"Calculated population allele frequencies and sample sizes\")\nselectedSNPs = (vec(maximum(freqs, dims=1)) .&gt; 0.5) .& (vec(minimum(freqs, dims=1)) .&lt; 0.5)\ngenos_selectedSNPs2 = genos_selectedSNPs[:, selectedSNPs]\npos_selectedSNPs2 = pos_selectedSNPs[selectedSNPs, :]\nfreqs_selectedSNPs2 = freqs[:, selectedSNPs]\n\nnumIndsToPlotWithHets = [100, 100, 100]\n\ngenosForGBI, indMetadataforGBI = limitIndsToPlot(clusterNamesWithHetsWest, numIndsToPlotWithHets, \n                                            genos_selectedSNPs2, PCAmodelAll.metadata;\n                                            sortByMissing = true)\n\nplotGenotypeByIndividual(regionInfo, pos_selectedSNPs2,\n                genosForGBI, indMetadataforGBI, freqs_selectedSNPs2, clusterNamesWithHetsWest, clusterColorsWithHetsWest;\n                missingFractionAllowed = missingFractionAllowed,\n                indColorLeftProvided = false,\n                indColorRightProvided = true)\n\nCalculated population allele frequencies and sample sizes\n\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\n\n(Scene (768px, 960px):\n  0 Plots\n  2 Child Scenes:\n    ├ Scene (768px, 960px)\n    └ Scene (768px, 960px), Union{Missing, Int16}[0 0 … 0 0; 0 0 … 0 0; … ; 2 2 … 2 2; 1 1 … 1 1], [1828808, 1871762, 1872060, 1872224, 1872436, 1877640, 1879000, 1879179, 1879284, 1946507  …  2111032, 2122636, 2188531, 2188581, 2190739, 2195551, 2195993, 2200040, 2430336, 2430428], 146×22 DataFrame\n Row │ ind                        ID                         location  group   ⋯\n     │ String                     String                     String7   String1 ⋯\n─────┼──────────────────────────────────────────────────────────────────────────\n   1 │ GW_Armando_plate1_JF12G04  GW_Armando_plate1_JF12G04  ST_vi     vir     ⋯\n   2 │ GW_Armando_plate2_JF30G01  GW_Armando_plate2_JF30G01  ST_vi     vir_mis\n   3 │ GW_Lane5_STvi1             GW_Lane5_STvi1             ST_vi     vir\n   4 │ GW_Armando_plate2_JF03G01  GW_Armando_plate2_JF03G01  ST_vi     vir_mis\n   5 │ GW_Lane5_STvi3             GW_Lane5_STvi3             ST_vi     vir     ⋯\n   6 │ GW_Lane5_STvi2             GW_Lane5_STvi2             ST_vi     vir\n   7 │ GW_Armando_plate2_JF16G02  GW_Armando_plate2_JF16G02  DV_vi     plumb_v\n   8 │ GW_Armando_plate1_JF16G01  GW_Armando_plate1_JF16G01  DV_vi     plumb_v\n   9 │ GW_Armando_plate2_JE31G01  GW_Armando_plate2_JE31G01  VB_vi     vir_mis ⋯\n  10 │ GW_Armando_plate2_JF03G02  GW_Armando_plate2_JF03G02  VB_vi     vir_mis\n  11 │ GW_Lane5_YK11              GW_Lane5_YK11              YK        vir\n  ⋮  │             ⋮                          ⋮                 ⋮          ⋮   ⋱\n 137 │ GW_Armando_plate2_JF24G01  GW_Armando_plate2_JF24G01  VB        plumb\n 138 │ GW_Armando_plate2_JF25G01  GW_Armando_plate2_JF25G01  VB        plumb   ⋯\n 139 │ GW_Armando_plate1_JG02G02  GW_Armando_plate1_JG02G02  PR        plumb\n 140 │ GW_Armando_plate1_JG02G04  GW_Armando_plate1_JG02G04  PR        plumb\n 141 │ GW_Armando_plate2_JG01G01  GW_Armando_plate2_JG01G01  PR        plumb\n 142 │ GW_Armando_plate2_JG02G01  GW_Armando_plate2_JG02G01  PR        plumb   ⋯\n 143 │ GW_Armando_plate2_JG02G03  GW_Armando_plate2_JG02G03  PR        plumb\n 144 │ GW_Lane5_SL1               GW_Lane5_SL1               SL        plumb\n 145 │ GW_Lane5_SL2               GW_Lane5_SL2               SL        plumb\n 146 │ GW_Armando_plate1_JF10G03  GW_Armando_plate1_JF10G03  ST        plumb_v ⋯\n                                                 19 columns and 125 rows omitted)",
    "crumbs": [
      "Home",
      "Greenish Warbler heterozygosity variance analysis"
    ]
  },
  {
    "objectID": "GW_Heterozygosity_Variance.html#now-do-the-same-for-chr-26",
    "href": "GW_Heterozygosity_Variance.html#now-do-the-same-for-chr-26",
    "title": "Greenish Warbler heterozygosity variance analysis",
    "section": "Now do the same for chr 26",
    "text": "Now do the same for chr 26\n\n# choose scaffold\nchr = \"gw26\"\n\npositionMin, positionMax, regionText, \n    windowedIndHetStanRegion, meanAcrossRegionIndHetStan,\n    genos_highViSHetRegion, pos_highViSHetRegion, regionInfo = \n    getWindowedIndHetStanRegion(genosOnly_included, \n                            pos_SNP_filtered, \n                            highViSHetRegions, chr;\n                            windowSize = 500)\n\n# inspect values for mean IndHetStan per individual for that high ViSHet region\nplot(meanAcrossRegionIndHetStan)\n\n# Add column to metadata containing the regionIndHetStan for this highHet region:\ncommand = \"ind_with_metadata_included.\" * chr * \"_regionIndHetStan = meanAcrossRegionIndHetStan\"\neval(Meta.parse(command)) # this executes the command constructed above\nind_with_metadata_included.regionIndHetStan = meanAcrossRegionIndHetStan\n\n#names(ind_with_metadata_included)\n\n# check whether missing data related to heterozygosity (good news: not really)\nplot(ind_with_metadata_included.numMissings, meanAcrossRegionIndHetStan)\n\n# PCA of all individuals:\n\ngenos_highViSHetRegion_imputed = Impute.svd(Matrix{Union{Missing, Float32}}(genos_highViSHetRegion))\n\nflipPC1 = false\nflipPC2 = false\n\nPCAmodelAll = plotPCA(genos_highViSHetRegion_imputed, ind_with_metadata_included, \n            groups_to_plot_PCA, group_colors_PCA; \n            sampleSet = \"greenish warblers\", regionText = regionText,\n            flip1 = flipPC1, flip2 = flipPC2,\n            lineOpacity = 0.7, fillOpacity = 0.6,\n            symbolSize = 14, showTitle = true,\n            xLabelText = string(\"Region PC1\"), yLabelText = string(\"Region PC2\"),\n            showPlot = false)\n\ndisplay(PCAmodelAll.PCAfig)\n\n# Add PC values to metadata for individuals included in PCA above:\nif flipPC1\n    PCAmodelAll.metadata.PC1 = -1 .* PCAmodelAll.values[1,:]\nelse \n    PCAmodelAll.metadata.PC1 = PCAmodelAll.values[1,:]\nend\nif flipPC2\n    PCAmodelAll.metadata.PC2 = -1 .* PCAmodelAll.values[2,:]\nelse\n    PCAmodelAll.metadata.PC2 = PCAmodelAll.values[2,:]\nend\nPCAmodelAll.metadata.PC3 = PCAmodelAll.values[3,:]\n\n# For the next bit to work with above, make sure that all individuals in the above `plotPCA` command\n# are included in the `groups_to_plot_PCA`\n\n# choose inds with low IndHet in high ViSHet region:\nindSelection_lowIndHetStan = (meanAcrossRegionIndHetStan .&lt; 1.5) \n\n#Plot only the lowIndHetStan individuals:\n\nf = CairoMakie.Figure()\nax = Axis(f[1, 1],\n    title = \"PC1 vs. PC2, only low heterozygosity\",\n    xlabel = \"Region PC1\", xlabelsize = 24,\n    ylabel = \"Region PC2\", ylabelsize = 24,\n    autolimitaspect = 1)\nhidedecorations!(ax, label = false, ticklabels = false, ticks = false) # hide background lattice\nfor i in eachindex(groups_to_plot_PCA) \n    selection = (PCAmodelAll.metadata.Fst_group .== groups_to_plot_PCA[i]) .& indSelection_lowIndHetStan\n    CairoMakie.scatter!(ax, PCAmodelAll.metadata.PC1[selection], PCAmodelAll.metadata.PC2[selection], marker = :diamond, color = (group_colors_PCA[i], 0.6), markersize = 14, strokewidth=0.5, strokecolor = (\"black\", 0.7))\nend\ndisplay(f)\n\nGood news: 1 region on that scaffold\n\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\nCairoMakie.Screen{IMAGE}\n\n\n\nSave the individual colors in the metadata\n\nindColors = fill(\"\", size(PCAmodelAll.metadata, 1))\nfor i in axes(PCAmodelAll.metadata, 1)\n    indColors[i] = group_colors_PCA[findfirst(groups_to_plot_PCA .== PCAmodelAll.metadata.Fst_group[i])]\nend\nPCAmodelAll.metadata.indColorLeft = indColors\nPCAmodelAll.metadata.indColorRight = indColors\n\n257-element Vector{String}:\n \"blue\"\n \"red\"\n \"red\"\n \"red\"\n \"red\"\n \"red\"\n \"red\"\n \"purple\"\n \"red\"\n \"red\"\n \"red\"\n \"blue\"\n \"red\"\n ⋮\n \"olivedrab2\"\n \"olivedrab2\"\n \"olivedrab2\"\n \"olivedrab2\"\n \"olivedrab2\"\n \"olivedrab2\"\n \"olivedrab2\"\n \"olivedrab2\"\n \"olivedrab2\"\n \"olivedrab2\"\n \"olivedrab2\"\n \"olivedrab2\"\n\n\n\n\nPlot PC1 vs. PC2:\n\nf = CairoMakie.Figure()\nax = Axis(f[1, 1],\n    title = \"PC1 vs. PC2\",\n    xlabel = \"Region PC1\", xlabelsize = 24,\n    ylabel = \"Region PC2\", ylabelsize = 24,\n    autolimitaspect = 1)\nhidedecorations!(ax, label = false, ticklabels = false, ticks = false) # hide background lattice\nfor i in eachindex(groups_to_plot_PCA) \n    selection = PCAmodelAll.metadata.Fst_group .== groups_to_plot_PCA[i]\n    CairoMakie.scatter!(ax, PCAmodelAll.metadata.PC1[selection], PCAmodelAll.metadata.PC2[selection], marker = :diamond, color = (group_colors_PCA[i], 0.6), markersize = 14, strokewidth=0.5, strokecolor = (\"black\", 0.7))\nend\ndisplay(f)\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\nCairoMakie.Screen{IMAGE}\n\n\n\n\nPlot PC1 vs. PC3:\n\nf = CairoMakie.Figure()\nax = Axis(f[1, 1],\n    title = \"PC1 vs. PC3\",\n    xlabel = \"Region PC1\", xlabelsize = 24,\n    ylabel = \"Region PC3\", ylabelsize = 24,\n    autolimitaspect = 1)\nhidedecorations!(ax, label = false, ticklabels = false, ticks = false) # hide background lattice\nfor i in eachindex(groups_to_plot_PCA) \n    selection = PCAmodelAll.metadata.Fst_group .== groups_to_plot_PCA[i]\n    CairoMakie.scatter!(ax, PCAmodelAll.metadata.PC1[selection], PCAmodelAll.metadata.PC3[selection], marker = :diamond, color = (group_colors_PCA[i], 0.6), markersize = 14, strokewidth=0.5, strokecolor = (\"black\", 0.7))\nend\ndisplay(f)\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\nCairoMakie.Screen{IMAGE}",
    "crumbs": [
      "Home",
      "Greenish Warbler heterozygosity variance analysis"
    ]
  },
  {
    "objectID": "GW_Heterozygosity_Variance.html#at-chr-26-high-vishet-region-there-are-only-5-clear-haplogroups-one-green-is-somewhat-away.-vir-and-lud-vary-along-pc3-but-cannot-be-clearly-grouped.-divide-samples-into-those-groups-based-on-pca-scores-and-then-calculate-pi-within-and-pi-between",
    "href": "GW_Heterozygosity_Variance.html#at-chr-26-high-vishet-region-there-are-only-5-clear-haplogroups-one-green-is-somewhat-away.-vir-and-lud-vary-along-pc3-but-cannot-be-clearly-grouped.-divide-samples-into-those-groups-based-on-pca-scores-and-then-calculate-pi-within-and-pi-between",
    "title": "Greenish Warbler heterozygosity variance analysis",
    "section": "At chr 26 high ViSHet region, there are only 5 clear haplogroups (one green is somewhat away). Vir and lud vary along PC3 but cannot be clearly grouped. Divide samples into those groups, based on PCA scores, and then calculate pi within and pi between",
    "text": "At chr 26 high ViSHet region, there are only 5 clear haplogroups (one green is somewhat away). Vir and lud vary along PC3 but cannot be clearly grouped. Divide samples into those groups, based on PCA scores, and then calculate pi within and pi between\n\n# Inspect chromosome 26 PCA of low IndHet (&lt; 1.5) individuals,\n# and specify group boundaries:\n\nclusterNames = [\"virLud\",\n                \"nit\",\n                \"troch\",\n                \"obs\",\n                \"plumb\"]\n\nclusterColors = [\"blue\",\n                \"grey\",\n                \"yellow\",\n                \"orange\",\n                \"red\"]\n\nvirLud = (PCAmodelAll.metadata.PC1 .&lt; -5.5) .& indSelection_lowIndHetStan\nnit = (-5.5 .&lt; PCAmodelAll.metadata.PC1 .&lt; -4) .& indSelection_lowIndHetStan\ntroch = (PCAmodelAll.metadata.PC2 .&lt; -6) .& indSelection_lowIndHetStan\nobs = (-6 .&lt; PCAmodelAll.metadata.PC2 .&lt; -4) .& indSelection_lowIndHetStan\nplumb = (6 .&lt; PCAmodelAll.metadata.PC1) .& (2 .&lt; PCAmodelAll.PC2) .& indSelection_lowIndHetStan\n\n# check the individuals in each group\nPCAmodelAll.metadata.Fst_group[virLud]\nPCAmodelAll.metadata.Fst_group[nit]\nPCAmodelAll.metadata.Fst_group[troch]\nPCAmodelAll.metadata.Fst_group[obs]\nPCAmodelAll.metadata.Fst_group[plumb]\n\nclusterArray = [virLud nit troch obs plumb]\n\n# show numbers in each group\nprintln(\"The numbers in each group are $(sum(clusterArray, dims=1)) and the sum of those is $(sum(sum(clusterArray, dims=1)))\")\n\n# create vectors that indicate the groups and plot order for this analysis:\nclusterMembership = fill(\"none\", nrow(PCAmodelAll.metadata))\nplotOrder = fill(-9, nrow(PCAmodelAll.metadata))\nfor i in eachindex(clusterArray[1,:])\n    clusterMembership[clusterArray[:,i]] .= clusterNames[i]\n    plotOrder[clusterArray[:,i]] .= i\nend\n\n# Calculate allele freqs and sample sizes\nfreqs, sampleSizes = getFreqsAndSampleSizes(genos_highViSHetRegion, clusterMembership, clusterNames)\nprintln(\"Calculated population allele frequencies and sample sizes\")\n\n# Calculate per-site pi (within-group nucleotide distance)\n\nsitePi = getSitePi(freqs, sampleSizes)\n\n# calculate pairwise Dxy per site, using data in \"freqs\" and groups in \"groups\"\n\nDxy, pairwiseDxyClusterNames = getDxy(freqs, clusterNames)\n\nFst, FstNumerator, FstDenominator, pairwiseFstClusterNames = getFst(freqs, sampleSizes, clusterNames; among=false)  # set among to FALSE if no among Fst wanted (some things won't work without it) \n\n# Now get averages of pi and Dxy for whole region:\n\nregionPiTable = DataFrame(cluster = clusterNames, pi = getRegionPi(sitePi))\n#= 5×2 DataFrame\n Row │ cluster  pi         \n     │ String   Float64    \n─────┼─────────────────────\n   1 │ virLud   0.0135205\n   2 │ nit      0.00548557\n   3 │ troch    0.00975861\n   4 │ obs      0.00902527\n   5 │ plumb    0.00510553 =#\n\nregionDxyTable = DataFrame(cluster_pair = pairwiseDxyClusterNames, Dxy = getRegionDxy(Dxy))\n#= 10×2 DataFrame\n Row │ cluster_pair  Dxy       \n     │ String        Float64   \n─────┼─────────────────────────\n   1 │ virLud_nit    0.0243846\n   2 │ virLud_troch  0.0324256\n   3 │ virLud_obs    0.0332749\n   4 │ virLud_plumb  0.0390193\n   5 │ nit_troch     0.0341654\n   6 │ nit_obs       0.0344734\n   7 │ nit_plumb     0.0403857\n   8 │ troch_obs     0.0176458\n   9 │ troch_plumb   0.0296574\n  10 │ obs_plumb     0.0300157 =#\n\n# Make a genotype-by-individual plot using all variable loci in the region,\nmissingFractionAllowed = 0.1\n# in metadata, replace `Fst_group` column with cluster info (needed for the function below):\nPCAmodelAll.metadata.original_Fst_groups = PCAmodelAll.metadata.Fst_group # store the Fst_groups in this\nPCAmodelAll.metadata.Fst_group = clusterMembership\nPCAmodelAll.metadata.original_plot_order = PCAmodelAll.metadata.plot_order # store the original plot_order in this\nPCAmodelAll.metadata.plot_order = plotOrder\n\n# limit the SNPs to those with variants greater than 50% in \n# at least one pop, and less than 50% in at least one pop.\n# (So for each column in `freqs`, the maximum should be &gt; 0.5 \n# and the minimum should be &lt; 0.5)\nselectedSNPs = (vec(maximum(freqs, dims=1)) .&gt; 0.5) .& (vec(minimum(freqs, dims=1)) .&lt; 0.5)\ngenos_selectedSNPs = genos_highViSHetRegion[:, selectedSNPs]\npos_selectedSNPs = pos_highViSHetRegion[selectedSNPs, :]\nFst_selectedSNPs = Fst[:, selectedSNPs]\nfreqs_selectedSNPs = freqs[:, selectedSNPs]\n\n# limit the number of individuals per group to plot\nnumIndsToPlot = fill(15, length(clusterNames))\n\ngenosForGBI, indMetadataforGBI = limitIndsToPlot(clusterNames, numIndsToPlot, \n                                            genos_selectedSNPs, PCAmodelAll.metadata;\n                                            sortByMissing = true)\n\nplotGenotypeByIndividual(regionInfo, pos_selectedSNPs,\n                genosForGBI, indMetadataforGBI, freqs_selectedSNPs, clusterNames, clusterColors;\n                missingFractionAllowed = missingFractionAllowed,\n                indColorRightProvided = true)\n\nThe numbers in each group are [71 2 62 3 67] and the sum of those is 205\nCalculated population allele frequencies and sample sizes\n\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\n\n(Scene (768px, 960px):\n  0 Plots\n  2 Child Scenes:\n    ├ Scene (768px, 960px)\n    └ Scene (768px, 960px), Union{Missing, Int16}[0 0 … 0 0; 0 0 … 0 0; … ; 2 0 … 2 2; 2 0 … 2 2], [4175655, 4190847, 4195006, 4201372, 4201950, 4201984, 4202662, 4220609, 4223822, 4269946  …  5519564, 5519744, 5524191, 5524276, 5530753, 5530774, 5535422, 5540526, 5549587, 5549602], 50×24 DataFrame\n Row │ ind                           ID                            location  g ⋯\n     │ String                        String                        String7   S ⋯\n─────┼──────────────────────────────────────────────────────────────────────────\n   1 │ GW_Armando_plate1_JF12G04     GW_Armando_plate1_JF12G04     ST_vi     v ⋯\n   2 │ GW_Armando_plate2_TTGW16      GW_Armando_plate2_TTGW16      TH        l\n   3 │ GW_Lane5_TL10                 GW_Lane5_TL10                 TL        v\n   4 │ GW_Lane5_TL11                 GW_Lane5_TL11                 TL        v\n   5 │ GW_Lane5_TL12                 GW_Lane5_TL12                 TL        v ⋯\n   6 │ GW_Armando_plate1_AB1         GW_Armando_plate1_AB1         AB        v\n   7 │ GW_Armando_plate1_TTGW19      GW_Armando_plate1_TTGW19      TH        l\n   8 │ GW_Armando_plate1_TTGW22      GW_Armando_plate1_TTGW22      SR        l\n   9 │ GW_Armando_plate1_TTGW58      GW_Armando_plate1_TTGW58      NG        l ⋯\n  10 │ GW_Armando_plate2_JF16G02     GW_Armando_plate2_JF16G02     DV_vi     p\n  11 │ GW_Armando_plate2_TTGW-15-01  GW_Armando_plate2_TTGW-15-01  SR        l\n  ⋮  │              ⋮                             ⋮                   ⋮        ⋱\n  41 │ GW_Armando_plate1_JF23G01     GW_Armando_plate1_JF23G01     VB        p\n  42 │ GW_Armando_plate1_JF23G02     GW_Armando_plate1_JF23G02     VB        p ⋯\n  43 │ GW_Armando_plate1_JF24G02     GW_Armando_plate1_JF24G02     VB        p\n  44 │ GW_Armando_plate1_JF26G01     GW_Armando_plate1_JF26G01     ST        p\n  45 │ GW_Armando_plate1_JF29G02     GW_Armando_plate1_JF29G02     ST        p\n  46 │ GW_Armando_plate1_JF29G03     GW_Armando_plate1_JF29G03     ST        p ⋯\n  47 │ GW_Armando_plate1_JG08G01     GW_Armando_plate1_JG08G01     ST        p\n  48 │ GW_Armando_plate1_RF20G01     GW_Armando_plate1_RF20G01     BJ        o\n  49 │ GW_Armando_plate1_RF29G02     GW_Armando_plate1_RF29G02     BJ        o\n  50 │ GW_Armando_plate1_UY1         GW_Armando_plate1_UY1         UY        p ⋯\n                                                  21 columns and 29 rows omitted)",
    "crumbs": [
      "Home",
      "Greenish Warbler heterozygosity variance analysis"
    ]
  },
  {
    "objectID": "GW_Heterozygosity_Variance.html#now-show-a-gbi-plot-like-above-but-with-heterozygotes-3",
    "href": "GW_Heterozygosity_Variance.html#now-show-a-gbi-plot-like-above-but-with-heterozygotes-3",
    "title": "Greenish Warbler heterozygosity variance analysis",
    "section": "Now show a GBI plot like above, but with heterozygotes:",
    "text": "Now show a GBI plot like above, but with heterozygotes:\n\nclusterNamesWithHets = [\"virLud\",\n                        \"nit\",\n                        \"virLud_troch\",\n                        \"troch\",\n                        \"obs\",\n                        \"obs_plumb\",\n                        \"plumb\",\n                        \"vir_plumb\"]\n\nclusterColorsWithHets = [\"blue\",\n                        \"grey\",\n                        \"yellowgreen\",\n                        \"yellow\",\n                        \"orange\",\n                        \"darkorange1\",\n                        \"red\",\n                        \"purple\"]\n\nvirLud_troch = (-5.5 .&lt; PCAmodelAll.metadata.PC1 .&lt; -2.2) .&\n                (-4 .&lt; PCAmodelAll.metadata.PC2 .&lt; 2) .&\n                 .!indSelection_lowIndHetStan\nobs_plumb = (2.5 .&lt; PCAmodelAll.metadata.PC1 .&lt; 5) .&\n                (-3.5 .&lt; PCAmodelAll.metadata.PC2 .&lt; -1.5) .&\n                 .!indSelection_lowIndHetStan\nvir_plumb = (-2 .&lt; PCAmodelAll.metadata.PC1 .&lt; 3) .&\n                (2.5 .&lt; PCAmodelAll.metadata.PC2 .&lt; 5) .&\n                 .!indSelection_lowIndHetStan\n\n# check the individuals in each group\nPCAmodelAll.metadata.Fst_group[virLud]\nPCAmodelAll.metadata.Fst_group[nit]\nPCAmodelAll.metadata.Fst_group[virLud_troch]\nPCAmodelAll.metadata.Fst_group[troch]\nPCAmodelAll.metadata.Fst_group[obs]\nPCAmodelAll.metadata.Fst_group[obs_plumb]\nPCAmodelAll.metadata.Fst_group[plumb]\nPCAmodelAll.metadata.Fst_group[vir_plumb]\n\nclusterArray = [virLud nit virLud_troch troch obs obs_plumb plumb vir_plumb]\n\nsum(clusterArray, dims=1)\n\nif sum(sum(clusterArray, dims=1)) == size(PCAmodelAll.metadata, 1)\n    println(\"Good news: Individuals included in a group matches total number of individuals\")\nend\n\n# create vectors that indicate the groups and plot order for this analysis:\nclusterMembershipWithHets = fill(\"none\", nrow(PCAmodelAll.metadata))\nplotOrderWithHets = fill(-9, nrow(PCAmodelAll.metadata))\nfor i in eachindex(clusterArray[1,:])\n    clusterMembershipWithHets[clusterArray[:,i]] .= clusterNamesWithHets[i]\n    plotOrderWithHets[clusterArray[:,i]] .= i\nend\n\n# Add column to main metadata object containing the cluster membership for this highHet region:\ncommand = \"ind_with_metadata_included.\" * chr * \"_cluster = clusterMembershipWithHets\"\neval(Meta.parse(command)) # this executes the command constructed above\n\n# in metadata, replace `Fst_group` column with cluster info (needed for the function below):\nPCAmodelAll.metadata.Fst_group = clusterMembershipWithHets\nPCAmodelAll.metadata.plot_order = plotOrderWithHets\n\n# limit the number of individuals per group to plot\nnumIndsToPlotWithHets = fill(15, length(clusterNamesWithHets))\n\ngenosForGBI, indMetadataforGBI = limitIndsToPlot(clusterNamesWithHets, numIndsToPlotWithHets, \n                                            genos_selectedSNPs, PCAmodelAll.metadata;\n                                            sortByMissing = true)\n\nplotGenotypeByIndividual(regionInfo, pos_selectedSNPs,\n                genosForGBI, indMetadataforGBI, freqs_selectedSNPs, clusterNamesWithHets, clusterColorsWithHets;\n                missingFractionAllowed = missingFractionAllowed,\n                indColorLeftProvided = false,\n                indColorRightProvided = true)\n\nGood news: Individuals included in a group matches total number of individuals\n\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\n\n(Scene (768px, 960px):\n  0 Plots\n  2 Child Scenes:\n    ├ Scene (768px, 960px)\n    └ Scene (768px, 960px), Union{Missing, Int16}[0 0 … 0 0; 0 0 … 0 0; … ; 1 0 … 1 1; 1 0 … 1 1], [4175655, 4190847, 4195006, 4201372, 4201950, 4201984, 4202662, 4220609, 4223822, 4269946  …  5519564, 5519744, 5524191, 5524276, 5530753, 5530774, 5535422, 5540526, 5549587, 5549602], 72×24 DataFrame\n Row │ ind                           ID                            location  g ⋯\n     │ String                        String                        String7   S ⋯\n─────┼──────────────────────────────────────────────────────────────────────────\n   1 │ GW_Armando_plate1_JF12G04     GW_Armando_plate1_JF12G04     ST_vi     v ⋯\n   2 │ GW_Armando_plate2_TTGW16      GW_Armando_plate2_TTGW16      TH        l\n   3 │ GW_Lane5_TL10                 GW_Lane5_TL10                 TL        v\n   4 │ GW_Lane5_TL11                 GW_Lane5_TL11                 TL        v\n   5 │ GW_Lane5_TL12                 GW_Lane5_TL12                 TL        v ⋯\n   6 │ GW_Armando_plate1_AB1         GW_Armando_plate1_AB1         AB        v\n   7 │ GW_Armando_plate1_TTGW19      GW_Armando_plate1_TTGW19      TH        l\n   8 │ GW_Armando_plate1_TTGW22      GW_Armando_plate1_TTGW22      SR        l\n   9 │ GW_Armando_plate1_TTGW58      GW_Armando_plate1_TTGW58      NG        l ⋯\n  10 │ GW_Armando_plate2_JF16G02     GW_Armando_plate2_JF16G02     DV_vi     p\n  11 │ GW_Armando_plate2_TTGW-15-01  GW_Armando_plate2_TTGW-15-01  SR        l\n  ⋮  │              ⋮                             ⋮                   ⋮        ⋱\n  63 │ GW_Armando_plate1_JF29G03     GW_Armando_plate1_JF29G03     ST        p\n  64 │ GW_Armando_plate1_JG08G01     GW_Armando_plate1_JG08G01     ST        p ⋯\n  65 │ GW_Armando_plate1_RF20G01     GW_Armando_plate1_RF20G01     BJ        o\n  66 │ GW_Armando_plate1_RF29G02     GW_Armando_plate1_RF29G02     BJ        o\n  67 │ GW_Armando_plate1_UY1         GW_Armando_plate1_UY1         UY        p\n  68 │ GW_Armando_plate1_JF27G01     GW_Armando_plate1_JF27G01     ST        p ⋯\n  69 │ GW_Armando_plate1_JF10G03     GW_Armando_plate1_JF10G03     ST        p\n  70 │ GW_Armando_plate2_JF07G01     GW_Armando_plate2_JF07G01     ST        p\n  71 │ GW_Armando_plate2_JG01G01     GW_Armando_plate2_JG01G01     PR        p\n  72 │ GW_Armando_plate1_JF09G01     GW_Armando_plate1_JF09G01     ST        p ⋯\n                                                  21 columns and 51 rows omitted)\n\n\n\n\nshow GBI plot according to original groups and plot order\n\nPCAmodelAll.metadata.plot_order = PCAmodelAll.metadata.original_plot_order\n\ngenosForGBI, indMetadataforGBI = limitIndsToPlot(clusterNamesWithHets, numIndsToPlotWithHets, \n                                            genos_selectedSNPs, PCAmodelAll.metadata;\n                                            sortByMissing = true)\n\nplotGenotypeByIndividual(regionInfo, pos_selectedSNPs,\n                genosForGBI, indMetadataforGBI, freqs_selectedSNPs, clusterNamesWithHets, clusterColorsWithHets;\n                missingFractionAllowed = missingFractionAllowed,\n                indColorLeftProvided = false,\n                indColorRightProvided = true)\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\n\n(Scene (768px, 960px):\n  0 Plots\n  2 Child Scenes:\n    ├ Scene (768px, 960px)\n    └ Scene (768px, 960px), Union{Missing, Int16}[0 0 … 0 0; 0 0 … 2 0; … ; 1 0 … 1 1; 2 0 … 0 0], [4175655, 4190847, 4195006, 4201372, 4201950, 4201984, 4202662, 4220609, 4223822, 4269946  …  5519564, 5519744, 5524191, 5524276, 5530753, 5530774, 5535422, 5540526, 5549587, 5549602], 72×24 DataFrame\n Row │ ind                        ID                         location  group   ⋯\n     │ String                     String                     String7   String1 ⋯\n─────┼──────────────────────────────────────────────────────────────────────────\n   1 │ GW_Armando_plate1_JF12G04  GW_Armando_plate1_JF12G04  ST_vi     vir     ⋯\n   2 │ GW_Armando_plate2_JF16G02  GW_Armando_plate2_JF16G02  DV_vi     plumb_v\n   3 │ GW_Armando_plate1_AB1      GW_Armando_plate1_AB1      AB        vir\n   4 │ GW_Lane5_TL10              GW_Lane5_TL10              TL        vir\n   5 │ GW_Lane5_TL11              GW_Lane5_TL11              TL        vir     ⋯\n   6 │ GW_Lane5_TL12              GW_Lane5_TL12              TL        vir\n   7 │ GW_Lane5_AA1               GW_Lane5_AA1               AA        vir_S\n   8 │ GW_Lane5_AA4               GW_Lane5_AA4               AA        vir_S\n   9 │ GW_Lane5_TU2               GW_Lane5_TU2               TU        nit     ⋯\n  10 │ GW_Lane5_TU1               GW_Lane5_TU1               TU        nit\n  11 │ GW_Lane5_NA1               GW_Lane5_NA1               NR        lud_PK\n  ⋮  │             ⋮                          ⋮                 ⋮            ⋮ ⋱\n  63 │ GW_Armando_plate1_JF29G03  GW_Armando_plate1_JF29G03  ST        plumb\n  64 │ GW_Armando_plate1_JG08G01  GW_Armando_plate1_JG08G01  ST        plumb   ⋯\n  65 │ GW_Armando_plate1_JF27G01  GW_Armando_plate1_JF27G01  ST        plumb\n  66 │ GW_Armando_plate2_JF07G01  GW_Armando_plate2_JF07G01  ST        plumb\n  67 │ GW_Armando_plate1_JF09G01  GW_Armando_plate1_JF09G01  ST        plumb\n  68 │ GW_Armando_plate1_JF23G01  GW_Armando_plate1_JF23G01  VB        plumb   ⋯\n  69 │ GW_Armando_plate1_JF23G02  GW_Armando_plate1_JF23G02  VB        plumb\n  70 │ GW_Armando_plate1_JF24G02  GW_Armando_plate1_JF24G02  VB        plumb\n  71 │ GW_Armando_plate2_JG01G01  GW_Armando_plate2_JG01G01  PR        plumb\n  72 │ GW_Armando_plate1_JF10G03  GW_Armando_plate1_JF10G03  ST        plumb_v ⋯\n                                                  21 columns and 51 rows omitted)\n\n\n\n\n\nshow same but with all individuals\n\nPCAmodelAll.metadata.plot_order = PCAmodelAll.metadata.original_plot_order\n\n# Set no limit (or high limit anyway) on the number of individuals per group to plot\nnumIndsToPlotWithHets = fill(1000, length(clusterNamesWithHets))\n\ngenosForGBI, indMetadataforGBI = limitIndsToPlot(clusterNamesWithHets, numIndsToPlotWithHets, \n                                            genos_selectedSNPs, PCAmodelAll.metadata;\n                                            sortByMissing = true)\n\nplotGenotypeByIndividual(regionInfo, pos_selectedSNPs,\n                genosForGBI, indMetadataforGBI, freqs_selectedSNPs, clusterNamesWithHets, clusterColorsWithHets;\n                missingFractionAllowed = missingFractionAllowed,\n                indColorLeftProvided = false,\n                indColorRightProvided = true)\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\n\n(Scene (768px, 960px):\n  0 Plots\n  2 Child Scenes:\n    ├ Scene (768px, 960px)\n    └ Scene (768px, 960px), Union{Missing, Int16}[0 0 … 0 0; 0 0 … 0 0; … ; 2 0 … 2 2; 2 0 … 0 0], [4175655, 4190847, 4195006, 4201372, 4201950, 4201984, 4202662, 4220609, 4223822, 4269946  …  5519564, 5519744, 5524191, 5524276, 5530753, 5530774, 5535422, 5540526, 5549587, 5549602], 257×24 DataFrame\n Row │ ind                        ID                         location  group   ⋯\n     │ String                     String                     String7   String1 ⋯\n─────┼──────────────────────────────────────────────────────────────────────────\n   1 │ GW_Armando_plate1_JF12G04  GW_Armando_plate1_JF12G04  ST_vi     vir     ⋯\n   2 │ GW_Lane5_STvi3             GW_Lane5_STvi3             ST_vi     vir\n   3 │ GW_Armando_plate2_JF30G01  GW_Armando_plate2_JF30G01  ST_vi     vir_mis\n   4 │ GW_Lane5_STvi1             GW_Lane5_STvi1             ST_vi     vir\n   5 │ GW_Armando_plate2_JF03G01  GW_Armando_plate2_JF03G01  ST_vi     vir_mis ⋯\n   6 │ GW_Lane5_STvi2             GW_Lane5_STvi2             ST_vi     vir\n   7 │ GW_Armando_plate2_JF16G02  GW_Armando_plate2_JF16G02  DV_vi     plumb_v\n   8 │ GW_Armando_plate1_JF16G01  GW_Armando_plate1_JF16G01  DV_vi     plumb_v\n   9 │ GW_Armando_plate2_JE31G01  GW_Armando_plate2_JE31G01  VB_vi     vir_mis ⋯\n  10 │ GW_Armando_plate2_JF03G02  GW_Armando_plate2_JF03G02  VB_vi     vir_mis\n  11 │ GW_Lane5_YK3               GW_Lane5_YK3               YK        vir\n  ⋮  │             ⋮                          ⋮                 ⋮          ⋮   ⋱\n 248 │ GW_Armando_plate2_JF24G01  GW_Armando_plate2_JF24G01  VB        plumb\n 249 │ GW_Armando_plate2_JF25G01  GW_Armando_plate2_JF25G01  VB        plumb   ⋯\n 250 │ GW_Armando_plate2_JG02G01  GW_Armando_plate2_JG02G01  PR        plumb\n 251 │ GW_Armando_plate2_JG02G03  GW_Armando_plate2_JG02G03  PR        plumb\n 252 │ GW_Armando_plate1_JG02G02  GW_Armando_plate1_JG02G02  PR        plumb\n 253 │ GW_Armando_plate1_JG02G04  GW_Armando_plate1_JG02G04  PR        plumb   ⋯\n 254 │ GW_Armando_plate2_JG01G01  GW_Armando_plate2_JG01G01  PR        plumb\n 255 │ GW_Lane5_SL2               GW_Lane5_SL2               SL        plumb\n 256 │ GW_Lane5_SL1               GW_Lane5_SL1               SL        plumb\n 257 │ GW_Armando_plate1_JF10G03  GW_Armando_plate1_JF10G03  ST        plumb_v ⋯\n                                                 21 columns and 236 rows omitted)\n\n\n\n\n\nshow same but with only vir and plumb pops\n\nincludeTheseClusters = [\"virLud\", \"plumb\"] # these are the haplotype clusters to include in the choice below of SNPs to show\n\n# Calculate allele freqs and sample sizes\nfreqs_local, sampleSizes_local = getFreqsAndSampleSizes(genos_selectedSNPs, clusterMembership, includeTheseClusters)\n\n# limit the SNPs to those with variants greater than 50% in \n# at least one pop, and less than 50% in at least one pop.\n# (So for each column in `freqs`, the maximum should be &gt; 0.5 \n# and the minimum should be &lt; 0.5)\nselectedSNPs = (vec(maximum(freqs_local, dims=1)) .&gt; 0.5) .& (vec(minimum(freqs_local, dims=1)) .&lt; 0.5)\ngenosForGBI = genos_selectedSNPs[:, selectedSNPs]\nposForGBI = pos_selectedSNPs[selectedSNPs, :]\nfreqsForGBI = freqs_local[:, selectedSNPs]\n\nplotGroups = [\"vir\", \"plumb\", \"plumb_vir\"] # these are the original Fst_groups\nplotGroupColors = [\"blue\", \"red\", \"purple\"]\n\nmetadataForGBI = copy(PCAmodelAll.metadata)\n\nmetadataForGBI.Fst_group = metadataForGBI.original_Fst_groups\n\nplotGenotypeByIndividual(regionInfo, posForGBI,\n                genosForGBI, metadataForGBI, freqsForGBI, plotGroups, plotGroupColors;\n                missingFractionAllowed = missingFractionAllowed)\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\n\n(Scene (768px, 960px):\n  0 Plots\n  2 Child Scenes:\n    ├ Scene (768px, 960px)\n    └ Scene (768px, 960px), Union{Missing, Int16}[0 0 … 0 0; 0 0 … 1 0; … ; 2 2 … 2 2; 2 1 … 0 0], [4175655, 4201372, 4202662, 4220609, 4269946, 4272732, 4280387, 4397231, 4397235, 4411591  …  5519560, 5519564, 5524191, 5524276, 5530753, 5530774, 5535422, 5540526, 5549587, 5549602], 100×24 DataFrame\n Row │ ind                        ID                         location  group   ⋯\n     │ String                     String                     String7   String1 ⋯\n─────┼──────────────────────────────────────────────────────────────────────────\n   1 │ GW_Armando_plate1_JF12G04  GW_Armando_plate1_JF12G04  ST_vi     vir     ⋯\n   2 │ GW_Armando_plate2_JF03G01  GW_Armando_plate2_JF03G01  ST_vi     vir_mis\n   3 │ GW_Armando_plate2_JF30G01  GW_Armando_plate2_JF30G01  ST_vi     vir_mis\n   4 │ GW_Lane5_STvi1             GW_Lane5_STvi1             ST_vi     vir\n   5 │ GW_Lane5_STvi2             GW_Lane5_STvi2             ST_vi     vir     ⋯\n   6 │ GW_Lane5_STvi3             GW_Lane5_STvi3             ST_vi     vir\n   7 │ GW_Armando_plate1_JF16G01  GW_Armando_plate1_JF16G01  DV_vi     plumb_v\n   8 │ GW_Armando_plate2_JF16G02  GW_Armando_plate2_JF16G02  DV_vi     plumb_v\n   9 │ GW_Armando_plate2_JE31G01  GW_Armando_plate2_JE31G01  VB_vi     vir_mis ⋯\n  10 │ GW_Armando_plate2_JF03G02  GW_Armando_plate2_JF03G02  VB_vi     vir_mis\n  11 │ GW_Lane5_YK11              GW_Lane5_YK11              YK        vir\n  ⋮  │             ⋮                          ⋮                 ⋮          ⋮   ⋱\n  91 │ GW_Armando_plate2_JF24G01  GW_Armando_plate2_JF24G01  VB        plumb\n  92 │ GW_Armando_plate2_JF25G01  GW_Armando_plate2_JF25G01  VB        plumb   ⋯\n  93 │ GW_Armando_plate1_JG02G02  GW_Armando_plate1_JG02G02  PR        plumb\n  94 │ GW_Armando_plate1_JG02G04  GW_Armando_plate1_JG02G04  PR        plumb\n  95 │ GW_Armando_plate2_JG01G01  GW_Armando_plate2_JG01G01  PR        plumb\n  96 │ GW_Armando_plate2_JG02G01  GW_Armando_plate2_JG02G01  PR        plumb   ⋯\n  97 │ GW_Armando_plate2_JG02G03  GW_Armando_plate2_JG02G03  PR        plumb\n  98 │ GW_Lane5_SL1               GW_Lane5_SL1               SL        plumb\n  99 │ GW_Lane5_SL2               GW_Lane5_SL2               SL        plumb\n 100 │ GW_Armando_plate1_JF10G03  GW_Armando_plate1_JF10G03  ST        plumb_v ⋯\n                                                  21 columns and 79 rows omitted)",
    "crumbs": [
      "Home",
      "Greenish Warbler heterozygosity variance analysis"
    ]
  },
  {
    "objectID": "GW_Heterozygosity_Variance.html#show-just-the-west-clusters-without-nitidus",
    "href": "GW_Heterozygosity_Variance.html#show-just-the-west-clusters-without-nitidus",
    "title": "Greenish Warbler heterozygosity variance analysis",
    "section": "Show just the west clusters (without nitidus)",
    "text": "Show just the west clusters (without nitidus)\n\nclusterNamesWithHetsWest = [\"virLud\",\n                        \"virLud_troch\",\n                        \"troch\"]\n\nclusterColorsWithHetsWest = [\"blue\",\n                        \"yellowgreen\",\n                        \"yellow\"]\n\n# limit the SNPs to those with variants greater than 50% in \n# at least one pop, and less than 50% in at least one pop.\n# (So for each column in `freqs`, the maximum should be &gt; 0.5 \n# and the minimum should be &lt; 0.5)\n# Calculate allele freqs and sample sizes\nfreqs, sampleSizes = getFreqsAndSampleSizes(genos_selectedSNPs, clusterMembershipWithHets, clusterNamesWithHetsWest)\nprintln(\"Calculated population allele frequencies and sample sizes\")\nselectedSNPs = (vec(maximum(freqs, dims=1)) .&gt; 0.5) .& (vec(minimum(freqs, dims=1)) .&lt; 0.5)\ngenos_selectedSNPs2 = genos_selectedSNPs[:, selectedSNPs]\npos_selectedSNPs2 = pos_selectedSNPs[selectedSNPs, :]\nfreqs_selectedSNPs2 = freqs[:, selectedSNPs]\n\nnumIndsToPlotWithHets = [100, 100, 100]\n\ngenosForGBI, indMetadataforGBI = limitIndsToPlot(clusterNamesWithHetsWest, numIndsToPlotWithHets, \n                                            genos_selectedSNPs2, PCAmodelAll.metadata;\n                                            sortByMissing = true)\n\nplotGenotypeByIndividual(regionInfo, pos_selectedSNPs2,\n                genosForGBI, indMetadataforGBI, freqs_selectedSNPs2, clusterNamesWithHetsWest, clusterColorsWithHetsWest;\n                missingFractionAllowed = missingFractionAllowed,\n                indColorLeftProvided = false,\n                indColorRightProvided = true)\n\nCalculated population allele frequencies and sample sizes\n\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\n\n(Scene (768px, 960px):\n  0 Plots\n  2 Child Scenes:\n    ├ Scene (768px, 960px)\n    └ Scene (768px, 960px), Union{Missing, Int16}[0 0 … 0 0; 0 0 … 0 0; … ; 101 2 … 2 2; 0 101 … 0 0], [4175655, 4195006, 4201372, 4201950, 4201984, 4202662, 4220609, 4272842, 4280387, 4397235  …  5462347, 5485541, 5485558, 5493066, 5494683, 5519564, 5524191, 5524276, 5530753, 5549587], 178×24 DataFrame\n Row │ ind                        ID                         location  group   ⋯\n     │ String                     String                     String7   String1 ⋯\n─────┼──────────────────────────────────────────────────────────────────────────\n   1 │ GW_Armando_plate1_JF12G04  GW_Armando_plate1_JF12G04  ST_vi     vir     ⋯\n   2 │ GW_Lane5_STvi3             GW_Lane5_STvi3             ST_vi     vir\n   3 │ GW_Armando_plate2_JF03G01  GW_Armando_plate2_JF03G01  ST_vi     vir_mis\n   4 │ GW_Lane5_STvi1             GW_Lane5_STvi1             ST_vi     vir\n   5 │ GW_Armando_plate2_JF30G01  GW_Armando_plate2_JF30G01  ST_vi     vir_mis ⋯\n   6 │ GW_Lane5_STvi2             GW_Lane5_STvi2             ST_vi     vir\n   7 │ GW_Armando_plate2_JF16G02  GW_Armando_plate2_JF16G02  DV_vi     plumb_v\n   8 │ GW_Armando_plate1_JF16G01  GW_Armando_plate1_JF16G01  DV_vi     plumb_v\n   9 │ GW_Armando_plate2_JF03G02  GW_Armando_plate2_JF03G02  VB_vi     vir_mis ⋯\n  10 │ GW_Armando_plate2_JE31G01  GW_Armando_plate2_JE31G01  VB_vi     vir_mis\n  11 │ GW_Lane5_YK11              GW_Lane5_YK11              YK        vir\n  ⋮  │             ⋮                          ⋮                 ⋮          ⋮   ⋱\n 169 │ GW_Lane5_LN3               GW_Lane5_LN3               LN        troch_L\n 170 │ GW_Lane5_LN1               GW_Lane5_LN1               LN        troch_L ⋯\n 171 │ GW_Lane5_LN19              GW_Lane5_LN19              LN        troch_L\n 172 │ GW_Lane5_LN4               GW_Lane5_LN4               LN        troch_L\n 173 │ GW_Lane5_LN6               GW_Lane5_LN6               LN        troch_L\n 174 │ GW_Lane5_LN7               GW_Lane5_LN7               LN        troch_L ⋯\n 175 │ GW_Lane5_LN18              GW_Lane5_LN18              LN        troch_L\n 176 │ GW_Lane5_LN8               GW_Lane5_LN8               LN        troch_L\n 177 │ GW_Lane5_LN12              GW_Lane5_LN12              LN        troch_L\n 178 │ GW_Armando_plate1_JF11G01  GW_Armando_plate1_JF11G01  ST        plumb   ⋯\n                                                 21 columns and 157 rows omitted)",
    "crumbs": [
      "Home",
      "Greenish Warbler heterozygosity variance analysis"
    ]
  },
  {
    "objectID": "GW_Heterozygosity_Variance.html#show-just-the-east-area-3",
    "href": "GW_Heterozygosity_Variance.html#show-just-the-east-area-3",
    "title": "Greenish Warbler heterozygosity variance analysis",
    "section": "Show just the east area",
    "text": "Show just the east area\n\nclusterNamesWithHetsWest = [\"troch\",\n                            \"obs\",\n                            \"obs_plumb\",\n                            \"plumb\",]\n\nclusterColorsWithHetsWest = [\"yellow\",\n                            \"orange\",\n                            \"darkorange1\",\n                            \"red\"]\n\n# limit the SNPs to those with variants greater than 50% in \n# at least one pop, and less than 50% in at least one pop.\n# (So for each column in `freqs`, the maximum should be &gt; 0.5 \n# and the minimum should be &lt; 0.5)\n# Calculate allele freqs and sample sizes\nfreqs, sampleSizes = getFreqsAndSampleSizes(genos_selectedSNPs, clusterMembershipWithHets, clusterNamesWithHetsWest)\nprintln(\"Calculated population allele frequencies and sample sizes\")\nselectedSNPs = (vec(maximum(freqs, dims=1)) .&gt; 0.5) .& (vec(minimum(freqs, dims=1)) .&lt; 0.5)\ngenos_selectedSNPs2 = genos_selectedSNPs[:, selectedSNPs]\npos_selectedSNPs2 = pos_selectedSNPs[selectedSNPs, :]\nfreqs_selectedSNPs2 = freqs[:, selectedSNPs]\n\nnumIndsToPlotWithHets = [100, 100, 100, 100]\n\ngenosForGBI, indMetadataforGBI = limitIndsToPlot(clusterNamesWithHetsWest, numIndsToPlotWithHets, \n                                            genos_selectedSNPs2, PCAmodelAll.metadata;\n                                            sortByMissing = true)\n\nplotGenotypeByIndividual(regionInfo, pos_selectedSNPs2,\n                genosForGBI, indMetadataforGBI, freqs_selectedSNPs2, clusterNamesWithHetsWest, clusterColorsWithHetsWest;\n                missingFractionAllowed = missingFractionAllowed,\n                indColorLeftProvided = false,\n                indColorRightProvided = true)\n\nCalculated population allele frequencies and sample sizes\n\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\n\n(Scene (768px, 960px):\n  0 Plots\n  2 Child Scenes:\n    ├ Scene (768px, 960px)\n    └ Scene (768px, 960px), Union{Missing, Int16}[0 0 … 0 0; 0 0 … 0 2; … ; 2 2 … 2 2; -99 2 … 2 2], [4195006, 4201950, 4201984, 4269946, 4272732, 4272842, 4336840, 4397231, 4398942, 4411760  …  5471609, 5478884, 5499176, 5509392, 5519560, 5519744, 5530774, 5535422, 5540526, 5549602], 134×24 DataFrame\n Row │ ind                           ID                            location  g ⋯\n     │ String                        String                        String7   S ⋯\n─────┼──────────────────────────────────────────────────────────────────────────\n   1 │ GW_Armando_plate1_TTGW72      GW_Armando_plate1_TTGW72      SA        l ⋯\n   2 │ GW_Armando_plate1_TTGW78      GW_Armando_plate1_TTGW78      SA        l\n   3 │ GW_Armando_plate2_TTGW73      GW_Armando_plate2_TTGW73      SA        l\n   4 │ GW_Armando_plate2_TTGW77      GW_Armando_plate2_TTGW77      SA        l\n   5 │ GW_Armando_plate2_TTGW79      GW_Armando_plate2_TTGW79      SA        l ⋯\n   6 │ GW_Armando_plate2_TTGW80      GW_Armando_plate2_TTGW80      SA        l\n   7 │ GW_Armando_plate2_TTGW75      GW_Armando_plate2_TTGW75      SA        l\n   8 │ GW_Armando_plate2_TTGW28      GW_Armando_plate2_TTGW28      SR        l\n   9 │ GW_Armando_plate1_TTGW-15-08  GW_Armando_plate1_TTGW-15-08  SR        l ⋯\n  10 │ GW_Armando_plate2_TTGW-15-04  GW_Armando_plate2_TTGW-15-04  SR        l\n  11 │ GW_Armando_plate1_TTGW13      GW_Armando_plate1_TTGW13      TH        l\n  ⋮  │              ⋮                             ⋮                   ⋮        ⋱\n 125 │ GW_Armando_plate1_JF23G02     GW_Armando_plate1_JF23G02     VB        p\n 126 │ GW_Armando_plate1_JF24G02     GW_Armando_plate1_JF24G02     VB        p ⋯\n 127 │ GW_Armando_plate2_JF24G01     GW_Armando_plate2_JF24G01     VB        p\n 128 │ GW_Armando_plate2_JF25G01     GW_Armando_plate2_JF25G01     VB        p\n 129 │ GW_Armando_plate1_JG02G04     GW_Armando_plate1_JG02G04     PR        p\n 130 │ GW_Armando_plate2_JG02G01     GW_Armando_plate2_JG02G01     PR        p ⋯\n 131 │ GW_Armando_plate2_JG02G03     GW_Armando_plate2_JG02G03     PR        p\n 132 │ GW_Armando_plate1_JG02G02     GW_Armando_plate1_JG02G02     PR        p\n 133 │ GW_Lane5_SL2                  GW_Lane5_SL2                  SL        p\n 134 │ GW_Lane5_SL1                  GW_Lane5_SL1                  SL        p ⋯\n                                                 21 columns and 113 rows omitted)",
    "crumbs": [
      "Home",
      "Greenish Warbler heterozygosity variance analysis"
    ]
  },
  {
    "objectID": "GW_Heterozygosity_Variance.html#show-just-the-northern-area-3",
    "href": "GW_Heterozygosity_Variance.html#show-just-the-northern-area-3",
    "title": "Greenish Warbler heterozygosity variance analysis",
    "section": "Show just the northern area",
    "text": "Show just the northern area\n\nclusterNamesWithHetsWest = [\"virLud\",\n                            \"vir_plumb\",\n                            \"plumb\"]\n\nclusterColorsWithHetsWest = [\"blue\",\n                            \"purple\",\n                            \"red\"]\n\n# limit the SNPs to those with variants greater than 50% in \n# at least one pop, and less than 50% in at least one pop.\n# (So for each column in `freqs`, the maximum should be &gt; 0.5 \n# and the minimum should be &lt; 0.5)\n# Calculate allele freqs and sample sizes\nfreqs, sampleSizes = getFreqsAndSampleSizes(genos_selectedSNPs, clusterMembershipWithHets, clusterNamesWithHetsWest)\nprintln(\"Calculated population allele frequencies and sample sizes\")\nselectedSNPs = (vec(maximum(freqs, dims=1)) .&gt; 0.5) .& (vec(minimum(freqs, dims=1)) .&lt; 0.5)\ngenos_selectedSNPs2 = genos_selectedSNPs[:, selectedSNPs]\npos_selectedSNPs2 = pos_selectedSNPs[selectedSNPs, :]\nfreqs_selectedSNPs2 = freqs[:, selectedSNPs]\n\nnumIndsToPlotWithHets = [100, 100, 100]\n\ngenosForGBI, indMetadataforGBI = limitIndsToPlot(clusterNamesWithHetsWest, numIndsToPlotWithHets, \n                                            genos_selectedSNPs2, PCAmodelAll.metadata;\n                                            sortByMissing = true)\n\nplotGenotypeByIndividual(regionInfo, pos_selectedSNPs2,\n                genosForGBI, indMetadataforGBI, freqs_selectedSNPs2, clusterNamesWithHetsWest, clusterColorsWithHetsWest;\n                missingFractionAllowed = missingFractionAllowed,\n                indColorLeftProvided = false,\n                indColorRightProvided = true)\n\nCalculated population allele frequencies and sample sizes\n\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\n\n(Scene (768px, 960px):\n  0 Plots\n  2 Child Scenes:\n    ├ Scene (768px, 960px)\n    └ Scene (768px, 960px), Union{Missing, Int16}[0 0 … 0 0; 0 0 … 0 0; … ; 2 2 … 2 2; 2 1 … 0 0], [4175655, 4201372, 4202662, 4220609, 4269946, 4272732, 4280387, 4397231, 4397235, 4411591  …  5519560, 5519564, 5524191, 5524276, 5530753, 5530774, 5535422, 5540526, 5549587, 5549602], 143×24 DataFrame\n Row │ ind                        ID                         location  group   ⋯\n     │ String                     String                     String7   String1 ⋯\n─────┼──────────────────────────────────────────────────────────────────────────\n   1 │ GW_Armando_plate1_JF12G04  GW_Armando_plate1_JF12G04  ST_vi     vir     ⋯\n   2 │ GW_Lane5_STvi1             GW_Lane5_STvi1             ST_vi     vir\n   3 │ GW_Lane5_STvi3             GW_Lane5_STvi3             ST_vi     vir\n   4 │ GW_Armando_plate2_JF03G01  GW_Armando_plate2_JF03G01  ST_vi     vir_mis\n   5 │ GW_Armando_plate2_JF30G01  GW_Armando_plate2_JF30G01  ST_vi     vir_mis ⋯\n   6 │ GW_Lane5_STvi2             GW_Lane5_STvi2             ST_vi     vir\n   7 │ GW_Armando_plate2_JF16G02  GW_Armando_plate2_JF16G02  DV_vi     plumb_v\n   8 │ GW_Armando_plate1_JF16G01  GW_Armando_plate1_JF16G01  DV_vi     plumb_v\n   9 │ GW_Armando_plate2_JF03G02  GW_Armando_plate2_JF03G02  VB_vi     vir_mis ⋯\n  10 │ GW_Armando_plate2_JE31G01  GW_Armando_plate2_JE31G01  VB_vi     vir_mis\n  11 │ GW_Lane5_YK3               GW_Lane5_YK3               YK        vir\n  ⋮  │             ⋮                          ⋮                 ⋮          ⋮   ⋱\n 134 │ GW_Armando_plate2_JF24G01  GW_Armando_plate2_JF24G01  VB        plumb\n 135 │ GW_Armando_plate2_JF25G01  GW_Armando_plate2_JF25G01  VB        plumb   ⋯\n 136 │ GW_Armando_plate2_JG01G01  GW_Armando_plate2_JG01G01  PR        plumb\n 137 │ GW_Armando_plate1_JG02G04  GW_Armando_plate1_JG02G04  PR        plumb\n 138 │ GW_Armando_plate2_JG02G01  GW_Armando_plate2_JG02G01  PR        plumb\n 139 │ GW_Armando_plate2_JG02G03  GW_Armando_plate2_JG02G03  PR        plumb   ⋯\n 140 │ GW_Armando_plate1_JG02G02  GW_Armando_plate1_JG02G02  PR        plumb\n 141 │ GW_Lane5_SL2               GW_Lane5_SL2               SL        plumb\n 142 │ GW_Lane5_SL1               GW_Lane5_SL1               SL        plumb\n 143 │ GW_Armando_plate1_JF10G03  GW_Armando_plate1_JF10G03  ST        plumb_v ⋯\n                                                 21 columns and 122 rows omitted)\n\n\n\n\nDo a PCA based on a same-size region elsewhere on gw26 (with low ViSHet):\n\n# get length of region\nlengthHighViSHetRegion = positionMax - positionMin\n\nleftLocus = 1_000_000 # start at 1 Mb from left side\nrightLocus = leftLocus + lengthHighViSHetRegion\nregionText_lowViSHetRegion = string(\"chr \", chr, \" \",leftLocus,\" to \",rightLocus)\n\nlociSelection = (leftLocus .&lt;= pos_region.position .&lt;= rightLocus)\ngenotypes_lowViSHetRegion = genotypes_region[:, lociSelection]\n\n# impute missing genotypes:\n\ngenotypes_lowViSHetRegion_imputed = Impute.svd(Matrix{Union{Missing, Float32}}(genotypes_lowViSHetRegion))\n\nflipPC1 = true\nflipPC2 = true\n\nPCAmodel = plotPCA(genotypes_lowViSHetRegion_imputed, ind_with_metadata_included, \n            groups_to_plot_PCA, group_colors_PCA; \n            sampleSet = \"greenish warblers\", regionText = regionText_lowViSHetRegion,\n            flip1 = flipPC1, flip2 = flipPC2,\n            lineOpacity = 0.7, fillOpacity = 0.6,\n            symbolSize = 14, showTitle = true,\n            xLabelText = string(\"Region PC1\"), yLabelText = string(\"Region PC2\"),\n            showPlot = false)\n\ndisplay(PCAmodel.PCAfig)\nif false  # set to true to save plot\n    save(\"FigureS2C_gw26_nonHLBRarbitrary_from_Julia.png\", PCAmodel.PCAfig, px_per_unit = 2.0)\nend \n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238",
    "crumbs": [
      "Home",
      "Greenish Warbler heterozygosity variance analysis"
    ]
  },
  {
    "objectID": "GW_Heterozygosity_Variance.html#do-similar-as-above-but-for-chr-1a",
    "href": "GW_Heterozygosity_Variance.html#do-similar-as-above-but-for-chr-1a",
    "title": "Greenish Warbler heterozygosity variance analysis",
    "section": "Do similar as above but for chr 1A:",
    "text": "Do similar as above but for chr 1A:\n(Tried chr 1 but seems to be some recomb that makes it less clear to assign to groups)\n\n# choose scaffold\nchr = \"gw1A\"\n\npositionMin, positionMax, regionText, \n    windowedIndHetStanRegion, meanAcrossRegionIndHetStan,\n    genos_highViSHetRegion, pos_highViSHetRegion, regionInfo = \n    getWindowedIndHetStanRegion(genosOnly_included, \n                            pos_SNP_filtered, \n                            highViSHetRegions, chr;\n                            windowSize = 500)\n\n# inspect values for mean IndHetStan per individual for that high ViSHet region\nplot(meanAcrossRegionIndHetStan)\n\n# Add column to metadata containing the regionIndHetStan for this highHet region:\ncommand = \"ind_with_metadata_included.\" * chr * \"_regionIndHetStan = meanAcrossRegionIndHetStan\"\neval(Meta.parse(command)) # this executes the command constructed above\nind_with_metadata_included.regionIndHetStan = meanAcrossRegionIndHetStan\n\n#names(ind_with_metadata_included)\n\n# check whether missing data related to heterozygosity (good news: not really)\nplot(ind_with_metadata_included.numMissings, meanAcrossRegionIndHetStan)\n\n# PCA of all individuals:\n\ngenos_highViSHetRegion_imputed = Impute.svd(Matrix{Union{Missing, Float32}}(genos_highViSHetRegion))\n\nflipPC1 = true\nflipPC2 = true\n\nPCAmodelAll = plotPCA(genos_highViSHetRegion_imputed, ind_with_metadata_included, \n            groups_to_plot_PCA, group_colors_PCA; \n            sampleSet = \"greenish warblers\", regionText = regionText,\n            flip1 = flipPC1, flip2 = flipPC2,\n            lineOpacity = 0.7, fillOpacity = 0.6,\n            symbolSize = 14, showTitle = true,\n            xLabelText = string(\"Region PC1\"), yLabelText = string(\"Region PC2\"),\n            showPlot = false)\n\ndisplay(PCAmodelAll.PCAfig)\n\n# Add PC values to metadata for individuals included in PCA above:\nif flipPC1\n    PCAmodelAll.metadata.PC1 = -1 .* PCAmodelAll.values[1,:]\nelse \n    PCAmodelAll.metadata.PC1 = PCAmodelAll.values[1,:]\nend\nif flipPC2\n    PCAmodelAll.metadata.PC2 = -1 .* PCAmodelAll.values[2,:]\nelse\n    PCAmodelAll.metadata.PC2 = PCAmodelAll.values[2,:]\nend\nPCAmodelAll.metadata.PC3 = PCAmodelAll.values[3,:]\n\n# For the next bit to work with above, make sure that all individuals in the above `plotPCA` command\n# are included in the `groups_to_plot_PCA`\n\n# choose inds with low IndHet in high ViSHet region:\nindSelection_lowIndHetStan = (meanAcrossRegionIndHetStan .&lt; 1.5) \n\n#Plot only the lowIndHetStan individuals:\n\nf = CairoMakie.Figure();\nax = Axis(f[1, 1],\n    title = \"PC1 vs. PC2, only low heterozygosity\",\n    xlabel = \"Region PC1\", xlabelsize = 24,\n    ylabel = \"Region PC2\", ylabelsize = 24,\n    autolimitaspect = 1)\nhidedecorations!(ax, label = false, ticklabels = false, ticks = false) # hide background lattice\nfor i in eachindex(groups_to_plot_PCA) \n    selection = (PCAmodelAll.metadata.Fst_group .== groups_to_plot_PCA[i]) .& indSelection_lowIndHetStan\n    CairoMakie.scatter!(ax, PCAmodelAll.metadata.PC1[selection], PCAmodelAll.metadata.PC2[selection], marker = :diamond, color = (group_colors_PCA[i], 0.6), markersize = 14, strokewidth=0.5, strokecolor = (\"black\", 0.7))\nend\ndisplay(f)\n\nMore than 1 region on that scaffold. Using just the longest one.\n\n\n2×3 DataFrame\n\n\n\nRow\nregionChrom\nregionStart\nregionEnd\n\n\n\nString\nInt64\nInt64\n\n\n\n\n1\ngw1A\n4674\n3771263\n\n\n2\ngw1A\n23592559\n30616953\n\n\n\n\n\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\nCairoMakie.Screen{IMAGE}\n\n\n\nSave the individual colors in the metadata\n\nindColors = fill(\"\", size(PCAmodelAll.metadata, 1))\nfor i in axes(PCAmodelAll.metadata, 1)\n    indColors[i] = group_colors_PCA[findfirst(groups_to_plot_PCA .== PCAmodelAll.metadata.Fst_group[i])]\nend\nPCAmodelAll.metadata.indColorLeft = indColors\nPCAmodelAll.metadata.indColorRight = indColors\n\n257-element Vector{String}:\n \"blue\"\n \"red\"\n \"red\"\n \"red\"\n \"red\"\n \"red\"\n \"red\"\n \"purple\"\n \"red\"\n \"red\"\n \"red\"\n \"blue\"\n \"red\"\n ⋮\n \"olivedrab2\"\n \"olivedrab2\"\n \"olivedrab2\"\n \"olivedrab2\"\n \"olivedrab2\"\n \"olivedrab2\"\n \"olivedrab2\"\n \"olivedrab2\"\n \"olivedrab2\"\n \"olivedrab2\"\n \"olivedrab2\"\n \"olivedrab2\"\n\n\n\n\nPlot PC1 vs. PC2:\n\nf = CairoMakie.Figure()\nax = Axis(f[1, 1],\n    title = \"PC1 vs. PC2\",\n    xlabel = \"Region PC1\", xlabelsize = 24,\n    ylabel = \"Region PC2\", ylabelsize = 24,\n    autolimitaspect = 1)\nhidedecorations!(ax, label = false, ticklabels = false, ticks = false) # hide background lattice\nfor i in eachindex(groups_to_plot_PCA) \n    selection = PCAmodelAll.metadata.Fst_group .== groups_to_plot_PCA[i]\n    CairoMakie.scatter!(ax, PCAmodelAll.metadata.PC1[selection], PCAmodelAll.metadata.PC2[selection], marker = :diamond, color = (group_colors_PCA[i], 0.6), markersize = 14, strokewidth=0.5, strokecolor = (\"black\", 0.7))\nend\ndisplay(f)\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\nCairoMakie.Screen{IMAGE}\n\n\n\n\nPlot PC1 vs. PC3:\n\nf = CairoMakie.Figure()\nax = Axis(f[1, 1],\n    title = \"PC1 vs. PC3\",\n    xlabel = \"Region PC1\", xlabelsize = 24,\n    ylabel = \"Region PC3\", ylabelsize = 24,\n    autolimitaspect = 1)\nhidedecorations!(ax, label = false, ticklabels = false, ticks = false) # hide background lattice\nfor i in eachindex(groups_to_plot_PCA) \n    selection = PCAmodelAll.metadata.Fst_group .== groups_to_plot_PCA[i]\n    CairoMakie.scatter!(ax, PCAmodelAll.metadata.PC1[selection], PCAmodelAll.metadata.PC3[selection], marker = :diamond, color = (group_colors_PCA[i], 0.6), markersize = 14, strokewidth=0.5, strokecolor = (\"black\", 0.7))\nend\ndisplay(f)\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\nCairoMakie.Screen{IMAGE}\n\n\n\n\nAt chr 1A high ViSHet region, there are only 5 clear haplogroups (checked that vir and lud don’t form distinct groups on PC3). Divide samples into those groups, based on PCA scores, and then calculate pi within and pi between\n\nclusterNames = [\"virLud\",\n                \"nit\",\n                \"troch\",\n                \"obs\",\n                \"plumb\"]\n\nclusterColors = [\"green\",\n                \"grey\",\n                \"yellowgreen\",\n                \"orange\",\n                \"red\"]\n\nvirLud = (PCAmodelAll.metadata.PC1 .&lt; -8) .& \n            indSelection_lowIndHetStan\nnit = (-8 .&lt; PCAmodelAll.metadata.PC1 .&lt; -4) .&\n            indSelection_lowIndHetStan\ntroch = (4 .&lt; PCAmodelAll.metadata.PC1 .&lt; 9) .&\n            (PCAmodelAll.metadata.PC2 .&lt; -5) .&\n            indSelection_lowIndHetStan\nobs = (2 .&lt; PCAmodelAll.metadata.PC1 .&lt; 6) .&\n            (-5 .&lt; PCAmodelAll.metadata.PC2 .&lt; -1) .& \n            indSelection_lowIndHetStan\nplumb = (3 .&lt; PCAmodelAll.metadata.PC1) .& \n            (7.5 .&lt; PCAmodelAll.metadata.PC2) .&\n            indSelection_lowIndHetStan\n\n# check the individuals in each group\nPCAmodelAll.metadata.Fst_group[virLud]\nPCAmodelAll.metadata.Fst_group[nit]\nPCAmodelAll.metadata.Fst_group[troch]\nPCAmodelAll.metadata.Fst_group[obs]\nPCAmodelAll.metadata.Fst_group[plumb]\n\nclusterArray = [virLud nit troch obs plumb]\n\n# show numbers in each group\nprintln(\"The numbers in each group are $(sum(clusterArray, dims=1)) and the sum of those is $(sum(sum(clusterArray, dims=1)))\")\n\n# create vectors that indicate the groups and plot order for this analysis:\nclusterMembership = fill(\"none\", nrow(PCAmodelAll.metadata))\nplotOrder = fill(-9, nrow(PCAmodelAll.metadata))\nfor i in eachindex(clusterArray[1,:])\n    clusterMembership[clusterArray[:,i]] .= clusterNames[i]\n    plotOrder[clusterArray[:,i]] .= i\nend\n\n# Calculate allele freqs and sample sizes\nfreqs, sampleSizes = getFreqsAndSampleSizes(genos_highViSHetRegion, clusterMembership, clusterNames)\nprintln(\"Calculated population allele frequencies and sample sizes\")\n\n# Calculate per-site pi (within-group nucleotide distance)\n\nsitePi = getSitePi(freqs, sampleSizes)\n\n# calculate pairwise Dxy per site, using data in \"freqs\" and groups in \"groups\"\n\nDxy, pairwiseDxyClusterNames = getDxy(freqs, clusterNames)\n\nFst, FstNumerator, FstDenominator, pairwiseFstClusterNames = getFst(freqs, sampleSizes, clusterNames; among=false)  # set among to FALSE if no among Fst wanted (some things won't work without it) \n\n# Now get averages of pi and Dxy for whole region:\n\nregionPiTable = DataFrame(cluster = clusterNames, pi = getRegionPi(sitePi))\n#= 5×2 DataFrame\n Row │ cluster  pi         \n     │ String   Float64    \n─────┼─────────────────────\n   1 │ virLud   0.00559696\n   2 │ nit      0.00458482\n   3 │ troch    0.00470781\n   4 │ obs      0.00524545\n   5 │ plumb    0.00659452 =#\n\nregionDxyTable = DataFrame(cluster_pair = pairwiseDxyClusterNames, Dxy = getRegionDxy(Dxy))\n#= 10×2 DataFrame\n Row │ cluster_pair  Dxy       \n     │ String        Float64   \n─────┼─────────────────────────\n   1 │ virLud_nit    0.0234051\n   2 │ virLud_troch  0.0303858\n   3 │ virLud_obs    0.0285612\n   4 │ virLud_plumb  0.0298279\n   5 │ nit_troch     0.036893\n   6 │ nit_obs       0.0346282\n   7 │ nit_plumb     0.0363109\n   8 │ troch_obs     0.0169886\n   9 │ troch_plumb   0.0274903\n  10 │ obs_plumb     0.0256253 =#\n\n# Make a genotype-by-individual plot using all variable loci in the region,\nmissingFractionAllowed = 0.1\n# in metadata, replace `Fst_group` column with cluster info (needed for the function below):\nPCAmodelAll.metadata.original_Fst_groups = PCAmodelAll.metadata.Fst_group # store the Fst_groups in this\nPCAmodelAll.metadata.Fst_group = clusterMembership\nPCAmodelAll.metadata.original_plot_order = PCAmodelAll.metadata.plot_order # store the original plot_order in this\nPCAmodelAll.metadata.plot_order = plotOrder\n\n# limit the SNPs to those with variants greater than 50% in \n# at least one pop, and less than 50% in at least one pop.\n# (So for each column in `freqs`, the maximum should be &gt; 0.5 \n# and the minimum should be &lt; 0.5)\nselectedSNPs = (vec(maximum(freqs, dims=1)) .&gt; 0.5) .& (vec(minimum(freqs, dims=1)) .&lt; 0.5)\ngenos_selectedSNPs = genos_highViSHetRegion[:, selectedSNPs]\npos_selectedSNPs = pos_highViSHetRegion[selectedSNPs, :]\nFst_selectedSNPs = Fst[:, selectedSNPs]\nfreqs_selectedSNPs = freqs[:, selectedSNPs]\n\n# limit the number of individuals per group to plot\nnumIndsToPlot = fill(15, length(clusterNames))\n\ngenosForGBI, indMetadataforGBI = limitIndsToPlot(clusterNames, numIndsToPlot, \n                                            genos_selectedSNPs, PCAmodelAll.metadata;\n                                            sortByMissing = true)\n\nplotGenotypeByIndividual(regionInfo, pos_selectedSNPs,\n                genosForGBI, indMetadataforGBI, freqs_selectedSNPs, clusterNames, clusterColors;\n                missingFractionAllowed = missingFractionAllowed,\n                indColorRightProvided = true)\n\nThe numbers in each group are [75 2 65 5 68] and the sum of those is 215\nCalculated population allele frequencies and sample sizes\n\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\n\n(Scene (768px, 960px):\n  0 Plots\n  2 Child Scenes:\n    ├ Scene (768px, 960px)\n    └ Scene (768px, 960px), Union{Missing, Int16}[0 0 … 0 0; 0 0 … 0 0; … ; 0 2 … 0 0; 0 2 … 0 0], [23611461, 23653527, 23686609, 23686624, 23799577, 23812654, 23824078, 23832306, 23832308, 23868434  …  29356320, 29415681, 29627465, 29627471, 29738988, 29903377, 29993850, 30023875, 30023911, 30306067], 52×26 DataFrame\n Row │ ind                           ID                            location  g ⋯\n     │ String                        String                        String7   S ⋯\n─────┼──────────────────────────────────────────────────────────────────────────\n   1 │ GW_Armando_plate1_JF12G04     GW_Armando_plate1_JF12G04     ST_vi     v ⋯\n   2 │ GW_Armando_plate1_JF16G01     GW_Armando_plate1_JF16G01     DV_vi     p\n   3 │ GW_Armando_plate1_TL3         GW_Armando_plate1_TL3         TL        v\n   4 │ GW_Armando_plate1_TTGW13      GW_Armando_plate1_TTGW13      TH        l\n   5 │ GW_Armando_plate1_TTGW29      GW_Armando_plate1_TTGW29      SR        l ⋯\n   6 │ GW_Armando_plate1_TTGW65      GW_Armando_plate1_TTGW65      SP        l\n   7 │ GW_Armando_plate2_JE31G01     GW_Armando_plate2_JE31G01     VB_vi     v\n   8 │ GW_Armando_plate2_TTGW12      GW_Armando_plate2_TTGW12      TH        l\n   9 │ GW_Armando_plate2_TTGW16      GW_Armando_plate2_TTGW16      TH        l ⋯\n  10 │ GW_Armando_plate2_TTGW18      GW_Armando_plate2_TTGW18      TH        l\n  11 │ GW_Armando_plate2_TTGW24      GW_Armando_plate2_TTGW24      SR        l\n  ⋮  │              ⋮                             ⋮                   ⋮        ⋱\n  43 │ GW_Armando_plate1_JF23G01     GW_Armando_plate1_JF23G01     VB        p\n  44 │ GW_Armando_plate1_JF23G02     GW_Armando_plate1_JF23G02     VB        p ⋯\n  45 │ GW_Armando_plate1_JF24G02     GW_Armando_plate1_JF24G02     VB        p\n  46 │ GW_Armando_plate1_JF26G01     GW_Armando_plate1_JF26G01     ST        p\n  47 │ GW_Armando_plate1_JF27G01     GW_Armando_plate1_JF27G01     ST        p\n  48 │ GW_Armando_plate1_JF29G01     GW_Armando_plate1_JF29G01     ST        p ⋯\n  49 │ GW_Armando_plate1_JF29G02     GW_Armando_plate1_JF29G02     ST        p\n  50 │ GW_Armando_plate1_JF29G03     GW_Armando_plate1_JF29G03     ST        p\n  51 │ GW_Armando_plate1_JG02G02     GW_Armando_plate1_JG02G02     PR        p\n  52 │ GW_Armando_plate1_JG08G01     GW_Armando_plate1_JG08G01     ST        p ⋯\n                                                  23 columns and 31 rows omitted)\n\n\n\n\n\nNow show a GBI plot like above, but with heterozygotes:\n\nclusterNamesWithHets = [\"virLud\",\n                        \"nit\",\n                        \"virLud_troch\",\n                        \"troch\",\n                        \"obs\",\n                        \"plumb\",\n                        \"vir_plumb\"]\n\nclusterColorsWithHets = [\"blue\",\n                        \"grey\",\n                        \"yellowgreen\",\n                        \"yellow\",\n                        \"orange\",\n                        \"red\",\n                        \"purple\"]\n\nvirLud_troch = (-5 .&lt; PCAmodelAll.metadata.PC1 .&lt; 2) .&\n                (-8 .&lt; PCAmodelAll.metadata.PC2 .&lt; -2) .&\n                 .!indSelection_lowIndHetStan\nvir_plumb = (-5 .&lt; PCAmodelAll.metadata.PC1 .&lt; 0) .&\n                (3 .&lt; PCAmodelAll.metadata.PC2 .&lt; 7) .&\n                 .!indSelection_lowIndHetStan\n\nclusterArray = [virLud nit virLud_troch troch obs plumb vir_plumb]\n\nsum(clusterArray, dims=1)\n\nif sum(sum(clusterArray, dims=1)) == size(PCAmodelAll.metadata, 1)\n    println(\"Good news: Individuals included in a group matches total number of individuals\")\nelse \n    println(\"Warning: Individuals included in a group ($(sum(sum(clusterArray, dims=1)))) do NOT match total number of individuals ($(size(PCAmodelAll.metadata, 1)))\")\nend\n\n# create vectors that indicate the groups and plot order for this analysis:\nclusterMembershipWithHets = fill(\"none\", nrow(PCAmodelAll.metadata))\nplotOrderWithHets = fill(-9, nrow(PCAmodelAll.metadata))\nfor i in eachindex(clusterArray[1,:])\n    clusterMembershipWithHets[clusterArray[:,i]] .= clusterNamesWithHets[i]\n    plotOrderWithHets[clusterArray[:,i]] .= i\nend\n\n# Add column to main metadata object containing the cluster membership for this highHet region:\ncommand = \"ind_with_metadata_included.\" * chr * \"_cluster = clusterMembershipWithHets\"\neval(Meta.parse(command)) # this executes the command constructed above\n\n# in metadata, replace `Fst_group` column with cluster info (needed for the function below):\nPCAmodelAll.metadata.Fst_group = clusterMembershipWithHets\nPCAmodelAll.metadata.plot_order = plotOrderWithHets\n\n# limit the number of individuals per group to plot\nnumIndsToPlotWithHets = fill(15, length(clusterNamesWithHets))\n\ngenosForGBI, indMetadataforGBI = limitIndsToPlot(clusterNamesWithHets, numIndsToPlotWithHets, \n                                            genos_selectedSNPs, PCAmodelAll.metadata;\n                                            sortByMissing = true)\n\nplotGenotypeByIndividual(regionInfo, pos_selectedSNPs,\n                genosForGBI, indMetadataforGBI, freqs_selectedSNPs, clusterNamesWithHets, clusterColorsWithHets;\n                missingFractionAllowed = missingFractionAllowed,\n                indColorLeftProvided = false,\n                indColorRightProvided = true)\n\nGood news: Individuals included in a group matches total number of individuals\n\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\n\n(Scene (768px, 960px):\n  0 Plots\n  2 Child Scenes:\n    ├ Scene (768px, 960px)\n    └ Scene (768px, 960px), Union{Missing, Int16}[0 0 … 0 0; 0 0 … 0 0; … ; 0 1 … 0 0; 0 1 … 0 0], [23611461, 23653527, 23686609, 23686624, 23799577, 23812654, 23824078, 23832306, 23832308, 23868434  …  29356320, 29415681, 29627465, 29627471, 29738988, 29903377, 29993850, 30023875, 30023911, 30306067], 72×26 DataFrame\n Row │ ind                           ID                            location  g ⋯\n     │ String                        String                        String7   S ⋯\n─────┼──────────────────────────────────────────────────────────────────────────\n   1 │ GW_Armando_plate1_JF12G04     GW_Armando_plate1_JF12G04     ST_vi     v ⋯\n   2 │ GW_Armando_plate1_JF16G01     GW_Armando_plate1_JF16G01     DV_vi     p\n   3 │ GW_Armando_plate1_TL3         GW_Armando_plate1_TL3         TL        v\n   4 │ GW_Armando_plate1_TTGW13      GW_Armando_plate1_TTGW13      TH        l\n   5 │ GW_Armando_plate1_TTGW29      GW_Armando_plate1_TTGW29      SR        l ⋯\n   6 │ GW_Armando_plate1_TTGW65      GW_Armando_plate1_TTGW65      SP        l\n   7 │ GW_Armando_plate2_JE31G01     GW_Armando_plate2_JE31G01     VB_vi     v\n   8 │ GW_Armando_plate2_TTGW12      GW_Armando_plate2_TTGW12      TH        l\n   9 │ GW_Armando_plate2_TTGW16      GW_Armando_plate2_TTGW16      TH        l ⋯\n  10 │ GW_Armando_plate2_TTGW18      GW_Armando_plate2_TTGW18      TH        l\n  11 │ GW_Armando_plate2_TTGW24      GW_Armando_plate2_TTGW24      SR        l\n  ⋮  │              ⋮                             ⋮                   ⋮        ⋱\n  63 │ GW_Armando_plate1_JF29G01     GW_Armando_plate1_JF29G01     ST        p\n  64 │ GW_Armando_plate1_JF29G02     GW_Armando_plate1_JF29G02     ST        p ⋯\n  65 │ GW_Armando_plate1_JF29G03     GW_Armando_plate1_JF29G03     ST        p\n  66 │ GW_Armando_plate1_JG02G02     GW_Armando_plate1_JG02G02     PR        p\n  67 │ GW_Armando_plate1_JG08G01     GW_Armando_plate1_JG08G01     ST        p\n  68 │ GW_Armando_plate2_JF19G01     GW_Armando_plate2_JF19G01     MB        p ⋯\n  69 │ GW_Armando_plate2_JF25G01     GW_Armando_plate2_JF25G01     VB        p\n  70 │ GW_Lane5_TA1                  GW_Lane5_TA1                  TA        p\n  71 │ GW_Lane5_UY2                  GW_Lane5_UY2                  UY        p\n  72 │ GW_Armando_plate1_JF10G03     GW_Armando_plate1_JF10G03     ST        p ⋯\n                                                  23 columns and 51 rows omitted)\n\n\n\n\n\nShow just the west area (without nitidus)\n\nclusterNamesWithHetsWest = [\"virLud\",\n                        \"virLud_troch\",\n                        \"troch\"]\n\nclusterColorsWithHetsWest = [\"blue\",\n                        \"yellowgreen\",\n                        \"yellow\"]\n\n# limit the SNPs to those with variants greater than 50% in \n# at least one pop, and less than 50% in at least one pop.\n# (So for each column in `freqs`, the maximum should be &gt; 0.5 \n# and the minimum should be &lt; 0.5)\n# Calculate allele freqs and sample sizes\nfreqs, sampleSizes = getFreqsAndSampleSizes(genos_selectedSNPs, clusterMembershipWithHets, clusterNamesWithHetsWest)\nprintln(\"Calculated population allele frequencies and sample sizes\")\nselectedSNPs = (vec(maximum(freqs, dims=1)) .&gt; 0.5) .& (vec(minimum(freqs, dims=1)) .&lt; 0.5)\ngenos_selectedSNPs2 = genos_selectedSNPs[:, selectedSNPs]\npos_selectedSNPs2 = pos_selectedSNPs[selectedSNPs, :]\nfreqs_selectedSNPs2 = freqs[:, selectedSNPs]\n\nnumIndsToPlotWithHets = [100, 100, 100]\n\ngenosForGBI, indMetadataforGBI = limitIndsToPlot(clusterNamesWithHetsWest, numIndsToPlotWithHets, \n                                            genos_selectedSNPs2, PCAmodelAll.metadata;\n                                            sortByMissing = true)\n\nplotGenotypeByIndividual(regionInfo, pos_selectedSNPs2,\n                genosForGBI, indMetadataforGBI, freqs_selectedSNPs2, clusterNamesWithHetsWest, clusterColorsWithHetsWest;\n                missingFractionAllowed = missingFractionAllowed,\n                indColorLeftProvided = false,\n                indColorRightProvided = true)\n\nCalculated population allele frequencies and sample sizes\n\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\n\n(Scene (768px, 960px):\n  0 Plots\n  2 Child Scenes:\n    ├ Scene (768px, 960px)\n    └ Scene (768px, 960px), Union{Missing, Int16}[0 0 … 0 0; 0 0 … 0 0; … ; 2 2 … 2 0; 2 2 … 1 0], [23653527, 23799577, 23812654, 23868434, 23880674, 23939747, 23970643, 24177835, 24200934, 24212017  …  28910551, 29072016, 29087210, 29415681, 29627465, 29738988, 29993850, 30023875, 30023911, 30306067], 177×26 DataFrame\n Row │ ind                           ID                            location  g ⋯\n     │ String                        String                        String7   S ⋯\n─────┼──────────────────────────────────────────────────────────────────────────\n   1 │ GW_Armando_plate1_JF12G04     GW_Armando_plate1_JF12G04     ST_vi     v ⋯\n   2 │ GW_Armando_plate1_JF16G01     GW_Armando_plate1_JF16G01     DV_vi     p\n   3 │ GW_Armando_plate1_TL3         GW_Armando_plate1_TL3         TL        v\n   4 │ GW_Armando_plate1_TTGW13      GW_Armando_plate1_TTGW13      TH        l\n   5 │ GW_Armando_plate1_TTGW19      GW_Armando_plate1_TTGW19      TH        l ⋯\n   6 │ GW_Armando_plate1_TTGW29      GW_Armando_plate1_TTGW29      SR        l\n   7 │ GW_Armando_plate1_TTGW57      GW_Armando_plate1_TTGW57      NG        l\n   8 │ GW_Armando_plate1_TTGW65      GW_Armando_plate1_TTGW65      SP        l\n   9 │ GW_Armando_plate2_JE31G01     GW_Armando_plate2_JE31G01     VB_vi     v ⋯\n  10 │ GW_Armando_plate2_TTGW12      GW_Armando_plate2_TTGW12      TH        l\n  11 │ GW_Armando_plate2_TTGW16      GW_Armando_plate2_TTGW16      TH        l\n  ⋮  │              ⋮                             ⋮                   ⋮        ⋱\n 168 │ GW_Lane5_LN8                  GW_Lane5_LN8                  LN        t\n 169 │ GW_Liz_GBS_Liz5144            GW_Liz_GBS_Liz5144            ML        l ⋯\n 170 │ GW_Liz_GBS_Liz5175            GW_Liz_GBS_Liz5175            ML        l\n 171 │ GW_Armando_plate2_TTGW79      GW_Armando_plate2_TTGW79      SA        l\n 172 │ GW_Lane5_LN10                 GW_Lane5_LN10                 LN        t\n 173 │ GW_Lane5_MN8                  GW_Lane5_MN8                  MN        t ⋯\n 174 │ GW_Lane5_MN1                  GW_Lane5_MN1                  MN        t\n 175 │ GW_Lane5_LN12                 GW_Lane5_LN12                 LN        t\n 176 │ GW_Lane5_MN9                  GW_Lane5_MN9                  MN        t\n 177 │ GW_Lane5_MN3                  GW_Lane5_MN3                  MN        t ⋯\n                                                 23 columns and 156 rows omitted)\n\n\n\n\n\nShow just the east area\n\nclusterNamesWithHetsEast = [\"troch\",\n                            \"obs\",\n                            \"plumb\"]\n\nclusterColorsWithHetsEast = [\"yellow\",\n                            \"orange\",\n                            \"red\"]\n\n# limit the SNPs to those with variants greater than 50% in \n# at least one pop, and less than 50% in at least one pop.\n# (So for each column in `freqs`, the maximum should be &gt; 0.5 \n# and the minimum should be &lt; 0.5)\n# Calculate allele freqs and sample sizes\nfreqs, sampleSizes = getFreqsAndSampleSizes(genos_selectedSNPs, clusterMembershipWithHets, clusterNamesWithHetsEast)\nprintln(\"Calculated population allele frequencies and sample sizes\")\nselectedSNPs = (vec(maximum(freqs, dims=1)) .&gt; 0.5) .& (vec(minimum(freqs, dims=1)) .&lt; 0.5)\ngenos_selectedSNPs2 = genos_selectedSNPs[:, selectedSNPs]\npos_selectedSNPs2 = pos_selectedSNPs[selectedSNPs, :]\nfreqs_selectedSNPs2 = freqs[:, selectedSNPs]\n\nnumIndsToPlotWithHetsEast = fill(100, length(clusterNamesWithHetsEast))\n\ngenosForGBI, indMetadataforGBI = limitIndsToPlot(clusterNamesWithHetsEast, numIndsToPlotWithHetsEast, \n                                            genos_selectedSNPs2, PCAmodelAll.metadata;\n                                            sortByMissing = true)\n\nplotGenotypeByIndividual(regionInfo, pos_selectedSNPs2,\n                genosForGBI, indMetadataforGBI, freqs_selectedSNPs2, clusterNamesWithHetsEast, clusterColorsWithHetsEast;\n                missingFractionAllowed = missingFractionAllowed,\n                indColorLeftProvided = false,\n                indColorRightProvided = true)\n\nCalculated population allele frequencies and sample sizes\n\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\n\n(Scene (768px, 960px):\n  0 Plots\n  2 Child Scenes:\n    ├ Scene (768px, 960px)\n    └ Scene (768px, 960px), Union{Missing, Int16}[0 0 … 0 2; 0 0 … 2 1; … ; 2 0 … 2 2; 2 0 … 2 2], [23824078, 23832308, 23868434, 23970643, 24176699, 24177835, 24185673, 24230071, 24246102, 24307431  …  29072016, 29256987, 29256988, 29356294, 29356307, 29627465, 29738988, 29903377, 30023911, 30306067], 138×26 DataFrame\n Row │ ind                        ID                         location  group   ⋯\n     │ String                     String                     String7   String1 ⋯\n─────┼──────────────────────────────────────────────────────────────────────────\n   1 │ GW_Armando_plate1_TTGW01   GW_Armando_plate1_TTGW01   MN        troch_M ⋯\n   2 │ GW_Armando_plate1_TTGW11   GW_Armando_plate1_TTGW11   SU        lud_Suk\n   3 │ GW_Armando_plate1_TTGW78   GW_Armando_plate1_TTGW78   SA        lud_Sat\n   4 │ GW_Armando_plate2_TTGW75   GW_Armando_plate2_TTGW75   SA        lud_Sat\n   5 │ GW_Armando_plate2_TTGW77   GW_Armando_plate2_TTGW77   SA        lud_Sat ⋯\n   6 │ GW_Lane5_LN19              GW_Lane5_LN19              LN        troch_L\n   7 │ GW_Liz_GBS_Liz5179         GW_Liz_GBS_Liz5179         ML        lud_chi\n   8 │ GW_Liz_GBS_Liz5191         GW_Liz_GBS_Liz5191         ML        lud_chi\n   9 │ GW_Liz_GBS_Liz6204         GW_Liz_GBS_Liz6204         ML        lud_chi ⋯\n  10 │ GW_Armando_plate1_TTGW06   GW_Armando_plate1_TTGW06   SU        lud_Suk\n  11 │ GW_Armando_plate2_LN2      GW_Armando_plate2_LN2      LN        troch_L\n  ⋮  │             ⋮                          ⋮                 ⋮            ⋮ ⋱\n 129 │ GW_Lane5_BK2               GW_Lane5_BK2               BK        plumb\n 130 │ GW_Lane5_UY5               GW_Lane5_UY5               UY        plumb   ⋯\n 131 │ GW_Armando_plate1_JF12G02  GW_Armando_plate1_JF12G02  ST        plumb\n 132 │ GW_Armando_plate1_JF15G03  GW_Armando_plate1_JF15G03  DV        plumb\n 133 │ GW_Lane5_ST1               GW_Lane5_ST1               ST        plumb\n 134 │ GW_Lane5_UY3               GW_Lane5_UY3               UY        plumb   ⋯\n 135 │ GW_Lane5_UY6               GW_Lane5_UY6               UY        plumb\n 136 │ GW_Lane5_UY4               GW_Lane5_UY4               UY        plumb\n 137 │ GW_Lane5_ST3               GW_Lane5_ST3               ST        plumb\n 138 │ GW_Lane5_AN2               GW_Lane5_AN2               AN        plumb   ⋯\n                                                 23 columns and 117 rows omitted)\n\n\n\n\n\nShow just the northern area\n\nclusterNamesWithHetsNorth = [\"virLud\",\n                            \"vir_plumb\",\n                            \"plumb\"]\n\nclusterColorsWithHetsNorth = [\"blue\",\n                            \"purple\",\n                            \"red\"]\n\n# limit the SNPs to those with variants greater than 50% in \n# at least one pop, and less than 50% in at least one pop.\n# (So for each column in `freqs`, the maximum should be &gt; 0.5 \n# and the minimum should be &lt; 0.5)\n# Calculate allele freqs and sample sizes\nfreqs, sampleSizes = getFreqsAndSampleSizes(genos_selectedSNPs, clusterMembershipWithHets, clusterNamesWithHetsNorth)\nprintln(\"Calculated population allele frequencies and sample sizes\")\nselectedSNPs = (vec(maximum(freqs, dims=1)) .&gt; 0.5) .& (vec(minimum(freqs, dims=1)) .&lt; 0.5)\ngenos_selectedSNPs2 = genos_selectedSNPs[:, selectedSNPs]\npos_selectedSNPs2 = pos_selectedSNPs[selectedSNPs, :]\nfreqs_selectedSNPs2 = freqs[:, selectedSNPs]\n\nnumIndsToPlotWithHets = [100, 100, 100]\n\ngenosForGBI, indMetadataforGBI = limitIndsToPlot(clusterNamesWithHetsNorth, numIndsToPlotWithHets, \n                                            genos_selectedSNPs2, PCAmodelAll.metadata;\n                                            sortByMissing = true)\n\nplotGenotypeByIndividual(regionInfo, pos_selectedSNPs2,\n                genosForGBI, indMetadataforGBI, freqs_selectedSNPs2, clusterNamesWithHetsNorth, clusterColorsWithHetsNorth;\n                missingFractionAllowed = missingFractionAllowed,\n                indColorLeftProvided = false,\n                indColorRightProvided = true)\n\nCalculated population allele frequencies and sample sizes\n\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\n\n(Scene (768px, 960px):\n  0 Plots\n  2 Child Scenes:\n    ├ Scene (768px, 960px)\n    └ Scene (768px, 960px), Union{Missing, Int16}[0 0 … 0 0; 0 0 … 0 0; … ; 1 1 … 1 1; 1 1 … 1 101], [23653527, 23799577, 23812654, 23824078, 23880674, 23939747, 24176699, 24200934, 24212017, 24246102  …  28504703, 28878541, 28910551, 29052457, 29087210, 29356307, 29415681, 29903377, 29993850, 30023875], 148×26 DataFrame\n Row │ ind                           ID                            location  g ⋯\n     │ String                        String                        String7   S ⋯\n─────┼──────────────────────────────────────────────────────────────────────────\n   1 │ GW_Armando_plate1_JF12G04     GW_Armando_plate1_JF12G04     ST_vi     v ⋯\n   2 │ GW_Armando_plate1_JF16G01     GW_Armando_plate1_JF16G01     DV_vi     p\n   3 │ GW_Armando_plate1_TL3         GW_Armando_plate1_TL3         TL        v\n   4 │ GW_Armando_plate1_TTGW13      GW_Armando_plate1_TTGW13      TH        l\n   5 │ GW_Armando_plate1_TTGW19      GW_Armando_plate1_TTGW19      TH        l ⋯\n   6 │ GW_Armando_plate1_TTGW29      GW_Armando_plate1_TTGW29      SR        l\n   7 │ GW_Armando_plate1_TTGW57      GW_Armando_plate1_TTGW57      NG        l\n   8 │ GW_Armando_plate1_TTGW65      GW_Armando_plate1_TTGW65      SP        l\n   9 │ GW_Armando_plate2_JE31G01     GW_Armando_plate2_JE31G01     VB_vi     v ⋯\n  10 │ GW_Armando_plate2_TTGW12      GW_Armando_plate2_TTGW12      TH        l\n  11 │ GW_Armando_plate2_TTGW16      GW_Armando_plate2_TTGW16      TH        l\n  ⋮  │              ⋮                             ⋮                   ⋮        ⋱\n 139 │ GW_Lane5_UY5                  GW_Lane5_UY5                  UY        p\n 140 │ GW_Lane5_AN2                  GW_Lane5_AN2                  AN        p ⋯\n 141 │ GW_Lane5_ST12                 GW_Lane5_ST12                 ST        p\n 142 │ GW_Lane5_UY4                  GW_Lane5_UY4                  UY        p\n 143 │ GW_Lane5_ST3                  GW_Lane5_ST3                  ST        p\n 144 │ GW_Armando_plate2_JF19G01     GW_Armando_plate2_JF19G01     MB        p ⋯\n 145 │ GW_Armando_plate2_JF25G01     GW_Armando_plate2_JF25G01     VB        p\n 146 │ GW_Lane5_TA1                  GW_Lane5_TA1                  TA        p\n 147 │ GW_Lane5_UY2                  GW_Lane5_UY2                  UY        p\n 148 │ GW_Armando_plate1_JF10G03     GW_Armando_plate1_JF10G03     ST        p ⋯\n                                                 23 columns and 127 rows omitted)",
    "crumbs": [
      "Home",
      "Greenish Warbler heterozygosity variance analysis"
    ]
  },
  {
    "objectID": "GW_Heterozygosity_Variance.html#do-similar-as-above-but-for-chr-2",
    "href": "GW_Heterozygosity_Variance.html#do-similar-as-above-but-for-chr-2",
    "title": "Greenish Warbler heterozygosity variance analysis",
    "section": "Do similar as above but for chr 2:",
    "text": "Do similar as above but for chr 2:\nThis one doesn’t look like a super clear pattern (in terms of assigning homozygous and heterozygous haploblock genotypes), but will see what it shows:\n\n# choose scaffold\nchr = \"gw2\"\n\npositionMin, positionMax, regionText, \n    windowedIndHetStanRegion, meanAcrossRegionIndHetStan,\n    genos_highViSHetRegion, pos_highViSHetRegion, regionInfo = \n    getWindowedIndHetStanRegion(genosOnly_included, \n                            pos_SNP_filtered, \n                            highViSHetRegions, chr;\n                            windowSize = 500)\n\n# inspect values for mean IndHetStan per individual for that high ViSHet region\nplot(meanAcrossRegionIndHetStan)\n\n# Add column to metadata containing the regionIndHetStan for this highHet region:\ncommand = \"ind_with_metadata_included.\" * chr * \"_regionIndHetStan = meanAcrossRegionIndHetStan\"\neval(Meta.parse(command)) # this executes the command constructed above\nind_with_metadata_included.regionIndHetStan = meanAcrossRegionIndHetStan\n\n#names(ind_with_metadata_included)\n\n# check whether missing data related to heterozygosity (good news: not really)\nplot(ind_with_metadata_included.numMissings, meanAcrossRegionIndHetStan)\n\n# PCA of all individuals:\n\ngenos_highViSHetRegion_imputed = Impute.svd(Matrix{Union{Missing, Float32}}(genos_highViSHetRegion))\n\nflipPC1 = false\nflipPC2 = true\n\nPCAmodelAll = plotPCA(genos_highViSHetRegion_imputed, ind_with_metadata_included, \n            groups_to_plot_PCA, group_colors_PCA; \n            sampleSet = \"greenish warblers\", regionText = regionText,\n            flip1 = flipPC1, flip2 = flipPC2,\n            lineOpacity = 0.7, fillOpacity = 0.6,\n            symbolSize = 14, showTitle = true,\n            xLabelText = string(\"Region PC1\"), yLabelText = string(\"Region PC2\"),\n            showPlot = false)\n\ndisplay(PCAmodelAll.PCAfig)\n\n# Add PC values to metadata for individuals included in PCA above:\nif flipPC1\n    PCAmodelAll.metadata.PC1 = -1 .* PCAmodelAll.values[1,:]\nelse \n    PCAmodelAll.metadata.PC1 = PCAmodelAll.values[1,:]\nend\nif flipPC2\n    PCAmodelAll.metadata.PC2 = -1 .* PCAmodelAll.values[2,:]\nelse\n    PCAmodelAll.metadata.PC2 = PCAmodelAll.values[2,:]\nend\nPCAmodelAll.metadata.PC3 = PCAmodelAll.values[3,:]\n\n# For the next bit to work with above, make sure that all individuals in the above `plotPCA` command\n# are included in the `groups_to_plot_PCA`\n\n# choose inds with low IndHet in high ViSHet region:\nindSelection_lowIndHetStan = (meanAcrossRegionIndHetStan .&lt; 1.25) \n\n#Plot only the lowIndHetStan individuals:\n\nf = CairoMakie.Figure();\nax = Axis(f[1, 1],\n    title = \"PC1 vs. PC2, only low heterozygosity\",\n    xlabel = \"Region PC1\", xlabelsize = 24,\n    ylabel = \"Region PC2\", ylabelsize = 24,\n    autolimitaspect = 1)\nhidedecorations!(ax, label = false, ticklabels = false, ticks = false) # hide background lattice\nfor i in eachindex(groups_to_plot_PCA) \n    selection = (PCAmodelAll.metadata.Fst_group .== groups_to_plot_PCA[i]) .& indSelection_lowIndHetStan\n    CairoMakie.scatter!(ax, PCAmodelAll.metadata.PC1[selection], PCAmodelAll.metadata.PC2[selection], marker = :diamond, color = (group_colors_PCA[i], 0.6), markersize = 14, strokewidth=0.5, strokecolor = (\"black\", 0.7))\nend\ndisplay(f)\n\nMore than 1 region on that scaffold. Using just the longest one.\n\n\n2×3 DataFrame\n\n\n\nRow\nregionChrom\nregionStart\nregionEnd\n\n\n\nString\nInt64\nInt64\n\n\n\n\n1\ngw2\n54537375\n59262130\n\n\n2\ngw2\n60234161\n61533451\n\n\n\n\n\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\nCairoMakie.Screen{IMAGE}\n\n\n\nSave the individual colors in the metadata\n\nindColors = fill(\"\", size(PCAmodelAll.metadata, 1))\nfor i in axes(PCAmodelAll.metadata, 1)\n    indColors[i] = group_colors_PCA[findfirst(groups_to_plot_PCA .== PCAmodelAll.metadata.Fst_group[i])]\nend\nPCAmodelAll.metadata.indColorLeft = indColors\nPCAmodelAll.metadata.indColorRight = indColors\n\n257-element Vector{String}:\n \"blue\"\n \"red\"\n \"red\"\n \"red\"\n \"red\"\n \"red\"\n \"red\"\n \"purple\"\n \"red\"\n \"red\"\n \"red\"\n \"blue\"\n \"red\"\n ⋮\n \"olivedrab2\"\n \"olivedrab2\"\n \"olivedrab2\"\n \"olivedrab2\"\n \"olivedrab2\"\n \"olivedrab2\"\n \"olivedrab2\"\n \"olivedrab2\"\n \"olivedrab2\"\n \"olivedrab2\"\n \"olivedrab2\"\n \"olivedrab2\"\n\n\n\n\nPlot PC1 vs. PC2:\n\nf = CairoMakie.Figure()\nax = Axis(f[1, 1],\n    title = \"PC1 vs. PC2\",\n    xlabel = \"Region PC1\", xlabelsize = 24,\n    ylabel = \"Region PC2\", ylabelsize = 24,\n    autolimitaspect = 1)\nhidedecorations!(ax, label = false, ticklabels = false, ticks = false) # hide background lattice\nfor i in eachindex(groups_to_plot_PCA) \n    selection = PCAmodelAll.metadata.Fst_group .== groups_to_plot_PCA[i]\n    CairoMakie.scatter!(ax, PCAmodelAll.metadata.PC1[selection], PCAmodelAll.metadata.PC2[selection], marker = :diamond, color = (group_colors_PCA[i], 0.6), markersize = 14, strokewidth=0.5, strokecolor = (\"black\", 0.7))\nend\ndisplay(f)\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\nCairoMakie.Screen{IMAGE}\n\n\n\n\nPlot PC1 vs. PC3:\n\nf = CairoMakie.Figure()\nax = Axis(f[1, 1],\n    title = \"PC1 vs. PC3\",\n    xlabel = \"Region PC1\", xlabelsize = 24,\n    ylabel = \"Region PC3\", ylabelsize = 24,\n    autolimitaspect = 1)\nhidedecorations!(ax, label = false, ticklabels = false, ticks = false) # hide background lattice\nfor i in eachindex(groups_to_plot_PCA) \n    selection = PCAmodelAll.metadata.Fst_group .== groups_to_plot_PCA[i]\n    CairoMakie.scatter!(ax, PCAmodelAll.metadata.PC1[selection], PCAmodelAll.metadata.PC3[selection], marker = :diamond, color = (group_colors_PCA[i], 0.6), markersize = 14, strokewidth=0.5, strokecolor = (\"black\", 0.7))\nend\ndisplay(f)\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\nCairoMakie.Screen{IMAGE}\n\n\n\n\nAt chr 2 high ViSHet region, there are 5 clear haplogroups. Divide samples into those groups, based on PCA scores, and then calculate pi within and pi between\n\nclusterNames = [\"virLud\",\n                \"nit\",\n                \"troch\",\n                \"obs\",\n                \"plumb\"]\n\nclusterColors = [\"green\",\n                \"grey\",\n                \"yellowgreen\",\n                \"orange\",\n                \"red\"]\n\nvirLud = (PCAmodelAll.metadata.PC1 .&lt; -4) .& \n            indSelection_lowIndHetStan\nnit = (-3 .&lt; PCAmodelAll.metadata.PC1 .&lt; -1) .&\n        (0 .&lt; PCAmodelAll.metadata.PC2 .&lt; 2) .&\n            indSelection_lowIndHetStan\ntroch = (-2.5 .&lt; PCAmodelAll.metadata.PC1 .&lt; 0) .&\n            (PCAmodelAll.metadata.PC2 .&lt; -5) .&\n            indSelection_lowIndHetStan\nobs = (-2 .&lt; PCAmodelAll.metadata.PC1 .&lt; 1) .&\n            (-5 .&lt; PCAmodelAll.metadata.PC2 .&lt; -3) .& \n            indSelection_lowIndHetStan\nplumb = (6 .&lt; PCAmodelAll.metadata.PC1) .& \n            (1 .&lt; PCAmodelAll.metadata.PC2) .&\n            indSelection_lowIndHetStan\n\n# check the individuals in each group\nPCAmodelAll.metadata.Fst_group[virLud]\nPCAmodelAll.metadata.Fst_group[nit]\nPCAmodelAll.metadata.Fst_group[troch]\nPCAmodelAll.metadata.Fst_group[obs]\nPCAmodelAll.metadata.Fst_group[plumb]\n\nclusterArray = [virLud nit troch obs plumb]\n\n# show numbers in each group\nprintln(\"The numbers in each group are $(sum(clusterArray, dims=1)) and the sum of those is $(sum(sum(clusterArray, dims=1)))\")\n\n# create vectors that indicate the groups and plot order for this analysis:\nclusterMembership = fill(\"none\", nrow(PCAmodelAll.metadata))\nplotOrder = fill(-9, nrow(PCAmodelAll.metadata))\nfor i in eachindex(clusterArray[1,:])\n    clusterMembership[clusterArray[:,i]] .= clusterNames[i]\n    plotOrder[clusterArray[:,i]] .= i\nend\n\n# Calculate allele freqs and sample sizes\nfreqs, sampleSizes = getFreqsAndSampleSizes(genos_highViSHetRegion, clusterMembership, clusterNames)\nprintln(\"Calculated population allele frequencies and sample sizes\")\n\n# Calculate per-site pi (within-group nucleotide distance)\n\nsitePi = getSitePi(freqs, sampleSizes)\n\n# calculate pairwise Dxy per site, using data in \"freqs\" and groups in \"groups\"\n\nDxy, pairwiseDxyClusterNames = getDxy(freqs, clusterNames)\n\nFst, FstNumerator, FstDenominator, pairwiseFstClusterNames = getFst(freqs, sampleSizes, clusterNames; among=false)  # set among to FALSE if no among Fst wanted (some things won't work without it) \n\n# Now get averages of pi and Dxy for whole region:\n\nregionPiTable = DataFrame(cluster = clusterNames, pi = getRegionPi(sitePi))\n#= 5×2 DataFrame\n Row │ cluster  pi         \n     │ String   Float64    \n─────┼─────────────────────\n   1 │ virLud   0.0123364\n   2 │ nit      0.00557103\n   3 │ troch    0.00911341\n   4 │ obs      0.00891506\n   5 │ plumb    0.0086287 =#\n\nregionDxyTable = DataFrame(cluster_pair = pairwiseDxyClusterNames, Dxy = getRegionDxy(Dxy))\n#= 10×2 DataFrame\n Row │ cluster_pair  Dxy       \n     │ String        Float64   \n─────┼─────────────────────────\n   1 │ virLud_nit    0.0328534\n   2 │ virLud_troch  0.0337586\n   3 │ virLud_obs    0.0328064\n   4 │ virLud_plumb  0.0416095\n   5 │ nit_troch     0.0376123\n   6 │ nit_obs       0.0363568\n   7 │ nit_plumb     0.0456889\n   8 │ troch_obs     0.0144702\n   9 │ troch_plumb   0.0331178\n  10 │ obs_plumb     0.0318128 =#\n\n# Make a genotype-by-individual plot using all variable loci in the region,\nmissingFractionAllowed = 0.1\n# in metadata, replace `Fst_group` column with cluster info (needed for the function below):\nPCAmodelAll.metadata.original_Fst_groups = PCAmodelAll.metadata.Fst_group # store the Fst_groups in this\nPCAmodelAll.metadata.Fst_group = clusterMembership\nPCAmodelAll.metadata.original_plot_order = PCAmodelAll.metadata.plot_order # store the original plot_order in this\nPCAmodelAll.metadata.plot_order = plotOrder\n\n# limit the SNPs to those with variants greater than 50% in \n# at least one pop, and less than 50% in at least one pop.\n# (So for each column in `freqs`, the maximum should be &gt; 0.5 \n# and the minimum should be &lt; 0.5)\nselectedSNPs = (vec(maximum(freqs, dims=1)) .&gt; 0.5) .& (vec(minimum(freqs, dims=1)) .&lt; 0.5)\ngenos_selectedSNPs = genos_highViSHetRegion[:, selectedSNPs]\npos_selectedSNPs = pos_highViSHetRegion[selectedSNPs, :]\nFst_selectedSNPs = Fst[:, selectedSNPs]\nfreqs_selectedSNPs = freqs[:, selectedSNPs]\n\n# limit the number of individuals per group to plot\nnumIndsToPlot = fill(15, length(clusterNames))\n\ngenosForGBI, indMetadataforGBI = limitIndsToPlot(clusterNames, numIndsToPlot, \n                                            genos_selectedSNPs, PCAmodelAll.metadata;\n                                            sortByMissing = true)\n\nplotGenotypeByIndividual(regionInfo, pos_selectedSNPs,\n                genosForGBI, indMetadataforGBI, freqs_selectedSNPs, clusterNames, clusterColors;\n                missingFractionAllowed = missingFractionAllowed,\n                indColorRightProvided = true)\n\nThe numbers in each group are [59 1 72 4 69] and the sum of those is 205\nCalculated population allele frequencies and sample sizes\n\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\n\n(Scene (768px, 960px):\n  0 Plots\n  2 Child Scenes:\n    ├ Scene (768px, 960px)\n    └ Scene (768px, 960px), Union{Missing, Int16}[0 0 … 0 0; 0 0 … 0 0; … ; 0 2 … 2 0; 0 2 … 2 0], [54765846, 54905388, 54954528, 54954575, 55151909, 55151945, 55176856, 55200024, 55200062, 55200114  …  59023396, 59058874, 59071396, 59075668, 59075686, 59133380, 59154238, 59154281, 59210193, 59210220], 50×28 DataFrame\n Row │ ind                           ID                            location  g ⋯\n     │ String                        String                        String7   S ⋯\n─────┼──────────────────────────────────────────────────────────────────────────\n   1 │ GW_Armando_plate1_TTGW13      GW_Armando_plate1_TTGW13      TH        l ⋯\n   2 │ GW_Armando_plate1_TTGW22      GW_Armando_plate1_TTGW22      SR        l\n   3 │ GW_Armando_plate2_JE31G01     GW_Armando_plate2_JE31G01     VB_vi     v\n   4 │ GW_Armando_plate2_JF03G01     GW_Armando_plate2_JF03G01     ST_vi     v\n   5 │ GW_Armando_plate2_TTGW25      GW_Armando_plate2_TTGW25      SR        l ⋯\n   6 │ GW_Armando_plate2_TTGW27      GW_Armando_plate2_TTGW27      SR        l\n   7 │ GW_Armando_plate2_TTGW56      GW_Armando_plate2_TTGW56      NG        l\n   8 │ GW_Armando_plate2_TTGW-15-03  GW_Armando_plate2_TTGW-15-03  SR        l\n   9 │ GW_Lane5_AA4                  GW_Lane5_AA4                  AA        v ⋯\n  10 │ GW_Lane5_PT4                  GW_Lane5_PT4                  PA        l\n  11 │ GW_Lane5_TL9                  GW_Lane5_TL9                  TL        v\n  ⋮  │              ⋮                             ⋮                   ⋮        ⋱\n  41 │ GW_Armando_plate1_JF12G01     GW_Armando_plate1_JF12G01     ST        p\n  42 │ GW_Armando_plate1_JF13G01     GW_Armando_plate1_JF13G01     ST        p ⋯\n  43 │ GW_Armando_plate1_JF15G03     GW_Armando_plate1_JF15G03     DV        p\n  44 │ GW_Armando_plate1_JF20G01     GW_Armando_plate1_JF20G01     MB        p\n  45 │ GW_Armando_plate1_JF22G01     GW_Armando_plate1_JF22G01     MB        p\n  46 │ GW_Armando_plate1_JF23G01     GW_Armando_plate1_JF23G01     VB        p ⋯\n  47 │ GW_Armando_plate1_JF24G02     GW_Armando_plate1_JF24G02     VB        p\n  48 │ GW_Armando_plate1_JF26G01     GW_Armando_plate1_JF26G01     ST        p\n  49 │ GW_Armando_plate1_JF27G01     GW_Armando_plate1_JF27G01     ST        p\n  50 │ GW_Armando_plate1_JF29G01     GW_Armando_plate1_JF29G01     ST        p ⋯\n                                                  25 columns and 29 rows omitted)\n\n\n\n\n\nNow show a GBI plot like above, but with heterozygotes:\n\nclusterNamesWithHets = [\"virLud\",\n                        \"virLudHet\",\n                        \"nit\",\n                        \"nitHet\",\n                        \"virLud_troch\",\n                        \"troch\",\n                        \"trochHet\",\n                        \"obs\",\n                        \"obs_plumb\",\n                        \"plumb\",\n                        \"plumbHet\",\n                        \"vir_plumb\"]\n\nclusterColorsWithHets = [\"blue\",\n                        \"blue\",\n                        \"grey\",\n                        \"grey\",\n                        \"yellowgreen\",\n                        \"yellow\",\n                        \"yellow\",\n                        \"orange\",\n                        \"darkorange1\",\n                        \"red\",\n                        \"red\",\n                        \"purple\"]\n\nvirLudHet = (PCAmodelAll.metadata.PC1 .&lt; -4) .& \n            (2.5 .&lt; PCAmodelAll.metadata.PC2 .&lt; 7) .&\n            .!indSelection_lowIndHetStan\nnitHet = (-3 .&lt; PCAmodelAll.metadata.PC1 .&lt; -2) .&\n        (0.5 .&lt; PCAmodelAll.metadata.PC2 .&lt; 1.5) .&\n            .!indSelection_lowIndHetStan\nvirLud_troch = (-5 .&lt; PCAmodelAll.metadata.PC1 .&lt; -2) .&\n                (-3 .&lt; PCAmodelAll.metadata.PC2 .&lt; 1) .&\n                 .!indSelection_lowIndHetStan\ntrochHet = (-2.5 .&lt; PCAmodelAll.metadata.PC1 .&lt; 0) .&\n            (PCAmodelAll.metadata.PC2 .&lt; -5) .&\n            .!indSelection_lowIndHetStan\nobs_plumb = (2 .&lt; PCAmodelAll.metadata.PC1 .&lt; 3) .&\n                (-3 .&lt; PCAmodelAll.metadata.PC2 .&lt; 2) .&\n                 .!indSelection_lowIndHetStan\nplumbHet = (6 .&lt; PCAmodelAll.metadata.PC1) .& \n            (1 .&lt; PCAmodelAll.metadata.PC2) .&\n            .!indSelection_lowIndHetStan\nvir_plumb = (-3 .&lt; PCAmodelAll.metadata.PC1 .&lt; 3) .&\n                (2 .&lt; PCAmodelAll.metadata.PC2 .&lt; 5) .&\n                 .!indSelection_lowIndHetStan\n\nclusterArray = [virLud virLudHet nit nitHet virLud_troch troch trochHet obs obs_plumb plumb plumbHet vir_plumb]\n\nsum(clusterArray, dims=1)\n\nif sum(sum(clusterArray, dims=1)) == size(PCAmodelAll.metadata, 1)\n    println(\"Good news: Individuals included in a group matches total number of individuals\")\nelse \n    println(\"Warning: Individuals included in a group ($(sum(sum(clusterArray, dims=1)))) do NOT match total number of individuals ($(size(PCAmodelAll.metadata, 1)))\")\nend\n\n# check which individuals left out:\n\nsum(clusterArray, dims=2)\n\nPCAmodelAll.metadata.ind[vec(sum(clusterArray, dims=2) .== 0)]\nPCAmodelAll.metadata.PC1[vec(sum(clusterArray, dims=2) .== 0)]\nPCAmodelAll.metadata.PC2[vec(sum(clusterArray, dims=2) .== 0)]\nindSelection_lowIndHetStan[vec(sum(clusterArray, dims=2) .== 0)]\n\n# create vectors that indicate the groups and plot order for this analysis:\nclusterMembershipWithHets = fill(\"none\", nrow(PCAmodelAll.metadata))\nplotOrderWithHets = fill(-9, nrow(PCAmodelAll.metadata))\nfor i in eachindex(clusterArray[1,:])\n    clusterMembershipWithHets[clusterArray[:,i]] .= clusterNamesWithHets[i]\n    plotOrderWithHets[clusterArray[:,i]] .= i\nend\n\n# Add column to main metadata object containing the cluster membership for this highHet region:\ncommand = \"ind_with_metadata_included.\" * chr * \"_cluster = clusterMembershipWithHets\"\neval(Meta.parse(command)) # this executes the command constructed above\n\n# in metadata, replace `Fst_group` column with cluster info (needed for the function below):\nPCAmodelAll.metadata.Fst_group = clusterMembershipWithHets\nPCAmodelAll.metadata.plot_order = plotOrderWithHets\n\n# limit the number of individuals per group to plot\nnumIndsToPlotWithHets = fill(15, length(clusterNamesWithHets))\n\ngenosForGBI, indMetadataforGBI = limitIndsToPlot(clusterNamesWithHets, numIndsToPlotWithHets, \n                                            genos_selectedSNPs, PCAmodelAll.metadata;\n                                            sortByMissing = true)\n\nplotGenotypeByIndividual(regionInfo, pos_selectedSNPs,\n                genosForGBI, indMetadataforGBI, freqs_selectedSNPs, clusterNamesWithHets, clusterColorsWithHets;\n                missingFractionAllowed = missingFractionAllowed,\n                indColorLeftProvided = false,\n                indColorRightProvided = true)\n\nGood news: Individuals included in a group matches total number of individuals\n\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\n\n(Scene (768px, 960px):\n  0 Plots\n  2 Child Scenes:\n    ├ Scene (768px, 960px)\n    └ Scene (768px, 960px), Union{Missing, Int16}[0 0 … 0 0; 0 0 … 0 0; … ; 0 0 … 1 0; -99 0 … 2 0], [54765846, 54905388, 54954528, 54954575, 55151909, 55151945, 55176856, 55200024, 55200062, 55200114  …  59023396, 59058874, 59071396, 59075668, 59075686, 59133380, 59154238, 59154281, 59210193, 59210220], 88×28 DataFrame\n Row │ ind                           ID                            location  g ⋯\n     │ String                        String                        String7   S ⋯\n─────┼──────────────────────────────────────────────────────────────────────────\n   1 │ GW_Armando_plate1_TTGW13      GW_Armando_plate1_TTGW13      TH        l ⋯\n   2 │ GW_Armando_plate1_TTGW22      GW_Armando_plate1_TTGW22      SR        l\n   3 │ GW_Armando_plate2_JE31G01     GW_Armando_plate2_JE31G01     VB_vi     v\n   4 │ GW_Armando_plate2_JF03G01     GW_Armando_plate2_JF03G01     ST_vi     v\n   5 │ GW_Armando_plate2_TTGW25      GW_Armando_plate2_TTGW25      SR        l ⋯\n   6 │ GW_Armando_plate2_TTGW27      GW_Armando_plate2_TTGW27      SR        l\n   7 │ GW_Armando_plate2_TTGW56      GW_Armando_plate2_TTGW56      NG        l\n   8 │ GW_Armando_plate2_TTGW-15-03  GW_Armando_plate2_TTGW-15-03  SR        l\n   9 │ GW_Lane5_AA4                  GW_Lane5_AA4                  AA        v ⋯\n  10 │ GW_Lane5_PT4                  GW_Lane5_PT4                  PA        l\n  11 │ GW_Lane5_TL9                  GW_Lane5_TL9                  TL        v\n  ⋮  │              ⋮                             ⋮                   ⋮        ⋱\n  79 │ GW_Armando_plate2_JF16G02     GW_Armando_plate2_JF16G02     DV_vi     p\n  80 │ GW_Armando_plate2_TTGW-15-06  GW_Armando_plate2_TTGW-15-06  SR        l ⋯\n  81 │ GW_Lane5_SL2                  GW_Lane5_SL2                  SL        p\n  82 │ GW_Armando_plate2_TTGW28      GW_Armando_plate2_TTGW28      SR        l\n  83 │ GW_Armando_plate1_JF10G03     GW_Armando_plate1_JF10G03     ST        p\n  84 │ GW_Lane5_PT6                  GW_Lane5_PT6                  KL        l ⋯\n  85 │ GW_Lane5_AA6                  GW_Lane5_AA6                  AA        v\n  86 │ GW_Lane5_TL2                  GW_Lane5_TL2                  TL        v\n  87 │ GW_Lane5_AB2                  GW_Lane5_AB2                  AB        v\n  88 │ GW_Lane5_NA1                  GW_Lane5_NA1                  NR        l ⋯\n                                                  25 columns and 67 rows omitted)\n\n\n\n\n\nshow GBI plot according to original groups and plot order\n\n#PCAmodelAll.metadata.Fst_group = PCAmodelAll.metadata.original_Fst_group\nPCAmodelAll.metadata.plot_order = PCAmodelAll.metadata.original_plot_order\n\ngenosForGBI, indMetadataforGBI = limitIndsToPlot(clusterNamesWithHets, numIndsToPlotWithHets, \n                                            genos_selectedSNPs, PCAmodelAll.metadata;\n                                            sortByMissing = true)\n\nplotGenotypeByIndividual(regionInfo, pos_selectedSNPs,\n                genosForGBI, indMetadataforGBI, freqs_selectedSNPs, clusterNamesWithHets, clusterColorsWithHets;\n                missingFractionAllowed = missingFractionAllowed,\n                indColorLeftProvided = false,\n                indColorRightProvided = true)\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\n\n(Scene (768px, 960px):\n  0 Plots\n  2 Child Scenes:\n    ├ Scene (768px, 960px)\n    └ Scene (768px, 960px), Union{Missing, Int16}[0 0 … 0 0; 0 0 … 0 0; … ; 0 1 … 1 0; 0 1 … 1 0], [54765846, 54905388, 54954528, 54954575, 55151909, 55151945, 55176856, 55200024, 55200062, 55200114  …  59023396, 59058874, 59071396, 59075668, 59075686, 59133380, 59154238, 59154281, 59210193, 59210220], 88×28 DataFrame\n Row │ ind                        ID                         location  group   ⋯\n     │ String                     String                     String7   String1 ⋯\n─────┼──────────────────────────────────────────────────────────────────────────\n   1 │ GW_Armando_plate2_JF03G01  GW_Armando_plate2_JF03G01  ST_vi     vir_mis ⋯\n   2 │ GW_Armando_plate1_JF12G04  GW_Armando_plate1_JF12G04  ST_vi     vir\n   3 │ GW_Armando_plate1_JF16G01  GW_Armando_plate1_JF16G01  DV_vi     plumb_v\n   4 │ GW_Armando_plate2_JF16G02  GW_Armando_plate2_JF16G02  DV_vi     plumb_v\n   5 │ GW_Armando_plate2_JE31G01  GW_Armando_plate2_JE31G01  VB_vi     vir_mis ⋯\n   6 │ GW_Lane5_YK11              GW_Lane5_YK11              YK        vir\n   7 │ GW_Lane5_YK6               GW_Lane5_YK6               YK        vir\n   8 │ GW_Lane5_AB2               GW_Lane5_AB2               AB        vir\n   9 │ GW_Lane5_TL9               GW_Lane5_TL9               TL        vir     ⋯\n  10 │ GW_Lane5_TL12              GW_Lane5_TL12              TL        vir\n  11 │ GW_Lane5_TL2               GW_Lane5_TL2               TL        vir\n  ⋮  │             ⋮                          ⋮                 ⋮          ⋮   ⋱\n  79 │ GW_Armando_plate1_JF26G01  GW_Armando_plate1_JF26G01  ST        plumb\n  80 │ GW_Armando_plate1_JF27G01  GW_Armando_plate1_JF27G01  ST        plumb   ⋯\n  81 │ GW_Armando_plate1_JF29G01  GW_Armando_plate1_JF29G01  ST        plumb\n  82 │ GW_Armando_plate1_JF15G03  GW_Armando_plate1_JF15G03  DV        plumb\n  83 │ GW_Armando_plate1_JF23G01  GW_Armando_plate1_JF23G01  VB        plumb\n  84 │ GW_Armando_plate1_JF24G02  GW_Armando_plate1_JF24G02  VB        plumb   ⋯\n  85 │ GW_Armando_plate1_JF23G02  GW_Armando_plate1_JF23G02  VB        plumb\n  86 │ GW_Armando_plate1_JG02G04  GW_Armando_plate1_JG02G04  PR        plumb\n  87 │ GW_Lane5_SL2               GW_Lane5_SL2               SL        plumb\n  88 │ GW_Armando_plate1_JF10G03  GW_Armando_plate1_JF10G03  ST        plumb_v ⋯\n                                                  25 columns and 67 rows omitted)\n\n\n\n\n\nshow same but with all individuals\n\n#PCAmodelAll.metadata.Fst_group = PCAmodelAll.metadata.original_Fst_group\nPCAmodelAll.metadata.plot_order = PCAmodelAll.metadata.original_plot_order\n\n# Set no limit (or high limit anyway) on the number of individuals per group to plot\nnumIndsToPlotWithHets = fill(1000, length(clusterNamesWithHets))\n\ngenosForGBI, indMetadataforGBI = limitIndsToPlot(clusterNamesWithHets, numIndsToPlotWithHets, \n                                            genos_selectedSNPs, PCAmodelAll.metadata;\n                                            sortByMissing = true)\n\nplotGenotypeByIndividual(regionInfo, pos_selectedSNPs,\n                genosForGBI, indMetadataforGBI, freqs_selectedSNPs, clusterNamesWithHets, clusterColorsWithHets;\n                missingFractionAllowed = missingFractionAllowed,\n                indColorLeftProvided = false,\n                indColorRightProvided = true)\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\n\n(Scene (768px, 960px):\n  0 Plots\n  2 Child Scenes:\n    ├ Scene (768px, 960px)\n    └ Scene (768px, 960px), Union{Missing, Int16}[0 0 … 0 0; 0 0 … 0 0; … ; 0 1 … 1 0; 0 1 … 1 0], [54765846, 54905388, 54954528, 54954575, 55151909, 55151945, 55176856, 55200024, 55200062, 55200114  …  59023396, 59058874, 59071396, 59075668, 59075686, 59133380, 59154238, 59154281, 59210193, 59210220], 256×28 DataFrame\n Row │ ind                        ID                         location  group   ⋯\n     │ String                     String                     String7   String1 ⋯\n─────┼──────────────────────────────────────────────────────────────────────────\n   1 │ GW_Armando_plate2_JF03G01  GW_Armando_plate2_JF03G01  ST_vi     vir_mis ⋯\n   2 │ GW_Armando_plate1_JF12G04  GW_Armando_plate1_JF12G04  ST_vi     vir\n   3 │ GW_Armando_plate2_JF30G01  GW_Armando_plate2_JF30G01  ST_vi     vir_mis\n   4 │ GW_Lane5_STvi1             GW_Lane5_STvi1             ST_vi     vir\n   5 │ GW_Lane5_STvi3             GW_Lane5_STvi3             ST_vi     vir     ⋯\n   6 │ GW_Lane5_STvi2             GW_Lane5_STvi2             ST_vi     vir\n   7 │ GW_Armando_plate1_JF16G01  GW_Armando_plate1_JF16G01  DV_vi     plumb_v\n   8 │ GW_Armando_plate2_JF16G02  GW_Armando_plate2_JF16G02  DV_vi     plumb_v\n   9 │ GW_Armando_plate2_JE31G01  GW_Armando_plate2_JE31G01  VB_vi     vir_mis ⋯\n  10 │ GW_Armando_plate2_JF03G02  GW_Armando_plate2_JF03G02  VB_vi     vir_mis\n  11 │ GW_Lane5_YK11              GW_Lane5_YK11              YK        vir\n  ⋮  │             ⋮                          ⋮                 ⋮          ⋮   ⋱\n 247 │ GW_Armando_plate2_JF24G01  GW_Armando_plate2_JF24G01  VB        plumb\n 248 │ GW_Armando_plate1_JF23G02  GW_Armando_plate1_JF23G02  VB        plumb   ⋯\n 249 │ GW_Armando_plate2_JG01G01  GW_Armando_plate2_JG01G01  PR        plumb\n 250 │ GW_Armando_plate2_JG02G01  GW_Armando_plate2_JG02G01  PR        plumb\n 251 │ GW_Armando_plate2_JG02G03  GW_Armando_plate2_JG02G03  PR        plumb\n 252 │ GW_Armando_plate1_JG02G02  GW_Armando_plate1_JG02G02  PR        plumb   ⋯\n 253 │ GW_Armando_plate1_JG02G04  GW_Armando_plate1_JG02G04  PR        plumb\n 254 │ GW_Lane5_SL1               GW_Lane5_SL1               SL        plumb\n 255 │ GW_Lane5_SL2               GW_Lane5_SL2               SL        plumb\n 256 │ GW_Armando_plate1_JF10G03  GW_Armando_plate1_JF10G03  ST        plumb_v ⋯\n                                                 25 columns and 235 rows omitted)\n\n\n\nChr 2 is complicated, shows recomb and perhaps some haploblock sharing between east Siberia and the southwestern area. Hard to show in summary figure but should perhaps mention.",
    "crumbs": [
      "Home",
      "Greenish Warbler heterozygosity variance analysis"
    ]
  },
  {
    "objectID": "GW_Heterozygosity_Variance.html#same-for-chr-3",
    "href": "GW_Heterozygosity_Variance.html#same-for-chr-3",
    "title": "Greenish Warbler heterozygosity variance analysis",
    "section": "Same for chr 3",
    "text": "Same for chr 3\n\n# choose scaffold\nchr = \"gw3\"\n\npositionMin, positionMax, regionText, \n    windowedIndHetStanRegion, meanAcrossRegionIndHetStan,\n    genos_highViSHetRegion, pos_highViSHetRegion, regionInfo = \n    getWindowedIndHetStanRegion(genosOnly_included, \n                            pos_SNP_filtered, \n                            highViSHetRegions, chr;\n                            windowSize = 500)\n\n# inspect values for mean IndHetStan per individual for that high ViSHet region\nplot(meanAcrossRegionIndHetStan)\n\n# Add column to metadata containing the regionIndHetStan for this highHet region:\ncommand = \"ind_with_metadata_included.\" * chr * \"_regionIndHetStan = meanAcrossRegionIndHetStan\"\neval(Meta.parse(command)) # this executes the command constructed above\nind_with_metadata_included.regionIndHetStan = meanAcrossRegionIndHetStan\n\n#names(ind_with_metadata_included)\n\n# check whether missing data related to heterozygosity (good news: not really)\nplot(ind_with_metadata_included.numMissings, meanAcrossRegionIndHetStan)\n\n# PCA of all individuals:\n\ngenos_highViSHetRegion_imputed = Impute.svd(Matrix{Union{Missing, Float32}}(genos_highViSHetRegion))\n\nflipPC1 = false\nflipPC2 = true\n\nPCAmodelAll = plotPCA(genos_highViSHetRegion_imputed, ind_with_metadata_included, \n            groups_to_plot_PCA, group_colors_PCA; \n            sampleSet = \"greenish warblers\", regionText = regionText,\n            flip1 = flipPC1, flip2 = flipPC2,\n            lineOpacity = 0.7, fillOpacity = 0.6,\n            symbolSize = 14, showTitle = true,\n            xLabelText = string(\"Region PC1\"), yLabelText = string(\"Region PC2\"),\n            showPlot = false)\n\ndisplay(PCAmodelAll.PCAfig)\n\n# Add PC values to metadata for individuals included in PCA above:\nif flipPC1\n    PCAmodelAll.metadata.PC1 = -1 .* PCAmodelAll.values[1,:]\nelse \n    PCAmodelAll.metadata.PC1 = PCAmodelAll.values[1,:]\nend\nif flipPC2\n    PCAmodelAll.metadata.PC2 = -1 .* PCAmodelAll.values[2,:]\nelse\n    PCAmodelAll.metadata.PC2 = PCAmodelAll.values[2,:]\nend\nPCAmodelAll.metadata.PC3 = PCAmodelAll.values[3,:]\n\n# For the next bit to work with above, make sure that all individuals in the above `plotPCA` command\n# are included in the `groups_to_plot_PCA`\n\n# choose inds with low IndHet in high ViSHet region:\nindSelection_lowIndHetStan = (meanAcrossRegionIndHetStan .&lt; 1.25) \n\n#Plot only the lowIndHetStan individuals:\n\nf = CairoMakie.Figure();\nax = Axis(f[1, 1],\n    title = \"PC1 vs. PC2, only low heterozygosity\",\n    xlabel = \"Region PC1\", xlabelsize = 24,\n    ylabel = \"Region PC2\", ylabelsize = 24,\n    autolimitaspect = 1)\nhidedecorations!(ax, label = false, ticklabels = false, ticks = false) # hide background lattice\nfor i in eachindex(groups_to_plot_PCA) \n    selection = (PCAmodelAll.metadata.Fst_group .== groups_to_plot_PCA[i]) .& indSelection_lowIndHetStan\n    CairoMakie.scatter!(ax, PCAmodelAll.metadata.PC1[selection], PCAmodelAll.metadata.PC2[selection], marker = :diamond, color = (group_colors_PCA[i], 0.6), markersize = 14, strokewidth=0.5, strokecolor = (\"black\", 0.7))\nend\ndisplay(f)\n\nMore than 1 region on that scaffold. Using just the longest one.\n\n\n2×3 DataFrame\n\n\n\nRow\nregionChrom\nregionStart\nregionEnd\n\n\n\nString\nInt64\nInt64\n\n\n\n\n1\ngw3\n101192949\n103495514\n\n\n2\ngw3\n104554714\n108279595\n\n\n\n\n\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\nCairoMakie.Screen{IMAGE}\n\n\n\nSave the individual colors in the metadata\n\nindColors = fill(\"\", size(PCAmodelAll.metadata, 1))\nfor i in axes(PCAmodelAll.metadata, 1)\n    indColors[i] = group_colors_PCA[findfirst(groups_to_plot_PCA .== PCAmodelAll.metadata.Fst_group[i])]\nend\nPCAmodelAll.metadata.indColorLeft = indColors\nPCAmodelAll.metadata.indColorRight = indColors\n\n257-element Vector{String}:\n \"blue\"\n \"red\"\n \"red\"\n \"red\"\n \"red\"\n \"red\"\n \"red\"\n \"purple\"\n \"red\"\n \"red\"\n \"red\"\n \"blue\"\n \"red\"\n ⋮\n \"olivedrab2\"\n \"olivedrab2\"\n \"olivedrab2\"\n \"olivedrab2\"\n \"olivedrab2\"\n \"olivedrab2\"\n \"olivedrab2\"\n \"olivedrab2\"\n \"olivedrab2\"\n \"olivedrab2\"\n \"olivedrab2\"\n \"olivedrab2\"\n\n\n\n\nPlot PC1 vs. PC2:\n\nf = CairoMakie.Figure()\nax = Axis(f[1, 1],\n    title = \"PC1 vs. PC2\",\n    xlabel = \"Region PC1\", xlabelsize = 24,\n    ylabel = \"Region PC2\", ylabelsize = 24,\n    autolimitaspect = 1)\nhidedecorations!(ax, label = false, ticklabels = false, ticks = false) # hide background lattice\nfor i in eachindex(groups_to_plot_PCA) \n    selection = PCAmodelAll.metadata.Fst_group .== groups_to_plot_PCA[i]\n    CairoMakie.scatter!(ax, PCAmodelAll.metadata.PC1[selection], PCAmodelAll.metadata.PC2[selection], marker = :diamond, color = (group_colors_PCA[i], 0.6), markersize = 14, strokewidth=0.5, strokecolor = (\"black\", 0.7))\nend\ndisplay(f)\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\nCairoMakie.Screen{IMAGE}\n\n\n\n\nPlot PC1 vs. PC3:\n\nf = CairoMakie.Figure()\nax = Axis(f[1, 1],\n    title = \"PC1 vs. PC3\",\n    xlabel = \"Region PC1\", xlabelsize = 24,\n    ylabel = \"Region PC3\", ylabelsize = 24,\n    autolimitaspect = 1)\nhidedecorations!(ax, label = false, ticklabels = false, ticks = false) # hide background lattice\nfor i in eachindex(groups_to_plot_PCA) \n    selection = PCAmodelAll.metadata.Fst_group .== groups_to_plot_PCA[i]\n    CairoMakie.scatter!(ax, PCAmodelAll.metadata.PC1[selection], PCAmodelAll.metadata.PC3[selection], marker = :diamond, color = (group_colors_PCA[i], 0.6), markersize = 14, strokewidth=0.5, strokecolor = (\"black\", 0.7))\nend\ndisplay(f)\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\nCairoMakie.Screen{IMAGE}\n\n\n\n\nAt chr 3 high ViSHet region, there are only 4 clear haplogroups (vir and lud separated though on PC3, but not in a clean way that I can distinguish clearly). Divide samples into those groups, based on PCA scores, and then calculate pi within and pi between\n\nclusterNames = [\"virLud\",\n                \"nit\",\n                \"trochObs\",\n                \"plumb\"]\n\nclusterColors = [\"blue\",\n                \"grey\",\n                \"yellow\",\n                \"red\"]\n\nvirLud = (PCAmodelAll.metadata.PC1 .&lt; -4) .&\n            indSelection_lowIndHetStan\nnit = (-4 .&lt; PCAmodelAll.metadata.PC1 .&lt; -2) .&\n            indSelection_lowIndHetStan\ntrochObs = (-2 .&lt; PCAmodelAll.metadata.PC1 .&lt; 2.5) .&\n            (PCAmodelAll.metadata.PC2 .&lt; -3) .&\n            indSelection_lowIndHetStan\nplumb = (5 .&lt; PCAmodelAll.metadata.PC1) .& \n            (2 .&lt; PCAmodelAll.metadata.PC2) .&\n            indSelection_lowIndHetStan\n\n# check the individuals in each group\nPCAmodelAll.metadata.Fst_group[virLud]\nPCAmodelAll.metadata.Fst_group[nit]\nPCAmodelAll.metadata.Fst_group[trochObs]\nPCAmodelAll.metadata.Fst_group[plumb]\n\nclusterArray = [virLud nit trochObs plumb]\n\n# show numbers in each group\nprintln(\"The numbers in each group are $(sum(clusterArray, dims=1)) and the sum of those is $(sum(sum(clusterArray, dims=1)))\")\n\n# create vectors that indicate the groups and plot order for this analysis:\nclusterMembership = fill(\"none\", nrow(PCAmodelAll.metadata))\nplotOrder = fill(-9, nrow(PCAmodelAll.metadata))\nfor i in eachindex(clusterArray[1,:])\n    clusterMembership[clusterArray[:,i]] .= clusterNames[i]\n    plotOrder[clusterArray[:,i]] .= i\nend\n\n# Calculate allele freqs and sample sizes\nfreqs, sampleSizes = getFreqsAndSampleSizes(genos_highViSHetRegion, clusterMembership, clusterNames)\nprintln(\"Calculated population allele frequencies and sample sizes\")\n\n# Calculate per-site pi (within-group nucleotide distance)\n\nsitePi = getSitePi(freqs, sampleSizes)\n\n# calculate pairwise Dxy per site, using data in \"freqs\" and groups in \"groups\"\n\nDxy, pairwiseDxyClusterNames = getDxy(freqs, clusterNames)\n\nFst, FstNumerator, FstDenominator, pairwiseFstClusterNames = getFst(freqs, sampleSizes, clusterNames; among=false)  # set among to FALSE if no among Fst wanted (some things won't work without it) \n\n# Now get averages of pi and Dxy for whole region:\n\nregionPiTable = DataFrame(cluster = clusterNames, pi = getRegionPi(sitePi))\n#= 4×2 DataFrame\n Row │ cluster   pi         \n     │ String    Float64    \n─────┼──────────────────────\n   1 │ virLud    0.00950795\n   2 │ nit       0.00509165\n   3 │ trochObs  0.00992915\n   4 │ plumb     0.00992294 =#\n\nregionDxyTable = DataFrame(cluster_pair = pairwiseDxyClusterNames, Dxy = getRegionDxy(Dxy))\n#= 6×2 DataFrame\n Row │ cluster_pair     Dxy       \n     │ String           Float64   \n─────┼────────────────────────────\n   1 │ virLud_nit       0.0234761\n   2 │ virLud_trochObs  0.0309999\n   3 │ virLud_plumb     0.0345515\n   4 │ nit_trochObs     0.0320461\n   5 │ nit_plumb        0.0351086\n   6 │ trochObs_plumb   0.0305924 =#\n\n# Make a genotype-by-individual plot using all variable loci in the region,\nmissingFractionAllowed = 0.1\n# in metadata, replace `Fst_group` column with cluster info (needed for the function below):\nPCAmodelAll.metadata.original_Fst_groups = PCAmodelAll.metadata.Fst_group # store the Fst_groups in this\nPCAmodelAll.metadata.Fst_group = clusterMembership\nPCAmodelAll.metadata.original_plot_order = PCAmodelAll.metadata.plot_order # store the original plot_order in this\nPCAmodelAll.metadata.plot_order = plotOrder\n\n# limit the SNPs to those with variants greater than 50% in \n# at least one pop, and less than 50% in at least one pop.\n# (So for each column in `freqs`, the maximum should be &gt; 0.5 \n# and the minimum should be &lt; 0.5)\nselectedSNPs = (vec(maximum(freqs, dims=1)) .&gt; 0.5) .& (vec(minimum(freqs, dims=1)) .&lt; 0.5)\ngenos_selectedSNPs = genos_highViSHetRegion[:, selectedSNPs]\npos_selectedSNPs = pos_highViSHetRegion[selectedSNPs, :]\nFst_selectedSNPs = Fst[:, selectedSNPs]\nfreqs_selectedSNPs = freqs[:, selectedSNPs]\n\n# limit the number of individuals per group to plot\nnumIndsToPlot = fill(150, length(clusterNames))\n\ngenosForGBI, indMetadataforGBI = limitIndsToPlot(clusterNames, numIndsToPlot, \n                                            genos_selectedSNPs, PCAmodelAll.metadata;\n                                            sortByMissing = false)\n\n# sort based on original_plot_order, and then together with function below will arrange individuals in population order within clusters:\nsortOrder = sortperm(indMetadataforGBI.original_plot_order, rev=false)\nindMetadataforGBI = indMetadataforGBI[sortOrder, :]\ngenosForGBI = genosForGBI[sortOrder, :]\n\nplotGenotypeByIndividual(regionInfo, pos_selectedSNPs,\n                genosForGBI, indMetadataforGBI, freqs_selectedSNPs, clusterNames, clusterColors;\n                indFontSize=6, figureSize=(800, 1800),\n                missingFractionAllowed = missingFractionAllowed,\n                indColorLeftProvided = true,\n                indColorRightProvided = true)\n\nThe numbers in each group are [64 2 72 63] and the sum of those is 201\nCalculated population allele frequencies and sample sizes\n\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\n\n(Scene (768px, 960px):\n  0 Plots\n  2 Child Scenes:\n    ├ Scene (768px, 960px)\n    └ Scene (768px, 960px), Union{Missing, Int16}[0 0 … 0 0; 0 0 … 0 0; … ; 0 0 … 0 0; 0 0 … 0 0], [104582339, 104582348, 104582352, 104654170, 104654177, 104654201, 104654235, 104655357, 104795328, 104795382  …  107808537, 107822070, 107822104, 107822186, 107920230, 108037413, 108050478, 108079656, 108089665, 108202755], 201×30 DataFrame\n Row │ ind                        ID                         location  group   ⋯\n     │ String                     String                     String7   String1 ⋯\n─────┼──────────────────────────────────────────────────────────────────────────\n   1 │ GW_Armando_plate1_JF12G04  GW_Armando_plate1_JF12G04  ST_vi     vir     ⋯\n   2 │ GW_Armando_plate2_JF30G01  GW_Armando_plate2_JF30G01  ST_vi     vir_mis\n   3 │ GW_Lane5_STvi1             GW_Lane5_STvi1             ST_vi     vir\n   4 │ GW_Lane5_STvi2             GW_Lane5_STvi2             ST_vi     vir\n   5 │ GW_Lane5_STvi3             GW_Lane5_STvi3             ST_vi     vir     ⋯\n   6 │ GW_Armando_plate1_JF16G01  GW_Armando_plate1_JF16G01  DV_vi     plumb_v\n   7 │ GW_Armando_plate2_JF16G02  GW_Armando_plate2_JF16G02  DV_vi     plumb_v\n   8 │ GW_Armando_plate2_JE31G01  GW_Armando_plate2_JE31G01  VB_vi     vir_mis\n   9 │ GW_Armando_plate2_JF03G02  GW_Armando_plate2_JF03G02  VB_vi     vir_mis ⋯\n  10 │ GW_Lane5_YK11              GW_Lane5_YK11              YK        vir\n  11 │ GW_Lane5_YK3               GW_Lane5_YK3               YK        vir\n  ⋮  │             ⋮                          ⋮                 ⋮          ⋮   ⋱\n 192 │ GW_Armando_plate2_JF15G02  GW_Armando_plate2_JF15G02  DV        plumb\n 193 │ GW_Armando_plate1_JF23G01  GW_Armando_plate1_JF23G01  VB        plumb   ⋯\n 194 │ GW_Armando_plate1_JF23G02  GW_Armando_plate1_JF23G02  VB        plumb\n 195 │ GW_Armando_plate1_JF24G02  GW_Armando_plate1_JF24G02  VB        plumb\n 196 │ GW_Armando_plate1_JG02G04  GW_Armando_plate1_JG02G04  PR        plumb\n 197 │ GW_Armando_plate2_JG02G01  GW_Armando_plate2_JG02G01  PR        plumb   ⋯\n 198 │ GW_Armando_plate2_JG02G03  GW_Armando_plate2_JG02G03  PR        plumb\n 199 │ GW_Lane5_SL1               GW_Lane5_SL1               SL        plumb\n 200 │ GW_Lane5_SL2               GW_Lane5_SL2               SL        plumb\n 201 │ GW_Armando_plate1_JF10G03  GW_Armando_plate1_JF10G03  ST        plumb_v ⋯\n                                                 27 columns and 180 rows omitted)\n\n\n\n\n\nNow show a GBI plot like above, but with heterozygotes:\n\nclusterNamesWithHets = [\"virLud\",\n                        \"virLudHet\",\n                        \"nit\",\n                        \"virLud_trochObs\",\n                        \"trochObs\",\n                        \"trochObsHet\",\n                        \"plumb\",\n                        \"plumbHet\",\n                        \"vir_plumb\"]\n\nclusterColorsWithHets = [\"blue\",\n                        \"blue\",\n                        \"grey\",\n                        \"green\",\n                        \"yellow\",\n                        \"orange\",\n                        \"red\",\n                        \"red\",\n                        \"purple\"]\n\nvirLudHet = (PCAmodelAll.metadata.PC1 .&lt; -4) .& \n            (2.5 .&lt; PCAmodelAll.metadata.PC2) .&\n            .!indSelection_lowIndHetStan\nvirLud_trochObs = (-5 .&lt; PCAmodelAll.metadata.PC1 .&lt; -1.5) .&\n                (-3 .&lt; PCAmodelAll.metadata.PC2 .&lt; 1) .&\n                 .!indSelection_lowIndHetStan\ntrochObsHet = (-2 .&lt; PCAmodelAll.metadata.PC1 .&lt; 2.5) .&\n            (PCAmodelAll.metadata.PC2 .&lt; -3) .&\n            .!indSelection_lowIndHetStan\nplumbHet = (5 .&lt; PCAmodelAll.metadata.PC1) .& \n            (2 .&lt; PCAmodelAll.metadata.PC2) .&\n            .!indSelection_lowIndHetStan\nvir_plumb = (-1 .&lt; PCAmodelAll.metadata.PC1 .&lt; 2) .&\n                (3 .&lt; PCAmodelAll.metadata.PC2 .&lt; 5) .&\n                 .!indSelection_lowIndHetStan\n\nclusterArray = [virLud virLudHet nit virLud_trochObs trochObs trochObsHet plumb plumbHet vir_plumb]\n\nsum(clusterArray, dims=1)\n\nif sum(sum(clusterArray, dims=1)) == size(PCAmodelAll.metadata, 1)\n    println(\"Good news: Individuals included in a group matches total number of individuals\")\nelse \n    println(\"Warning: Individuals included in a group ($(sum(sum(clusterArray, dims=1)))) do NOT match total number of individuals ($(size(PCAmodelAll.metadata, 1)))\")\nend\n\n\n# check which individuals left out:\n\nsum(clusterArray, dims=2)\n\nPCAmodelAll.metadata.ind[vec(sum(clusterArray, dims=2) .== 0)]\nPCAmodelAll.metadata.PC1[vec(sum(clusterArray, dims=2) .== 0)]\nPCAmodelAll.metadata.PC2[vec(sum(clusterArray, dims=2) .== 0)]\nindSelection_lowIndHetStan[vec(sum(clusterArray, dims=2) .== 0)]\n\n# create vectors that indicate the groups and plot order for this analysis:\nclusterMembershipWithHets = fill(\"none\", nrow(PCAmodelAll.metadata))\nplotOrderWithHets = fill(-9, nrow(PCAmodelAll.metadata))\nfor i in eachindex(clusterArray[1,:])\n    clusterMembershipWithHets[clusterArray[:,i]] .= clusterNamesWithHets[i]\n    plotOrderWithHets[clusterArray[:,i]] .= i\nend\n\n# Add column to main metadata object containing the cluster membership for this highHet region:\ncommand = \"ind_with_metadata_included.\" * chr * \"_cluster = clusterMembershipWithHets\"\neval(Meta.parse(command)) # this executes the command constructed above\n\n# in metadata, replace `Fst_group` column with cluster info (needed for the function below):\nPCAmodelAll.metadata.Fst_group = clusterMembershipWithHets\nPCAmodelAll.metadata.plot_order = plotOrderWithHets\n\n# limit the number of individuals per group to plot\nnumIndsToPlotWithHets = fill(15, length(clusterNamesWithHets))\n\ngenosForGBI, indMetadataforGBI = limitIndsToPlot(clusterNamesWithHets, numIndsToPlotWithHets, \n                                            genos_selectedSNPs, PCAmodelAll.metadata;\n                                            sortByMissing = true)\n\nplotGenotypeByIndividual(regionInfo, pos_selectedSNPs,\n                genosForGBI, indMetadataforGBI, freqs_selectedSNPs, clusterNamesWithHets, clusterColorsWithHets;\n                missingFractionAllowed = missingFractionAllowed,\n                indColorLeftProvided = false,\n                indColorRightProvided = true)\n\nGood news: Individuals included in a group matches total number of individuals\n\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\n\n(Scene (768px, 960px):\n  0 Plots\n  2 Child Scenes:\n    ├ Scene (768px, 960px)\n    └ Scene (768px, 960px), Union{Missing, Int16}[0 0 … 0 0; 0 0 … 0 0; … ; 0 0 … 0 0; 0 0 … 0 0], [104582339, 104582348, 104582352, 104654170, 104654177, 104654201, 104654235, 104655357, 104795328, 104795382  …  107808537, 107822070, 107822104, 107822186, 107920230, 108037413, 108050478, 108079656, 108089665, 108202755], 82×30 DataFrame\n Row │ ind                           ID                            location  g ⋯\n     │ String                        String                        String7   S ⋯\n─────┼──────────────────────────────────────────────────────────────────────────\n   1 │ GW_Armando_plate1_AB1         GW_Armando_plate1_AB1         AB        v ⋯\n   2 │ GW_Armando_plate1_JF12G04     GW_Armando_plate1_JF12G04     ST_vi     v\n   3 │ GW_Armando_plate1_JF16G01     GW_Armando_plate1_JF16G01     DV_vi     p\n   4 │ GW_Armando_plate1_TTGW06      GW_Armando_plate1_TTGW06      SU        l\n   5 │ GW_Armando_plate1_TTGW17      GW_Armando_plate1_TTGW17      TH        l ⋯\n   6 │ GW_Armando_plate1_TTGW57      GW_Armando_plate1_TTGW57      NG        l\n   7 │ GW_Armando_plate1_TTGW-15-08  GW_Armando_plate1_TTGW-15-08  SR        l\n   8 │ GW_Armando_plate2_JE31G01     GW_Armando_plate2_JE31G01     VB_vi     v\n   9 │ GW_Armando_plate2_JF16G02     GW_Armando_plate2_JF16G02     DV_vi     p ⋯\n  10 │ GW_Armando_plate2_TTGW18      GW_Armando_plate2_TTGW18      TH        l\n  11 │ GW_Armando_plate2_TTGW20      GW_Armando_plate2_TTGW20      SR        l\n  ⋮  │              ⋮                             ⋮                   ⋮        ⋱\n  73 │ GW_Armando_plate1_JF12G01     GW_Armando_plate1_JF12G01     ST        p\n  74 │ GW_Armando_plate2_JF25G01     GW_Armando_plate2_JF25G01     VB        p ⋯\n  75 │ GW_Armando_plate2_JF26G02     GW_Armando_plate2_JF26G02     ST        p\n  76 │ GW_Armando_plate2_JG01G01     GW_Armando_plate2_JG01G01     PR        p\n  77 │ GW_Armando_plate2_JF11G02     GW_Armando_plate2_JF11G02     ST        p\n  78 │ GW_Armando_plate2_JF24G01     GW_Armando_plate2_JF24G01     VB        p ⋯\n  79 │ GW_Armando_plate1_JF09G02     GW_Armando_plate1_JF09G02     ST        p\n  80 │ GW_Armando_plate1_JG02G02     GW_Armando_plate1_JG02G02     PR        p\n  81 │ GW_Armando_plate2_JF14G02     GW_Armando_plate2_JF14G02     DV        p\n  82 │ GW_Armando_plate2_JG10G03     GW_Armando_plate2_JG10G03     ST        p ⋯\n                                                  27 columns and 61 rows omitted)\n\n\n\n\n\nShow just the west area (without nitidus)\n\nclusterNamesWithHetsWest = [\"virLud\",\n                        \"virLudHet\",\n                        \"virLud_trochObs\",\n                        \"trochObs\",\n                        \"trochObsHet\"]\n\nclusterColorsWithHetsWest = [\"blue\",\n                        \"blue\",\n                        \"yellowgreen\",\n                        \"yellow\",\n                        \"yellow\"]\n\n# limit the SNPs to those with variants greater than 50% in \n# at least one pop, and less than 50% in at least one pop.\n# (So for each column in `freqs`, the maximum should be &gt; 0.5 \n# and the minimum should be &lt; 0.5)\n# Calculate allele freqs and sample sizes\nfreqs, sampleSizes = getFreqsAndSampleSizes(genos_selectedSNPs, clusterMembershipWithHets, clusterNamesWithHetsWest)\nprintln(\"Calculated population allele frequencies and sample sizes\")\nselectedSNPs = (vec(maximum(freqs, dims=1)) .&gt; 0.5) .& (vec(minimum(freqs, dims=1)) .&lt; 0.5)\ngenos_selectedSNPs2 = genos_selectedSNPs[:, selectedSNPs]\npos_selectedSNPs2 = pos_selectedSNPs[selectedSNPs, :]\nfreqs_selectedSNPs2 = freqs[:, selectedSNPs]\n\nnumIndsToPlotWithHets = fill(100, length(clusterNamesWithHets))\n\ngenosForGBI, indMetadataforGBI = limitIndsToPlot(clusterNamesWithHetsWest, numIndsToPlotWithHets, \n                                            genos_selectedSNPs2, PCAmodelAll.metadata;\n                                            sortByMissing = true)\n\nplotGenotypeByIndividual(regionInfo, pos_selectedSNPs2,\n                genosForGBI, indMetadataforGBI, freqs_selectedSNPs2, clusterNamesWithHetsWest, clusterColorsWithHetsWest;\n                missingFractionAllowed = missingFractionAllowed,\n                indColorLeftProvided = false,\n                indColorRightProvided = true)\n\nCalculated population allele frequencies and sample sizes\n\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\n\n(Scene (768px, 960px):\n  0 Plots\n  2 Child Scenes:\n    ├ Scene (768px, 960px)\n    └ Scene (768px, 960px), Union{Missing, Int16}[0 0 … 0 0; 0 0 … 0 0; … ; 2 2 … 2 2; 2 2 … 2 2], [104795328, 104795382, 104897991, 104924031, 105304008, 105412338, 105418462, 105460577, 105631673, 105659380  …  107406780, 107426628, 107480270, 107822070, 107822104, 107920230, 108037413, 108050478, 108079656, 108089665], 182×30 DataFrame\n Row │ ind                           ID                            location  g ⋯\n     │ String                        String                        String7   S ⋯\n─────┼──────────────────────────────────────────────────────────────────────────\n   1 │ GW_Armando_plate1_AB1         GW_Armando_plate1_AB1         AB        v ⋯\n   2 │ GW_Armando_plate1_JF12G04     GW_Armando_plate1_JF12G04     ST_vi     v\n   3 │ GW_Armando_plate1_JF16G01     GW_Armando_plate1_JF16G01     DV_vi     p\n   4 │ GW_Armando_plate1_TL3         GW_Armando_plate1_TL3         TL        v\n   5 │ GW_Armando_plate1_TTGW06      GW_Armando_plate1_TTGW06      SU        l ⋯\n   6 │ GW_Armando_plate1_TTGW17      GW_Armando_plate1_TTGW17      TH        l\n   7 │ GW_Armando_plate1_TTGW57      GW_Armando_plate1_TTGW57      NG        l\n   8 │ GW_Armando_plate1_TTGW-15-08  GW_Armando_plate1_TTGW-15-08  SR        l\n   9 │ GW_Armando_plate2_JE31G01     GW_Armando_plate2_JE31G01     VB_vi     v ⋯\n  10 │ GW_Armando_plate2_JF16G02     GW_Armando_plate2_JF16G02     DV_vi     p\n  11 │ GW_Armando_plate2_TTGW18      GW_Armando_plate2_TTGW18      TH        l\n  ⋮  │              ⋮                             ⋮                   ⋮        ⋱\n 173 │ GW_Lane5_LN10                 GW_Lane5_LN10                 LN        t\n 174 │ GW_Lane5_LN19                 GW_Lane5_LN19                 LN        t ⋯\n 175 │ GW_Lane5_LN8                  GW_Lane5_LN8                  LN        t\n 176 │ GW_Lane5_MN9                  GW_Lane5_MN9                  MN        t\n 177 │ GW_Liz_GBS_Liz5190            GW_Liz_GBS_Liz5190            ML        l\n 178 │ GW_Lane5_MN1                  GW_Lane5_MN1                  MN        t ⋯\n 179 │ GW_Lane5_LN12                 GW_Lane5_LN12                 LN        t\n 180 │ GW_Armando_plate2_TTGW60      GW_Armando_plate2_TTGW60      SP        l\n 181 │ GW_Armando_plate2_TTGW73      GW_Armando_plate2_TTGW73      SA        l\n 182 │ GW_Liz_GBS_Liz5193            GW_Liz_GBS_Liz5193            ML        l ⋯\n                                                 27 columns and 161 rows omitted)\n\n\n\n\n\nShow just the east area\n\nclusterNamesWithHetsEast = [\"trochObs\",\n                            \"trochObsHet\",\n                            \"plumb\",\n                            \"plumbHet\"]\n\nclusterColorsWithHetsEast = [\"yellow\",\n                            \"yellow\",\n                            \"red\",\n                            \"red\"]\n\n# limit the SNPs to those with variants greater than 50% in \n# at least one pop, and less than 50% in at least one pop.\n# (So for each column in `freqs`, the maximum should be &gt; 0.5 \n# and the minimum should be &lt; 0.5)\n# Calculate allele freqs and sample sizes\nfreqs, sampleSizes = getFreqsAndSampleSizes(genos_selectedSNPs, clusterMembershipWithHets, clusterNamesWithHetsEast)\nprintln(\"Calculated population allele frequencies and sample sizes\")\nselectedSNPs = (vec(maximum(freqs, dims=1)) .&gt; 0.5) .& (vec(minimum(freqs, dims=1)) .&lt; 0.5)\ngenos_selectedSNPs2 = genos_selectedSNPs[:, selectedSNPs]\npos_selectedSNPs2 = pos_selectedSNPs[selectedSNPs, :]\nfreqs_selectedSNPs2 = freqs[:, selectedSNPs]\n\nnumIndsToPlotWithHetsEast = fill(100, length(clusterNamesWithHetsEast))\n\ngenosForGBI, indMetadataforGBI = limitIndsToPlot(clusterNamesWithHetsEast, numIndsToPlotWithHetsEast, \n                                            genos_selectedSNPs2, PCAmodelAll.metadata;\n                                            sortByMissing = true)\n\nplotGenotypeByIndividual(regionInfo, pos_selectedSNPs2,\n                genosForGBI, indMetadataforGBI, freqs_selectedSNPs2, clusterNamesWithHetsEast, clusterColorsWithHetsEast;\n                missingFractionAllowed = missingFractionAllowed,\n                indColorLeftProvided = false,\n                indColorRightProvided = true)\n\nCalculated population allele frequencies and sample sizes\n\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\n\n(Scene (768px, 960px):\n  0 Plots\n  2 Child Scenes:\n    ├ Scene (768px, 960px)\n    └ Scene (768px, 960px), Union{Missing, Int16}[0 0 … 0 0; 0 0 … 0 0; … ; 1 2 … 2 2; 1 2 … 2 2], [104582352, 104655357, 104864925, 104975314, 105059216, 105203277, 105386932, 105410394, 105596913, 105596914  …  107406686, 107406738, 107426628, 107480270, 107808537, 107822070, 107822104, 107920230, 108050478, 108089665], 145×30 DataFrame\n Row │ ind                        ID                         location  group   ⋯\n     │ String                     String                     String7   String1 ⋯\n─────┼──────────────────────────────────────────────────────────────────────────\n   1 │ GW_Armando_plate1_TTGW01   GW_Armando_plate1_TTGW01   MN        troch_M ⋯\n   2 │ GW_Armando_plate1_TTGW55   GW_Armando_plate1_TTGW55   NG        lud_Nai\n   3 │ GW_Armando_plate1_TTGW63   GW_Armando_plate1_TTGW63   SP        lud_Spi\n   4 │ GW_Armando_plate1_TTGW64   GW_Armando_plate1_TTGW64   SP        lud_Spi\n   5 │ GW_Armando_plate1_TTGW65   GW_Armando_plate1_TTGW65   SP        lud_Spi ⋯\n   6 │ GW_Armando_plate1_TTGW66   GW_Armando_plate1_TTGW66   SP        lud_Spi\n   7 │ GW_Armando_plate1_TTGW68   GW_Armando_plate1_TTGW68   SP        lud_Spi\n   8 │ GW_Armando_plate1_TTGW70   GW_Armando_plate1_TTGW70   SA        lud_Sat\n   9 │ GW_Armando_plate1_TTGW72   GW_Armando_plate1_TTGW72   SA        lud_Sat ⋯\n  10 │ GW_Armando_plate1_TTGW78   GW_Armando_plate1_TTGW78   SA        lud_Sat\n  11 │ GW_Armando_plate2_LN2      GW_Armando_plate2_LN2      LN        troch_L\n  ⋮  │             ⋮                          ⋮                 ⋮            ⋮ ⋱\n 136 │ GW_Lane5_AN1               GW_Lane5_AN1               AN        plumb\n 137 │ GW_Lane5_BK2               GW_Lane5_BK2               BK        plumb   ⋯\n 138 │ GW_Lane5_ST12              GW_Lane5_ST12              ST        plumb\n 139 │ GW_Armando_plate1_JF12G01  GW_Armando_plate1_JF12G01  ST        plumb\n 140 │ GW_Armando_plate2_JF25G01  GW_Armando_plate2_JF25G01  VB        plumb\n 141 │ GW_Armando_plate2_JF26G02  GW_Armando_plate2_JF26G02  ST        plumb   ⋯\n 142 │ GW_Armando_plate2_JG01G01  GW_Armando_plate2_JG01G01  PR        plumb\n 143 │ GW_Armando_plate1_JF09G02  GW_Armando_plate1_JF09G02  ST        plumb\n 144 │ GW_Armando_plate2_JF11G02  GW_Armando_plate2_JF11G02  ST        plumb\n 145 │ GW_Armando_plate2_JF24G01  GW_Armando_plate2_JF24G01  VB        plumb   ⋯\n                                                 27 columns and 124 rows omitted)\n\n\n\n\n\nShow just the northern area\n\nclusterNamesWithHetsNorth = [\"virLud\",\n                            \"virLudHet\",\n                            \"vir_plumb\",\n                            \"plumb\",\n                            \"plumbHet\"]\n\nclusterColorsWithHetsNorth = [\"blue\",\n                            \"blue\",\n                            \"purple\",\n                            \"red\",\n                            \"red\"]\n\n# limit the SNPs to those with variants greater than 50% in \n# at least one pop, and less than 50% in at least one pop.\n# (So for each column in `freqs`, the maximum should be &gt; 0.5 \n# and the minimum should be &lt; 0.5)\n# Calculate allele freqs and sample sizes\nfreqs, sampleSizes = getFreqsAndSampleSizes(genos_selectedSNPs, clusterMembershipWithHets, clusterNamesWithHetsNorth)\nprintln(\"Calculated population allele frequencies and sample sizes\")\nselectedSNPs = (vec(maximum(freqs, dims=1)) .&gt; 0.5) .& (vec(minimum(freqs, dims=1)) .&lt; 0.5)\ngenos_selectedSNPs2 = genos_selectedSNPs[:, selectedSNPs]\npos_selectedSNPs2 = pos_selectedSNPs[selectedSNPs, :]\nfreqs_selectedSNPs2 = freqs[:, selectedSNPs]\n\nnumIndsToPlotWithHets = fill(100, length(clusterNamesWithHetsNorth))\n\ngenosForGBI, indMetadataforGBI = limitIndsToPlot(clusterNamesWithHetsNorth, numIndsToPlotWithHets, \n                                            genos_selectedSNPs2, PCAmodelAll.metadata;\n                                            sortByMissing = true)\n\nplotGenotypeByIndividual(regionInfo, pos_selectedSNPs2,\n                genosForGBI, indMetadataforGBI, freqs_selectedSNPs2, clusterNamesWithHetsNorth, clusterColorsWithHetsNorth;\n                missingFractionAllowed = missingFractionAllowed,\n                indColorLeftProvided = false,\n                indColorRightProvided = true)\n\nCalculated population allele frequencies and sample sizes\n\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\n\n(Scene (768px, 960px):\n  0 Plots\n  2 Child Scenes:\n    ├ Scene (768px, 960px)\n    └ Scene (768px, 960px), Union{Missing, Int16}[0 0 … 0 0; 0 1 … 0 0; … ; 0 1 … 1 1; 0 1 … 1 1], [104582352, 104655357, 104795328, 104795382, 104864925, 104897991, 104924031, 104975314, 105059216, 105203277  …  106994418, 106994484, 107109035, 107109045, 107251168, 107406738, 107406780, 107808537, 108037413, 108079656], 144×30 DataFrame\n Row │ ind                           ID                            location  g ⋯\n     │ String                        String                        String7   S ⋯\n─────┼──────────────────────────────────────────────────────────────────────────\n   1 │ GW_Armando_plate1_AB1         GW_Armando_plate1_AB1         AB        v ⋯\n   2 │ GW_Armando_plate1_JF12G04     GW_Armando_plate1_JF12G04     ST_vi     v\n   3 │ GW_Armando_plate1_JF16G01     GW_Armando_plate1_JF16G01     DV_vi     p\n   4 │ GW_Armando_plate1_TTGW06      GW_Armando_plate1_TTGW06      SU        l\n   5 │ GW_Armando_plate1_TTGW17      GW_Armando_plate1_TTGW17      TH        l ⋯\n   6 │ GW_Armando_plate1_TTGW57      GW_Armando_plate1_TTGW57      NG        l\n   7 │ GW_Armando_plate1_TTGW-15-08  GW_Armando_plate1_TTGW-15-08  SR        l\n   8 │ GW_Armando_plate2_JE31G01     GW_Armando_plate2_JE31G01     VB_vi     v\n   9 │ GW_Armando_plate2_JF16G02     GW_Armando_plate2_JF16G02     DV_vi     p ⋯\n  10 │ GW_Armando_plate2_TTGW18      GW_Armando_plate2_TTGW18      TH        l\n  11 │ GW_Armando_plate2_TTGW20      GW_Armando_plate2_TTGW20      SR        l\n  ⋮  │              ⋮                             ⋮                   ⋮        ⋱\n 135 │ GW_Armando_plate1_JF12G01     GW_Armando_plate1_JF12G01     ST        p\n 136 │ GW_Armando_plate2_JF25G01     GW_Armando_plate2_JF25G01     VB        p ⋯\n 137 │ GW_Armando_plate2_JF26G02     GW_Armando_plate2_JF26G02     ST        p\n 138 │ GW_Armando_plate2_JG01G01     GW_Armando_plate2_JG01G01     PR        p\n 139 │ GW_Armando_plate1_JF09G02     GW_Armando_plate1_JF09G02     ST        p\n 140 │ GW_Armando_plate2_JF11G02     GW_Armando_plate2_JF11G02     ST        p ⋯\n 141 │ GW_Armando_plate2_JF24G01     GW_Armando_plate2_JF24G01     VB        p\n 142 │ GW_Armando_plate1_JG02G02     GW_Armando_plate1_JG02G02     PR        p\n 143 │ GW_Armando_plate2_JF14G02     GW_Armando_plate2_JF14G02     DV        p\n 144 │ GW_Armando_plate2_JG10G03     GW_Armando_plate2_JG10G03     ST        p ⋯\n                                                 27 columns and 123 rows omitted)",
    "crumbs": [
      "Home",
      "Greenish Warbler heterozygosity variance analysis"
    ]
  },
  {
    "objectID": "GW_Heterozygosity_Variance.html#same-for-chr-18",
    "href": "GW_Heterozygosity_Variance.html#same-for-chr-18",
    "title": "Greenish Warbler heterozygosity variance analysis",
    "section": "Same for chr 18",
    "text": "Same for chr 18\n\n# choose scaffold\nchr = \"gw18\"\n\npositionMin, positionMax, regionText, \n    windowedIndHetStanRegion, meanAcrossRegionIndHetStan,\n    genos_highViSHetRegion, pos_highViSHetRegion, regionInfo = \n    getWindowedIndHetStanRegion(genosOnly_included, \n                            pos_SNP_filtered, \n                            highViSHetRegions, chr;\n                            windowSize = 500)\n\n# inspect values for mean IndHetStan per individual for that high ViSHet region\nplot(meanAcrossRegionIndHetStan)\n\n# Add column to metadata containing the regionIndHetStan for this highHet region:\ncommand = \"ind_with_metadata_included.\" * chr * \"_regionIndHetStan = meanAcrossRegionIndHetStan\"\neval(Meta.parse(command)) # this executes the command constructed above\nind_with_metadata_included.regionIndHetStan = meanAcrossRegionIndHetStan\n\n#names(ind_with_metadata_included)\n\n# check whether missing data related to heterozygosity (good news: not really)\nplot(ind_with_metadata_included.numMissings, meanAcrossRegionIndHetStan)\n\n# PCA of all individuals:\n\ngenos_highViSHetRegion_imputed = Impute.svd(Matrix{Union{Missing, Float32}}(genos_highViSHetRegion))\n\nflipPC1 = true\nflipPC2 = true\n\nPCAmodelAll = plotPCA(genos_highViSHetRegion_imputed, ind_with_metadata_included, \n            groups_to_plot_PCA, group_colors_PCA; \n            sampleSet = \"greenish warblers\", regionText = regionText,\n            flip1 = flipPC1, flip2 = flipPC2,\n            lineOpacity = 0.7, fillOpacity = 0.6,\n            symbolSize = 14, showTitle = true,\n            xLabelText = string(\"Region PC1\"), yLabelText = string(\"Region PC2\"),\n            showPlot = false)\n\ndisplay(PCAmodelAll.PCAfig)\n\n# Add PC values to metadata for individuals included in PCA above:\nif flipPC1\n    PCAmodelAll.metadata.PC1 = -1 .* PCAmodelAll.values[1,:]\nelse \n    PCAmodelAll.metadata.PC1 = PCAmodelAll.values[1,:]\nend\nif flipPC2\n    PCAmodelAll.metadata.PC2 = -1 .* PCAmodelAll.values[2,:]\nelse\n    PCAmodelAll.metadata.PC2 = PCAmodelAll.values[2,:]\nend\nPCAmodelAll.metadata.PC3 = PCAmodelAll.values[3,:]\n\n# For the next bit to work with above, make sure that all individuals in the above `plotPCA` command\n# are included in the `groups_to_plot_PCA`\n\n# choose inds with low IndHet in high ViSHet region:\nindSelection_lowIndHetStan = (meanAcrossRegionIndHetStan .&lt; 1.55) \n\n#Plot only the lowIndHetStan individuals:\n\nf = CairoMakie.Figure();\nax = Axis(f[1, 1],\n    title = \"PC1 vs. PC2, only low heterozygosity\",\n    xlabel = \"Region PC1\", xlabelsize = 24,\n    ylabel = \"Region PC2\", ylabelsize = 24,\n    autolimitaspect = 1)\nhidedecorations!(ax, label = false, ticklabels = false, ticks = false) # hide background lattice\nfor i in eachindex(groups_to_plot_PCA) \n    selection = (PCAmodelAll.metadata.Fst_group .== groups_to_plot_PCA[i]) .& indSelection_lowIndHetStan\n    CairoMakie.scatter!(ax, PCAmodelAll.metadata.PC1[selection], PCAmodelAll.metadata.PC2[selection], marker = :diamond, color = (group_colors_PCA[i], 0.6), markersize = 14, strokewidth=0.5, strokecolor = (\"black\", 0.7))\nend\ndisplay(f)\n\nGood news: 1 region on that scaffold\n\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\nCairoMakie.Screen{IMAGE}\n\n\n\nSave the individual colors in the metadata\n\nindColors = fill(\"\", size(PCAmodelAll.metadata, 1))\nfor i in axes(PCAmodelAll.metadata, 1)\n    indColors[i] = group_colors_PCA[findfirst(groups_to_plot_PCA .== PCAmodelAll.metadata.Fst_group[i])]\nend\nPCAmodelAll.metadata.indColorLeft = indColors\nPCAmodelAll.metadata.indColorRight = indColors\n\n257-element Vector{String}:\n \"blue\"\n \"red\"\n \"red\"\n \"red\"\n \"red\"\n \"red\"\n \"red\"\n \"purple\"\n \"red\"\n \"red\"\n \"red\"\n \"blue\"\n \"red\"\n ⋮\n \"olivedrab2\"\n \"olivedrab2\"\n \"olivedrab2\"\n \"olivedrab2\"\n \"olivedrab2\"\n \"olivedrab2\"\n \"olivedrab2\"\n \"olivedrab2\"\n \"olivedrab2\"\n \"olivedrab2\"\n \"olivedrab2\"\n \"olivedrab2\"\n\n\n\n\nPlot PC1 vs. PC2:\n\nf = CairoMakie.Figure()\nax = Axis(f[1, 1],\n    title = \"PC1 vs. PC2\",\n    xlabel = \"Region PC1\", xlabelsize = 24,\n    ylabel = \"Region PC2\", ylabelsize = 24,\n    autolimitaspect = 1)\nhidedecorations!(ax, label = false, ticklabels = false, ticks = false) # hide background lattice\nfor i in eachindex(groups_to_plot_PCA) \n    selection = PCAmodelAll.metadata.Fst_group .== groups_to_plot_PCA[i]\n    CairoMakie.scatter!(ax, PCAmodelAll.metadata.PC1[selection], PCAmodelAll.metadata.PC2[selection], marker = :diamond, color = (group_colors_PCA[i], 0.6), markersize = 14, strokewidth=0.5, strokecolor = (\"black\", 0.7))\nend\ndisplay(f)\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\nCairoMakie.Screen{IMAGE}\n\n\n\n\nPlot PC1 vs. PC3:\n\nf = CairoMakie.Figure()\nax = Axis(f[1, 1],\n    title = \"PC1 vs. PC3\",\n    xlabel = \"Region PC1\", xlabelsize = 24,\n    ylabel = \"Region PC3\", ylabelsize = 24,\n    autolimitaspect = 1)\nhidedecorations!(ax, label = false, ticklabels = false, ticks = false) # hide background lattice\nfor i in eachindex(groups_to_plot_PCA) \n    selection = PCAmodelAll.metadata.Fst_group .== groups_to_plot_PCA[i]\n    CairoMakie.scatter!(ax, PCAmodelAll.metadata.PC1[selection], PCAmodelAll.metadata.PC3[selection], marker = :diamond, color = (group_colors_PCA[i], 0.6), markersize = 14, strokewidth=0.5, strokecolor = (\"black\", 0.7))\nend\ndisplay(f)\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\nCairoMakie.Screen{IMAGE}\n\n\n\n\nAt chr 18 high ViSHet region, there are 5 clear haplogroups (vir and lud separated though on PC3, though not clearly enough to indicate as different in summary plot). Divide samples into those groups, based on PCA scores, and then calculate pi within and pi between\n\nclusterNames = [\"virLud\",\n                \"nit\",\n                \"troch\",\n                \"obs\",\n                \"plumb\"]\n\nclusterColors = [\"blue\",\n                \"grey\",\n                \"yellow\",\n                \"orange\",\n                \"red\"]\n\nvirLud = (PCAmodelAll.metadata.PC1 .&lt; -7) .& \n            indSelection_lowIndHetStan\nnit = (-6 .&lt; PCAmodelAll.metadata.PC1 .&lt; -4) .&\n            indSelection_lowIndHetStan\ntroch = (2 .&lt; PCAmodelAll.metadata.PC1 .&lt; 5) .&\n            (PCAmodelAll.metadata.PC2 .&lt; -5) .&\n            indSelection_lowIndHetStan\nobs = (2 .&lt; PCAmodelAll.metadata.PC1 .&lt; 5) .&\n            (-5 .&lt; PCAmodelAll.metadata.PC2 .&lt; -2) .&\n            indSelection_lowIndHetStan\nplumb = (4 .&lt; PCAmodelAll.metadata.PC1) .& \n            (3 .&lt; PCAmodelAll.metadata.PC2) .&\n            indSelection_lowIndHetStan\n\n# check the individuals in each group\nPCAmodelAll.metadata.Fst_group[virLud]\nPCAmodelAll.metadata.Fst_group[nit]\nPCAmodelAll.metadata.Fst_group[troch]\nPCAmodelAll.metadata.Fst_group[obs]\nPCAmodelAll.metadata.Fst_group[plumb]\n\nclusterArray = [virLud nit troch obs plumb]\n\n# show numbers in each group\nprintln(\"The numbers in each group are $(sum(clusterArray, dims=1)) and the sum of those is $(sum(sum(clusterArray, dims=1)))\")\n\n# create vectors that indicate the groups and plot order for this analysis:\nclusterMembership = fill(\"none\", nrow(PCAmodelAll.metadata))\nplotOrder = fill(-9, nrow(PCAmodelAll.metadata))\nfor i in eachindex(clusterArray[1,:])\n    clusterMembership[clusterArray[:,i]] .= clusterNames[i]\n    plotOrder[clusterArray[:,i]] .= i\nend\n\n# Calculate allele freqs and sample sizes\nfreqs, sampleSizes = getFreqsAndSampleSizes(genos_highViSHetRegion, clusterMembership, clusterNames)\nprintln(\"Calculated population allele frequencies and sample sizes\")\n\n# Calculate per-site pi (within-group nucleotide distance)\n\nsitePi = getSitePi(freqs, sampleSizes)\n\n# calculate pairwise Dxy per site, using data in \"freqs\" and groups in \"groups\"\n\nDxy, pairwiseDxyClusterNames = getDxy(freqs, clusterNames)\n\nFst, FstNumerator, FstDenominator, pairwiseFstClusterNames = getFst(freqs, sampleSizes, clusterNames; among=false)  # set among to FALSE if no among Fst wanted (some things won't work without it) \n\n# Now get averages of pi and Dxy for whole region:\n\nregionPiTable = DataFrame(cluster = clusterNames, pi = getRegionPi(sitePi))\n#= 5×2 DataFrame\n Row │ cluster  pi         \n     │ String   Float64    \n─────┼─────────────────────\n   1 │ virLud   0.0110074\n   2 │ nit      0.00453689\n   3 │ troch    0.00973106\n   4 │ obs      0.0123218\n   5 │ plumb    0.00925472 =#\n\nregionDxyTable = DataFrame(cluster_pair = pairwiseDxyClusterNames, Dxy = getRegionDxy(Dxy))\n#= 10×2 DataFrame\n Row │ cluster_pair  Dxy       \n     │ String        Float64   \n─────┼─────────────────────────\n   1 │ virLud_nit    0.0263493\n   2 │ virLud_troch  0.0361335\n   3 │ virLud_obs    0.0359267\n   4 │ virLud_plumb  0.0395363\n   5 │ nit_troch     0.0371472\n   6 │ nit_obs       0.0377076\n   7 │ nit_plumb     0.0400618\n   8 │ troch_obs     0.0169656\n   9 │ troch_plumb   0.0287838\n  10 │ obs_plumb     0.0290661 =#\n\n# Make a genotype-by-individual plot using all variable loci in the region,\nmissingFractionAllowed = 0.1\n# in metadata, replace `Fst_group` column with cluster info (needed for the function below):\nPCAmodelAll.metadata.original_Fst_groups = PCAmodelAll.metadata.Fst_group # store the Fst_groups in this\nPCAmodelAll.metadata.Fst_group = clusterMembership\nPCAmodelAll.metadata.original_plot_order = PCAmodelAll.metadata.plot_order # store the original plot_order in this\nPCAmodelAll.metadata.plot_order = plotOrder\n\n# limit the SNPs to those with variants greater than 50% in \n# at least one pop, and less than 50% in at least one pop.\n# (So for each column in `freqs`, the maximum should be &gt; 0.5 \n# and the minimum should be &lt; 0.5)\nselectedSNPs = (vec(maximum(freqs, dims=1)) .&gt; 0.5) .& (vec(minimum(freqs, dims=1)) .&lt; 0.5)\ngenos_selectedSNPs = genos_highViSHetRegion[:, selectedSNPs]\npos_selectedSNPs = pos_highViSHetRegion[selectedSNPs, :]\nFst_selectedSNPs = Fst[:, selectedSNPs]\nfreqs_selectedSNPs = freqs[:, selectedSNPs]\n\n# limit the number of individuals per group to plot\nnumIndsToPlot = fill(15, length(clusterNames))\n\ngenosForGBI, indMetadataforGBI = limitIndsToPlot(clusterNames, numIndsToPlot, \n                                            genos_selectedSNPs, PCAmodelAll.metadata;\n                                            sortByMissing = true)\n\nplotGenotypeByIndividual(regionInfo, pos_selectedSNPs,\n                genosForGBI, indMetadataforGBI, freqs_selectedSNPs, clusterNames, clusterColors;\n                missingFractionAllowed = missingFractionAllowed,\n                indColorRightProvided = true)\n\nThe numbers in each group are [72 2 76 4 70] and the sum of those is 224\nCalculated population allele frequencies and sample sizes\n\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\n\n(Scene (768px, 960px):\n  0 Plots\n  2 Child Scenes:\n    ├ Scene (768px, 960px)\n    └ Scene (768px, 960px), Union{Missing, Int16}[0 0 … 0 0; 0 0 … 0 0; … ; 2 0 … 0 2; 2 0 … 0 2], [6108876, 6190195, 6293642, 6345626, 6386615, 6414325, 6414334, 6456723, 6456819, 6477300  …  8750639, 8750642, 8772183, 8773241, 8773281, 8773283, 8784596, 8797460, 8829892, 8833826], 51×32 DataFrame\n Row │ ind                           ID                            location  g ⋯\n     │ String                        String                        String7   S ⋯\n─────┼──────────────────────────────────────────────────────────────────────────\n   1 │ GW_Armando_plate1_AB1         GW_Armando_plate1_AB1         AB        v ⋯\n   2 │ GW_Armando_plate1_JF12G04     GW_Armando_plate1_JF12G04     ST_vi     v\n   3 │ GW_Armando_plate1_TTGW17      GW_Armando_plate1_TTGW17      TH        l\n   4 │ GW_Armando_plate1_TTGW29      GW_Armando_plate1_TTGW29      SR        l\n   5 │ GW_Armando_plate1_TTGW-15-07  GW_Armando_plate1_TTGW-15-07  SR        l ⋯\n   6 │ GW_Armando_plate1_TTGW-15-09  GW_Armando_plate1_TTGW-15-09  SR        l\n   7 │ GW_Armando_plate2_JE31G01     GW_Armando_plate2_JE31G01     VB_vi     v\n   8 │ GW_Armando_plate2_JF30G01     GW_Armando_plate2_JF30G01     ST_vi     v\n   9 │ GW_Armando_plate2_TTGW08      GW_Armando_plate2_TTGW08      SU        l ⋯\n  10 │ GW_Armando_plate2_TTGW12      GW_Armando_plate2_TTGW12      TH        l\n  11 │ GW_Armando_plate2_TTGW24      GW_Armando_plate2_TTGW24      SR        l\n  ⋮  │              ⋮                             ⋮                   ⋮        ⋱\n  42 │ GW_Armando_plate1_JF15G03     GW_Armando_plate1_JF15G03     DV        p\n  43 │ GW_Armando_plate1_JF20G01     GW_Armando_plate1_JF20G01     MB        p ⋯\n  44 │ GW_Armando_plate1_JF22G01     GW_Armando_plate1_JF22G01     MB        p\n  45 │ GW_Armando_plate1_JF23G01     GW_Armando_plate1_JF23G01     VB        p\n  46 │ GW_Armando_plate1_JF23G02     GW_Armando_plate1_JF23G02     VB        p\n  47 │ GW_Armando_plate1_JF24G02     GW_Armando_plate1_JF24G02     VB        p ⋯\n  48 │ GW_Armando_plate1_JF27G01     GW_Armando_plate1_JF27G01     ST        p\n  49 │ GW_Armando_plate1_JF29G01     GW_Armando_plate1_JF29G01     ST        p\n  50 │ GW_Armando_plate1_JF29G03     GW_Armando_plate1_JF29G03     ST        p\n  51 │ GW_Armando_plate1_JG02G02     GW_Armando_plate1_JG02G02     PR        p ⋯\n                                                  29 columns and 30 rows omitted)\n\n\n\n\n\nNow show a GBI plot like above, but with heterozygotes:\n\nclusterNamesWithHets = [\"virLud\",\n                        \"nit\",\n                        \"virLud_troch\",\n                        \"troch\",\n                        \"obs\",\n                        \"obs_plumb\",\n                        \"plumb\",\n                        \"vir_plumb\"]\n\nclusterColorsWithHets = [\"blue\",\n                        \"grey\",\n                        \"green\",\n                        \"yellow\",\n                        \"orange\",\n                        \"darkorange1\",\n                        \"red\",\n                        \"purple\"]\n\nvirLud_troch = (-5.5 .&lt; PCAmodelAll.metadata.PC1 .&lt; -0.5) .&\n                (-4 .&lt; PCAmodelAll.metadata.PC2 .&lt; -0.25) .&\n                 .!indSelection_lowIndHetStan\n#trochObsHet = (-2 .&lt; PCAmodelAll.metadata.PC1 .&lt; 2.5) .&\n            # (PCAmodelAll.metadata.PC2 .&lt; -3) .&\n            # .!indSelection_lowIndHetStan\nobs_plumb = (4 .&lt; PCAmodelAll.metadata.PC1 .&lt; 5) .& \n            (0 .&lt; PCAmodelAll.metadata.PC2 .&lt; 2) .&\n            .!indSelection_lowIndHetStan\nvir_plumb = (-3 .&lt; PCAmodelAll.metadata.PC1 .&lt; -1) .&\n                (2.5 .&lt; PCAmodelAll.metadata.PC2 .&lt; 5) .&\n                 .!indSelection_lowIndHetStan\n\nclusterArray = [virLud nit virLud_troch troch obs obs_plumb plumb vir_plumb]\n\nsum(clusterArray, dims=1)\n\nif sum(sum(clusterArray, dims=1)) == size(PCAmodelAll.metadata, 1)\n    println(\"Good news: Individuals included in a group matches total number of individuals\")\nelse \n    println(\"Warning: Individuals included in a group ($(sum(sum(clusterArray, dims=1)))) do NOT match total number of individuals ($(size(PCAmodelAll.metadata, 1)))\")\nend\n\n\n# check which individuals left out:\n\nsum(clusterArray, dims=2)\n\nPCAmodelAll.metadata.ind[vec(sum(clusterArray, dims=2) .== 0)]\nPCAmodelAll.metadata.PC1[vec(sum(clusterArray, dims=2) .== 0)]\nPCAmodelAll.metadata.PC2[vec(sum(clusterArray, dims=2) .== 0)]\nindSelection_lowIndHetStan[vec(sum(clusterArray, dims=2) .== 0)]\n\n# create vectors that indicate the groups and plot order for this analysis:\nclusterMembershipWithHets = fill(\"none\", nrow(PCAmodelAll.metadata))\nplotOrderWithHets = fill(-9, nrow(PCAmodelAll.metadata))\nfor i in eachindex(clusterArray[1,:])\n    clusterMembershipWithHets[clusterArray[:,i]] .= clusterNamesWithHets[i]\n    plotOrderWithHets[clusterArray[:,i]] .= i\nend\n\n# Add column to main metadata object containing the cluster membership for this highHet region:\ncommand = \"ind_with_metadata_included.\" * chr * \"_cluster = clusterMembershipWithHets\"\neval(Meta.parse(command)) # this executes the command constructed above\n\n# in metadata, replace `Fst_group` column with cluster info (needed for the function below):\nPCAmodelAll.metadata.Fst_group = clusterMembershipWithHets\nPCAmodelAll.metadata.plot_order = plotOrderWithHets\n\n# limit the number of individuals per group to plot\nnumIndsToPlotWithHets = fill(15, length(clusterNamesWithHets))\n\ngenosForGBI, indMetadataforGBI = limitIndsToPlot(clusterNamesWithHets, numIndsToPlotWithHets, \n                                            genos_selectedSNPs, PCAmodelAll.metadata;\n                                            sortByMissing = true)\n\nplotGenotypeByIndividual(regionInfo, pos_selectedSNPs,\n                genosForGBI, indMetadataforGBI, freqs_selectedSNPs, clusterNamesWithHets, clusterColorsWithHets;\n                missingFractionAllowed = missingFractionAllowed,\n                indColorLeftProvided = false,\n                indColorRightProvided = true)\n\nGood news: Individuals included in a group matches total number of individuals\n\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\n\n(Scene (768px, 960px):\n  0 Plots\n  2 Child Scenes:\n    ├ Scene (768px, 960px)\n    └ Scene (768px, 960px), Union{Missing, Int16}[0 0 … 0 0; 0 0 … 0 0; … ; 1 0 … 0 1; 1 0 … 0 -99], [6108876, 6190195, 6293642, 6345626, 6386615, 6414325, 6414334, 6456723, 6456819, 6477300  …  8750639, 8750642, 8772183, 8773241, 8773281, 8773283, 8784596, 8797460, 8829892, 8833826], 70×32 DataFrame\n Row │ ind                           ID                            location  g ⋯\n     │ String                        String                        String7   S ⋯\n─────┼──────────────────────────────────────────────────────────────────────────\n   1 │ GW_Armando_plate1_AB1         GW_Armando_plate1_AB1         AB        v ⋯\n   2 │ GW_Armando_plate1_JF12G04     GW_Armando_plate1_JF12G04     ST_vi     v\n   3 │ GW_Armando_plate1_TTGW17      GW_Armando_plate1_TTGW17      TH        l\n   4 │ GW_Armando_plate1_TTGW29      GW_Armando_plate1_TTGW29      SR        l\n   5 │ GW_Armando_plate1_TTGW-15-07  GW_Armando_plate1_TTGW-15-07  SR        l ⋯\n   6 │ GW_Armando_plate1_TTGW-15-09  GW_Armando_plate1_TTGW-15-09  SR        l\n   7 │ GW_Armando_plate2_JE31G01     GW_Armando_plate2_JE31G01     VB_vi     v\n   8 │ GW_Armando_plate2_JF30G01     GW_Armando_plate2_JF30G01     ST_vi     v\n   9 │ GW_Armando_plate2_TTGW08      GW_Armando_plate2_TTGW08      SU        l ⋯\n  10 │ GW_Armando_plate2_TTGW12      GW_Armando_plate2_TTGW12      TH        l\n  11 │ GW_Armando_plate2_TTGW24      GW_Armando_plate2_TTGW24      SR        l\n  ⋮  │              ⋮                             ⋮                   ⋮        ⋱\n  61 │ GW_Armando_plate1_JF23G01     GW_Armando_plate1_JF23G01     VB        p\n  62 │ GW_Armando_plate1_JF23G02     GW_Armando_plate1_JF23G02     VB        p ⋯\n  63 │ GW_Armando_plate1_JF24G02     GW_Armando_plate1_JF24G02     VB        p\n  64 │ GW_Armando_plate1_JF27G01     GW_Armando_plate1_JF27G01     ST        p\n  65 │ GW_Armando_plate1_JF29G01     GW_Armando_plate1_JF29G01     ST        p\n  66 │ GW_Armando_plate1_JF29G03     GW_Armando_plate1_JF29G03     ST        p ⋯\n  67 │ GW_Armando_plate1_JG02G02     GW_Armando_plate1_JG02G02     PR        p\n  68 │ GW_Armando_plate2_JF13G02     GW_Armando_plate2_JF13G02     ST        p\n  69 │ GW_Armando_plate1_JF08G02     GW_Armando_plate1_JF08G02     ST        p\n  70 │ GW_Lane5_UY4                  GW_Lane5_UY4                  UY        p ⋯\n                                                  29 columns and 49 rows omitted)\n\n\n\n\n\nshow GBI plot according to original groups and plot order\n\nPCAmodelAll.metadata.plot_order = PCAmodelAll.metadata.original_plot_order\n\ngenosForGBI, indMetadataforGBI = limitIndsToPlot(clusterNamesWithHets, numIndsToPlotWithHets, \n                                            genos_selectedSNPs, PCAmodelAll.metadata;\n                                            sortByMissing = true)\n\nplotGenotypeByIndividual(regionInfo, pos_selectedSNPs,\n                genosForGBI, indMetadataforGBI, freqs_selectedSNPs, clusterNamesWithHets, clusterColorsWithHets;\n                missingFractionAllowed = missingFractionAllowed,\n                indColorLeftProvided = false,\n                indColorRightProvided = true)\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\n\n(Scene (768px, 960px):\n  0 Plots\n  2 Child Scenes:\n    ├ Scene (768px, 960px)\n    └ Scene (768px, 960px), Union{Missing, Int16}[0 0 … 0 0; 0 0 … 0 0; … ; 2 0 … 0 2; 2 0 … 0 2], [6108876, 6190195, 6293642, 6345626, 6386615, 6414325, 6414334, 6456723, 6456819, 6477300  …  8750639, 8750642, 8772183, 8773241, 8773281, 8773283, 8784596, 8797460, 8829892, 8833826], 70×32 DataFrame\n Row │ ind                           ID                            location  g ⋯\n     │ String                        String                        String7   S ⋯\n─────┼──────────────────────────────────────────────────────────────────────────\n   1 │ GW_Armando_plate1_JF12G04     GW_Armando_plate1_JF12G04     ST_vi     v ⋯\n   2 │ GW_Armando_plate2_JF30G01     GW_Armando_plate2_JF30G01     ST_vi     v\n   3 │ GW_Armando_plate2_JE31G01     GW_Armando_plate2_JE31G01     VB_vi     v\n   4 │ GW_Armando_plate1_AB1         GW_Armando_plate1_AB1         AB        v\n   5 │ GW_Lane5_TU2                  GW_Lane5_TU2                  TU        n ⋯\n   6 │ GW_Lane5_TU1                  GW_Lane5_TU1                  TU        n\n   7 │ GW_Armando_plate1_TTGW70      GW_Armando_plate1_TTGW70      SA        l\n   8 │ GW_Armando_plate1_TTGW72      GW_Armando_plate1_TTGW72      SA        l\n   9 │ GW_Armando_plate2_TTGW73      GW_Armando_plate2_TTGW73      SA        l ⋯\n  10 │ GW_Armando_plate2_TTGW75      GW_Armando_plate2_TTGW75      SA        l\n  11 │ GW_Armando_plate1_TTGW29      GW_Armando_plate1_TTGW29      SR        l\n  ⋮  │              ⋮                             ⋮                   ⋮        ⋱\n  61 │ GW_Armando_plate1_JF27G01     GW_Armando_plate1_JF27G01     ST        p\n  62 │ GW_Armando_plate1_JF29G01     GW_Armando_plate1_JF29G01     ST        p ⋯\n  63 │ GW_Armando_plate1_JF29G03     GW_Armando_plate1_JF29G03     ST        p\n  64 │ GW_Armando_plate2_JF13G02     GW_Armando_plate2_JF13G02     ST        p\n  65 │ GW_Armando_plate1_JF08G02     GW_Armando_plate1_JF08G02     ST        p\n  66 │ GW_Armando_plate1_JF15G03     GW_Armando_plate1_JF15G03     DV        p ⋯\n  67 │ GW_Armando_plate1_JF23G01     GW_Armando_plate1_JF23G01     VB        p\n  68 │ GW_Armando_plate1_JF23G02     GW_Armando_plate1_JF23G02     VB        p\n  69 │ GW_Armando_plate1_JF24G02     GW_Armando_plate1_JF24G02     VB        p\n  70 │ GW_Armando_plate1_JG02G02     GW_Armando_plate1_JG02G02     PR        p ⋯\n                                                  29 columns and 49 rows omitted)\n\n\n\n\n\nshow same but with all individuals\n\nPCAmodelAll.metadata.plot_order = PCAmodelAll.metadata.original_plot_order\n\n# Set no limit (or high limit anyway) on the number of individuals per group to plot\nnumIndsToPlotWithHets = fill(1000, length(clusterNamesWithHets))\n\ngenosForGBI, indMetadataforGBI = limitIndsToPlot(clusterNamesWithHets, numIndsToPlotWithHets, \n                                            genos_selectedSNPs, PCAmodelAll.metadata;\n                                            sortByMissing = true)\n\nplotGenotypeByIndividual(regionInfo, pos_selectedSNPs,\n                genosForGBI, indMetadataforGBI, freqs_selectedSNPs, clusterNamesWithHets, clusterColorsWithHets;\n                missingFractionAllowed = missingFractionAllowed,\n                indColorLeftProvided = false,\n                indColorRightProvided = true)\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\n\n(Scene (768px, 960px):\n  0 Plots\n  2 Child Scenes:\n    ├ Scene (768px, 960px)\n    └ Scene (768px, 960px), Union{Missing, Int16}[0 0 … 0 0; 0 0 … 0 0; … ; 2 0 … 0 2; 2 0 … 0 2], [6108876, 6190195, 6293642, 6345626, 6386615, 6414325, 6414334, 6456723, 6456819, 6477300  …  8750639, 8750642, 8772183, 8773241, 8773281, 8773283, 8784596, 8797460, 8829892, 8833826], 257×32 DataFrame\n Row │ ind                        ID                         location  group   ⋯\n     │ String                     String                     String7   String1 ⋯\n─────┼──────────────────────────────────────────────────────────────────────────\n   1 │ GW_Armando_plate1_JF12G04  GW_Armando_plate1_JF12G04  ST_vi     vir     ⋯\n   2 │ GW_Armando_plate2_JF30G01  GW_Armando_plate2_JF30G01  ST_vi     vir_mis\n   3 │ GW_Armando_plate2_JF03G01  GW_Armando_plate2_JF03G01  ST_vi     vir_mis\n   4 │ GW_Lane5_STvi3             GW_Lane5_STvi3             ST_vi     vir\n   5 │ GW_Lane5_STvi1             GW_Lane5_STvi1             ST_vi     vir     ⋯\n   6 │ GW_Lane5_STvi2             GW_Lane5_STvi2             ST_vi     vir\n   7 │ GW_Armando_plate2_JF16G02  GW_Armando_plate2_JF16G02  DV_vi     plumb_v\n   8 │ GW_Armando_plate1_JF16G01  GW_Armando_plate1_JF16G01  DV_vi     plumb_v\n   9 │ GW_Armando_plate2_JE31G01  GW_Armando_plate2_JE31G01  VB_vi     vir_mis ⋯\n  10 │ GW_Armando_plate2_JF03G02  GW_Armando_plate2_JF03G02  VB_vi     vir_mis\n  11 │ GW_Lane5_YK7               GW_Lane5_YK7               YK        vir\n  ⋮  │             ⋮                          ⋮                 ⋮          ⋮   ⋱\n 248 │ GW_Armando_plate2_JF24G01  GW_Armando_plate2_JF24G01  VB        plumb\n 249 │ GW_Armando_plate2_JF25G01  GW_Armando_plate2_JF25G01  VB        plumb   ⋯\n 250 │ GW_Armando_plate1_JG02G02  GW_Armando_plate1_JG02G02  PR        plumb\n 251 │ GW_Armando_plate2_JG01G01  GW_Armando_plate2_JG01G01  PR        plumb\n 252 │ GW_Armando_plate2_JG02G03  GW_Armando_plate2_JG02G03  PR        plumb\n 253 │ GW_Armando_plate1_JG02G04  GW_Armando_plate1_JG02G04  PR        plumb   ⋯\n 254 │ GW_Armando_plate2_JG02G01  GW_Armando_plate2_JG02G01  PR        plumb\n 255 │ GW_Lane5_SL1               GW_Lane5_SL1               SL        plumb\n 256 │ GW_Lane5_SL2               GW_Lane5_SL2               SL        plumb\n 257 │ GW_Armando_plate1_JF10G03  GW_Armando_plate1_JF10G03  ST        plumb_v ⋯\n                                                 29 columns and 236 rows omitted)\n\n\n\n\n\nshow same but with only vir and plumb pops\n\nincludeTheseClusters = [\"virLud\", \"plumb\"] # these are the haplotype clusters to include in the choice below of SNPs to show\n\n# Calculate allele freqs and sample sizes\nfreqs_local, sampleSizes_local = getFreqsAndSampleSizes(genos_selectedSNPs, clusterMembership, includeTheseClusters)\n\n# limit the SNPs to those with variants greater than 50% in \n# at least one pop, and less than 50% in at least one pop.\n# (So for each column in `freqs`, the maximum should be &gt; 0.5 \n# and the minimum should be &lt; 0.5)\nselectedSNPs = (vec(maximum(freqs_local, dims=1)) .&gt; 0.5) .& (vec(minimum(freqs_local, dims=1)) .&lt; 0.5)\ngenosForGBI = genos_selectedSNPs[:, selectedSNPs]\nposForGBI = pos_selectedSNPs[selectedSNPs, :]\nfreqsForGBI = freqs_local[:, selectedSNPs]\n\nplotGroups = [\"vir\", \"plumb\", \"plumb_vir\"] # these are the original Fst_groups\nplotGroupColors = [\"blue\", \"red\", \"purple\"]\n\nmetadataForGBI = copy(PCAmodelAll.metadata)\n\nmetadataForGBI.Fst_group = metadataForGBI.original_Fst_groups\n\nplotGenotypeByIndividual(regionInfo, posForGBI,\n                genosForGBI, metadataForGBI, freqsForGBI, plotGroups, plotGroupColors;\n                missingFractionAllowed = missingFractionAllowed)\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\n\n(Scene (768px, 960px):\n  0 Plots\n  2 Child Scenes:\n    ├ Scene (768px, 960px)\n    └ Scene (768px, 960px), Union{Missing, Int16}[0 0 … 0 0; 0 0 … 0 0; … ; 2 2 … 0 2; 2 2 … 1 2], [6108876, 6293642, 6414325, 6456723, 6456819, 6477300, 6631300, 6812016, 6812064, 6838561  …  8668147, 8681264, 8750618, 8750639, 8750642, 8772183, 8773241, 8773281, 8784596, 8833826], 100×32 DataFrame\n Row │ ind                        ID                         location  group   ⋯\n     │ String                     String                     String7   String1 ⋯\n─────┼──────────────────────────────────────────────────────────────────────────\n   1 │ GW_Armando_plate1_JF12G04  GW_Armando_plate1_JF12G04  ST_vi     vir     ⋯\n   2 │ GW_Armando_plate2_JF03G01  GW_Armando_plate2_JF03G01  ST_vi     vir_mis\n   3 │ GW_Armando_plate2_JF30G01  GW_Armando_plate2_JF30G01  ST_vi     vir_mis\n   4 │ GW_Lane5_STvi1             GW_Lane5_STvi1             ST_vi     vir\n   5 │ GW_Lane5_STvi2             GW_Lane5_STvi2             ST_vi     vir     ⋯\n   6 │ GW_Lane5_STvi3             GW_Lane5_STvi3             ST_vi     vir\n   7 │ GW_Armando_plate1_JF16G01  GW_Armando_plate1_JF16G01  DV_vi     plumb_v\n   8 │ GW_Armando_plate2_JF16G02  GW_Armando_plate2_JF16G02  DV_vi     plumb_v\n   9 │ GW_Armando_plate2_JE31G01  GW_Armando_plate2_JE31G01  VB_vi     vir_mis ⋯\n  10 │ GW_Armando_plate2_JF03G02  GW_Armando_plate2_JF03G02  VB_vi     vir_mis\n  11 │ GW_Lane5_YK11              GW_Lane5_YK11              YK        vir\n  ⋮  │             ⋮                          ⋮                 ⋮          ⋮   ⋱\n  91 │ GW_Armando_plate2_JF24G01  GW_Armando_plate2_JF24G01  VB        plumb\n  92 │ GW_Armando_plate2_JF25G01  GW_Armando_plate2_JF25G01  VB        plumb   ⋯\n  93 │ GW_Armando_plate1_JG02G02  GW_Armando_plate1_JG02G02  PR        plumb\n  94 │ GW_Armando_plate1_JG02G04  GW_Armando_plate1_JG02G04  PR        plumb\n  95 │ GW_Armando_plate2_JG01G01  GW_Armando_plate2_JG01G01  PR        plumb\n  96 │ GW_Armando_plate2_JG02G01  GW_Armando_plate2_JG02G01  PR        plumb   ⋯\n  97 │ GW_Armando_plate2_JG02G03  GW_Armando_plate2_JG02G03  PR        plumb\n  98 │ GW_Lane5_SL1               GW_Lane5_SL1               SL        plumb\n  99 │ GW_Lane5_SL2               GW_Lane5_SL2               SL        plumb\n 100 │ GW_Armando_plate1_JF10G03  GW_Armando_plate1_JF10G03  ST        plumb_v ⋯\n                                                  29 columns and 79 rows omitted)\n\n\n\n\n\nShow just the west area (without nitidus)\n\nclusterNamesWithHetsWest = [\"virLud\",\n                        \"virLud_troch\",\n                        \"troch\"]\n\nclusterColorsWithHetsWest = [\"blue\",\n                        \"green\",\n                        \"yellow\"]\n\n# limit the SNPs to those with variants greater than 50% in \n# at least one pop, and less than 50% in at least one pop.\n# (So for each column in `freqs`, the maximum should be &gt; 0.5 \n# and the minimum should be &lt; 0.5)\n# Calculate allele freqs and sample sizes\nfreqs, sampleSizes = getFreqsAndSampleSizes(genos_selectedSNPs, clusterMembershipWithHets, clusterNamesWithHetsWest)\nprintln(\"Calculated population allele frequencies and sample sizes\")\nselectedSNPs = (vec(maximum(freqs, dims=1)) .&gt; 0.5) .& (vec(minimum(freqs, dims=1)) .&lt; 0.5)\ngenos_selectedSNPs2 = genos_selectedSNPs[:, selectedSNPs]\npos_selectedSNPs2 = pos_selectedSNPs[selectedSNPs, :]\nfreqs_selectedSNPs2 = freqs[:, selectedSNPs]\n\nnumIndsToPlotWithHets = fill(100, length(clusterNamesWithHetsWest))\n\ngenosForGBI, indMetadataforGBI = limitIndsToPlot(clusterNamesWithHetsWest, numIndsToPlotWithHets, \n                                            genos_selectedSNPs2, PCAmodelAll.metadata;\n                                            sortByMissing = true)\n\nplotGenotypeByIndividual(regionInfo, pos_selectedSNPs2,\n                genosForGBI, indMetadataforGBI, freqs_selectedSNPs2, clusterNamesWithHetsWest, clusterColorsWithHetsWest;\n                missingFractionAllowed = missingFractionAllowed,\n                indColorLeftProvided = false,\n                indColorRightProvided = true)\n\nCalculated population allele frequencies and sample sizes\n\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\n\n(Scene (768px, 960px):\n  0 Plots\n  2 Child Scenes:\n    ├ Scene (768px, 960px)\n    └ Scene (768px, 960px), Union{Missing, Int16}[0 0 … 0 0; 0 0 … 0 0; … ; 2 2 … 1 2; 2 2 … 2 2], [6108876, 6414325, 6414334, 6456723, 6485917, 6812016, 6812064, 6838561, 6838565, 6945805  …  8647967, 8661608, 8668147, 8681264, 8681284, 8750618, 8750639, 8750642, 8797460, 8829892], 177×32 DataFrame\n Row │ ind                        ID                         location  group   ⋯\n     │ String                     String                     String7   String1 ⋯\n─────┼──────────────────────────────────────────────────────────────────────────\n   1 │ GW_Armando_plate1_JF12G04  GW_Armando_plate1_JF12G04  ST_vi     vir     ⋯\n   2 │ GW_Armando_plate2_JF30G01  GW_Armando_plate2_JF30G01  ST_vi     vir_mis\n   3 │ GW_Armando_plate2_JF03G01  GW_Armando_plate2_JF03G01  ST_vi     vir_mis\n   4 │ GW_Lane5_STvi3             GW_Lane5_STvi3             ST_vi     vir\n   5 │ GW_Lane5_STvi2             GW_Lane5_STvi2             ST_vi     vir     ⋯\n   6 │ GW_Lane5_STvi1             GW_Lane5_STvi1             ST_vi     vir\n   7 │ GW_Armando_plate2_JF16G02  GW_Armando_plate2_JF16G02  DV_vi     plumb_v\n   8 │ GW_Armando_plate1_JF16G01  GW_Armando_plate1_JF16G01  DV_vi     plumb_v\n   9 │ GW_Armando_plate2_JE31G01  GW_Armando_plate2_JE31G01  VB_vi     vir_mis ⋯\n  10 │ GW_Armando_plate2_JF03G02  GW_Armando_plate2_JF03G02  VB_vi     vir_mis\n  11 │ GW_Lane5_YK7               GW_Lane5_YK7               YK        vir\n  ⋮  │             ⋮                          ⋮                 ⋮          ⋮   ⋱\n 168 │ GW_Lane5_LN8               GW_Lane5_LN8               LN        troch_L\n 169 │ GW_Armando_plate2_LN2      GW_Armando_plate2_LN2      LN        troch_L ⋯\n 170 │ GW_Lane5_LN12              GW_Lane5_LN12              LN        troch_L\n 171 │ GW_Lane5_LN14              GW_Lane5_LN14              LN        troch_L\n 172 │ GW_Lane5_LN16              GW_Lane5_LN16              LN        troch_L\n 173 │ GW_Lane5_LN19              GW_Lane5_LN19              LN        troch_L ⋯\n 174 │ GW_Lane5_LN3               GW_Lane5_LN3               LN        troch_L\n 175 │ GW_Lane5_LN4               GW_Lane5_LN4               LN        troch_L\n 176 │ GW_Lane5_LN1               GW_Lane5_LN1               LN        troch_L\n 177 │ GW_Lane5_LN20              GW_Lane5_LN20              LN        troch_L ⋯\n                                                 29 columns and 156 rows omitted)\n\n\n\n\n\nShow just the east area\n\nclusterNamesWithHetsEast = [\"obs\",\n                            \"obs_plumb\",\n                            \"plumb\"]\n\nclusterColorsWithHetsEast = [\"yellow\",\n                            \"darkorange1\",\n                            \"red\"]\n\n# limit the SNPs to those with variants greater than 50% in \n# at least one pop, and less than 50% in at least one pop.\n# (So for each column in `freqs`, the maximum should be &gt; 0.5 \n# and the minimum should be &lt; 0.5)\n# Calculate allele freqs and sample sizes\nfreqs, sampleSizes = getFreqsAndSampleSizes(genos_selectedSNPs, clusterMembershipWithHets, clusterNamesWithHetsEast)\nprintln(\"Calculated population allele frequencies and sample sizes\")\nselectedSNPs = (vec(maximum(freqs, dims=1)) .&gt; 0.5) .& (vec(minimum(freqs, dims=1)) .&lt; 0.5)\ngenos_selectedSNPs2 = genos_selectedSNPs[:, selectedSNPs]\npos_selectedSNPs2 = pos_selectedSNPs[selectedSNPs, :]\nfreqs_selectedSNPs2 = freqs[:, selectedSNPs]\n\nnumIndsToPlotWithHetsEast = fill(100, length(clusterNamesWithHetsEast))\n\ngenosForGBI, indMetadataforGBI = limitIndsToPlot(clusterNamesWithHetsEast, numIndsToPlotWithHetsEast, \n                                            genos_selectedSNPs2, PCAmodelAll.metadata;\n                                            sortByMissing = true)\n\nplotGenotypeByIndividual(regionInfo, pos_selectedSNPs2,\n                genosForGBI, indMetadataforGBI, freqs_selectedSNPs2, clusterNamesWithHetsEast, clusterColorsWithHetsEast;\n                missingFractionAllowed = missingFractionAllowed,\n                indColorLeftProvided = false,\n                indColorRightProvided = true)\n\nCalculated population allele frequencies and sample sizes\n\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\n\n(Scene (768px, 960px):\n  0 Plots\n  2 Child Scenes:\n    ├ Scene (768px, 960px)\n    └ Scene (768px, 960px), Union{Missing, Int16}[0 0 … 0 0; 0 0 … 0 1; … ; 2 2 … 2 2; 2 2 … 2 2], [6293642, 6414334, 6456819, 6477300, 6485917, 6631300, 6812081, 7047936, 7172541, 7435797  …  8636680, 8643165, 8661565, 8739750, 8772183, 8773241, 8773281, 8784596, 8829892, 8833826], 75×32 DataFrame\n Row │ ind                        ID                         location  group   ⋯\n     │ String                     String                     String7   String1 ⋯\n─────┼──────────────────────────────────────────────────────────────────────────\n   1 │ GW_Lane5_EM1               GW_Lane5_EM1               EM        troch_E ⋯\n   2 │ GW_Lane5_DA4               GW_Lane5_DA4               XN        obs\n   3 │ GW_Lane5_DA7               GW_Lane5_DA7               XN        obs\n   4 │ GW_Lane5_DA2               GW_Lane5_DA2               XN        obs\n   5 │ GW_Lane5_DA3               GW_Lane5_DA3               XN        obs     ⋯\n   6 │ GW_Armando_plate1_RF20G01  GW_Armando_plate1_RF20G01  BJ        obs_plu\n   7 │ GW_Armando_plate1_RF29G02  GW_Armando_plate1_RF29G02  BJ        obs_plu\n   8 │ GW_Armando_plate2_RF29G01  GW_Armando_plate2_RF29G01  BJ        obs_plu\n   9 │ GW_Lane5_BK2               GW_Lane5_BK2               BK        plumb   ⋯\n  10 │ GW_Lane5_BK3               GW_Lane5_BK3               BK        plumb\n  11 │ GW_Lane5_AN2               GW_Lane5_AN2               AN        plumb\n  ⋮  │             ⋮                          ⋮                 ⋮          ⋮   ⋱\n  66 │ GW_Armando_plate2_JF24G01  GW_Armando_plate2_JF24G01  VB        plumb\n  67 │ GW_Armando_plate2_JF25G01  GW_Armando_plate2_JF25G01  VB        plumb   ⋯\n  68 │ GW_Armando_plate1_JG02G02  GW_Armando_plate1_JG02G02  PR        plumb\n  69 │ GW_Armando_plate1_JG02G04  GW_Armando_plate1_JG02G04  PR        plumb\n  70 │ GW_Armando_plate2_JG02G01  GW_Armando_plate2_JG02G01  PR        plumb\n  71 │ GW_Armando_plate2_JG02G03  GW_Armando_plate2_JG02G03  PR        plumb   ⋯\n  72 │ GW_Armando_plate2_JG01G01  GW_Armando_plate2_JG01G01  PR        plumb\n  73 │ GW_Lane5_SL1               GW_Lane5_SL1               SL        plumb\n  74 │ GW_Lane5_SL2               GW_Lane5_SL2               SL        plumb\n  75 │ GW_Armando_plate1_JF10G03  GW_Armando_plate1_JF10G03  ST        plumb_v ⋯\n                                                  29 columns and 54 rows omitted)\n\n\n\n\n\nShow just the northern area\n\nclusterNamesWithHetsNorth = [\"virLud\",\n                            \"vir_plumb\",\n                            \"plumb\"]\n\nclusterColorsWithHetsNorth = [\"blue\",\n                            \"purple\",\n                            \"red\"]\n\n# limit the SNPs to those with variants greater than 50% in \n# at least one pop, and less than 50% in at least one pop.\n# (So for each column in `freqs`, the maximum should be &gt; 0.5 \n# and the minimum should be &lt; 0.5)\n# Calculate allele freqs and sample sizes\nfreqs, sampleSizes = getFreqsAndSampleSizes(genos_selectedSNPs, clusterMembershipWithHets, clusterNamesWithHetsNorth)\nprintln(\"Calculated population allele frequencies and sample sizes\")\nselectedSNPs = (vec(maximum(freqs, dims=1)) .&gt; 0.5) .& (vec(minimum(freqs, dims=1)) .&lt; 0.5)\ngenos_selectedSNPs2 = genos_selectedSNPs[:, selectedSNPs]\npos_selectedSNPs2 = pos_selectedSNPs[selectedSNPs, :]\nfreqs_selectedSNPs2 = freqs[:, selectedSNPs]\n\nnumIndsToPlotWithHets = fill(100, length(clusterNamesWithHetsNorth))\n\ngenosForGBI, indMetadataforGBI = limitIndsToPlot(clusterNamesWithHetsNorth, numIndsToPlotWithHets, \n                                            genos_selectedSNPs2, PCAmodelAll.metadata;\n                                            sortByMissing = true)\n\nplotGenotypeByIndividual(regionInfo, pos_selectedSNPs2,\n                genosForGBI, indMetadataforGBI, freqs_selectedSNPs2, clusterNamesWithHetsNorth, clusterColorsWithHetsNorth;\n                missingFractionAllowed = missingFractionAllowed,\n                indColorLeftProvided = false,\n                indColorRightProvided = true)\n\nCalculated population allele frequencies and sample sizes\n\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\n\n(Scene (768px, 960px):\n  0 Plots\n  2 Child Scenes:\n    ├ Scene (768px, 960px)\n    └ Scene (768px, 960px), Union{Missing, Int16}[0 0 … 0 0; 0 0 … 0 0; … ; 2 2 … 0 2; 2 2 … 1 2], [6108876, 6293642, 6414325, 6456723, 6456819, 6477300, 6631300, 6812016, 6812064, 6838561  …  8668147, 8681264, 8750618, 8750639, 8750642, 8772183, 8773241, 8773281, 8784596, 8833826], 145×32 DataFrame\n Row │ ind                        ID                         location  group   ⋯\n     │ String                     String                     String7   String1 ⋯\n─────┼──────────────────────────────────────────────────────────────────────────\n   1 │ GW_Armando_plate1_JF12G04  GW_Armando_plate1_JF12G04  ST_vi     vir     ⋯\n   2 │ GW_Armando_plate2_JF30G01  GW_Armando_plate2_JF30G01  ST_vi     vir_mis\n   3 │ GW_Lane5_STvi3             GW_Lane5_STvi3             ST_vi     vir\n   4 │ GW_Armando_plate2_JF03G01  GW_Armando_plate2_JF03G01  ST_vi     vir_mis\n   5 │ GW_Lane5_STvi2             GW_Lane5_STvi2             ST_vi     vir     ⋯\n   6 │ GW_Lane5_STvi1             GW_Lane5_STvi1             ST_vi     vir\n   7 │ GW_Armando_plate2_JF16G02  GW_Armando_plate2_JF16G02  DV_vi     plumb_v\n   8 │ GW_Armando_plate1_JF16G01  GW_Armando_plate1_JF16G01  DV_vi     plumb_v\n   9 │ GW_Armando_plate2_JE31G01  GW_Armando_plate2_JE31G01  VB_vi     vir_mis ⋯\n  10 │ GW_Armando_plate2_JF03G02  GW_Armando_plate2_JF03G02  VB_vi     vir_mis\n  11 │ GW_Lane5_YK7               GW_Lane5_YK7               YK        vir\n  ⋮  │             ⋮                          ⋮                 ⋮          ⋮   ⋱\n 136 │ GW_Armando_plate2_JF24G01  GW_Armando_plate2_JF24G01  VB        plumb\n 137 │ GW_Armando_plate2_JF25G01  GW_Armando_plate2_JF25G01  VB        plumb   ⋯\n 138 │ GW_Armando_plate1_JG02G02  GW_Armando_plate1_JG02G02  PR        plumb\n 139 │ GW_Armando_plate2_JG01G01  GW_Armando_plate2_JG01G01  PR        plumb\n 140 │ GW_Armando_plate2_JG02G03  GW_Armando_plate2_JG02G03  PR        plumb\n 141 │ GW_Armando_plate1_JG02G04  GW_Armando_plate1_JG02G04  PR        plumb   ⋯\n 142 │ GW_Armando_plate2_JG02G01  GW_Armando_plate2_JG02G01  PR        plumb\n 143 │ GW_Lane5_SL1               GW_Lane5_SL1               SL        plumb\n 144 │ GW_Lane5_SL2               GW_Lane5_SL2               SL        plumb\n 145 │ GW_Armando_plate1_JF10G03  GW_Armando_plate1_JF10G03  ST        plumb_v ⋯\n                                                 29 columns and 124 rows omitted)",
    "crumbs": [
      "Home",
      "Greenish Warbler heterozygosity variance analysis"
    ]
  },
  {
    "objectID": "GW_Heterozygosity_Variance.html#tried-chr-12-but-sort-of-a-mess.-the-ludlowi-samples-fall-in-all-clusters-even-plumb",
    "href": "GW_Heterozygosity_Variance.html#tried-chr-12-but-sort-of-a-mess.-the-ludlowi-samples-fall-in-all-clusters-even-plumb",
    "title": "Greenish Warbler heterozygosity variance analysis",
    "section": "Tried chr 12 but sort of a mess. The ludlowi samples fall in all clusters, even plumb!",
    "text": "Tried chr 12 but sort of a mess. The ludlowi samples fall in all clusters, even plumb!",
    "crumbs": [
      "Home",
      "Greenish Warbler heterozygosity variance analysis"
    ]
  },
  {
    "objectID": "GW_Heterozygosity_Variance.html#same-for-chr-13",
    "href": "GW_Heterozygosity_Variance.html#same-for-chr-13",
    "title": "Greenish Warbler heterozygosity variance analysis",
    "section": "Same for chr 13",
    "text": "Same for chr 13\n\n# choose scaffold\nchr = \"gw13\"\n\npositionMin, positionMax, regionText, \n    windowedIndHetStanRegion, meanAcrossRegionIndHetStan,\n    genos_highViSHetRegion, pos_highViSHetRegion, regionInfo = \n    getWindowedIndHetStanRegion(genosOnly_included, \n                            pos_SNP_filtered, \n                            highViSHetRegions, chr;\n                            windowSize = 500)\n\n# inspect values for mean IndHetStan per individual for that high ViSHet region\nplot(meanAcrossRegionIndHetStan)\n\n# Add column to metadata containing the regionIndHetStan for this highHet region:\ncommand = \"ind_with_metadata_included.\" * chr * \"_regionIndHetStan = meanAcrossRegionIndHetStan\"\neval(Meta.parse(command)) # this executes the command constructed above\nind_with_metadata_included.regionIndHetStan = meanAcrossRegionIndHetStan\n\n#names(ind_with_metadata_included)\n\n# check whether missing data related to heterozygosity (good news: not really)\nplot(ind_with_metadata_included.numMissings, meanAcrossRegionIndHetStan)\n\n# PCA of all individuals:\n\ngenos_highViSHetRegion_imputed = Impute.svd(Matrix{Union{Missing, Float32}}(genos_highViSHetRegion))\n\nflipPC1 = true\nflipPC2 = true\n\nPCAmodelAll = plotPCA(genos_highViSHetRegion_imputed, ind_with_metadata_included, \n            groups_to_plot_PCA, group_colors_PCA; \n            sampleSet = \"greenish warblers\", regionText = regionText,\n            flip1 = flipPC1, flip2 = flipPC2,\n            lineOpacity = 0.7, fillOpacity = 0.6,\n            symbolSize = 14, showTitle = true,\n            xLabelText = string(\"Region PC1\"), yLabelText = string(\"Region PC2\"),\n            showPlot = false)\n\ndisplay(PCAmodelAll.PCAfig)\n\n# Add PC values to metadata for individuals included in PCA above:\nif flipPC1\n    PCAmodelAll.metadata.PC1 = -1 .* PCAmodelAll.values[1,:]\nelse \n    PCAmodelAll.metadata.PC1 = PCAmodelAll.values[1,:]\nend\nif flipPC2\n    PCAmodelAll.metadata.PC2 = -1 .* PCAmodelAll.values[2,:]\nelse\n    PCAmodelAll.metadata.PC2 = PCAmodelAll.values[2,:]\nend\nPCAmodelAll.metadata.PC3 = PCAmodelAll.values[3,:]\n\n# For the next bit to work with above, make sure that all individuals in the above `plotPCA` command\n# are included in the `groups_to_plot_PCA`\n\n# choose inds with low IndHet in high ViSHet region:\nindSelection_lowIndHetStan = (meanAcrossRegionIndHetStan .&lt; 1.75) \n\n#Plot only the lowIndHetStan individuals:\n\nf = CairoMakie.Figure();\nax = Axis(f[1, 1],\n    title = \"PC1 vs. PC2, only low heterozygosity\",\n    xlabel = \"Region PC1\", xlabelsize = 24,\n    ylabel = \"Region PC2\", ylabelsize = 24,\n    autolimitaspect = 1)\nhidedecorations!(ax, label = false, ticklabels = false, ticks = false) # hide background lattice\nfor i in eachindex(groups_to_plot_PCA) \n    selection = (PCAmodelAll.metadata.Fst_group .== groups_to_plot_PCA[i]) .& indSelection_lowIndHetStan\n    CairoMakie.scatter!(ax, PCAmodelAll.metadata.PC1[selection], PCAmodelAll.metadata.PC2[selection], marker = :diamond, color = (group_colors_PCA[i], 0.6), markersize = 14, strokewidth=0.5, strokecolor = (\"black\", 0.7))\nend\ndisplay(f)\n\nMore than 1 region on that scaffold. Using just the longest one.\n\n\n3×3 DataFrame\n\n\n\nRow\nregionChrom\nregionStart\nregionEnd\n\n\n\nString\nInt64\nInt64\n\n\n\n\n1\ngw13\n13574177\n13722280\n\n\n2\ngw13\n14099239\n15243036\n\n\n3\ngw13\n15413381\n15607553\n\n\n\n\n\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\nCairoMakie.Screen{IMAGE}\n\n\n\nSave the individual colors in the metadata\n\nindColors = fill(\"\", size(PCAmodelAll.metadata, 1))\nfor i in axes(PCAmodelAll.metadata, 1)\n    indColors[i] = group_colors_PCA[findfirst(groups_to_plot_PCA .== PCAmodelAll.metadata.Fst_group[i])]\nend\nPCAmodelAll.metadata.indColorLeft = indColors\nPCAmodelAll.metadata.indColorRight = indColors\n\n257-element Vector{String}:\n \"blue\"\n \"red\"\n \"red\"\n \"red\"\n \"red\"\n \"red\"\n \"red\"\n \"purple\"\n \"red\"\n \"red\"\n \"red\"\n \"blue\"\n \"red\"\n ⋮\n \"olivedrab2\"\n \"olivedrab2\"\n \"olivedrab2\"\n \"olivedrab2\"\n \"olivedrab2\"\n \"olivedrab2\"\n \"olivedrab2\"\n \"olivedrab2\"\n \"olivedrab2\"\n \"olivedrab2\"\n \"olivedrab2\"\n \"olivedrab2\"\n\n\n\n\nPlot PC1 vs. PC2:\n\nf = CairoMakie.Figure()\nax = Axis(f[1, 1],\n    title = \"PC1 vs. PC2\",\n    xlabel = \"Region PC1\", xlabelsize = 24,\n    ylabel = \"Region PC2\", ylabelsize = 24,\n    autolimitaspect = 1)\nhidedecorations!(ax, label = false, ticklabels = false, ticks = false) # hide background lattice\nfor i in eachindex(groups_to_plot_PCA) \n    selection = PCAmodelAll.metadata.Fst_group .== groups_to_plot_PCA[i]\n    CairoMakie.scatter!(ax, PCAmodelAll.metadata.PC1[selection], PCAmodelAll.metadata.PC2[selection], marker = :diamond, color = (group_colors_PCA[i], 0.6), markersize = 14, strokewidth=0.5, strokecolor = (\"black\", 0.7))\nend\ndisplay(f)\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\nCairoMakie.Screen{IMAGE}\n\n\n\n\nPlot PC1 vs. PC3:\n\nf = CairoMakie.Figure()\nax = Axis(f[1, 1],\n    title = \"PC1 vs. PC3\",\n    xlabel = \"Region PC1\", xlabelsize = 24,\n    ylabel = \"Region PC3\", ylabelsize = 24,\n    autolimitaspect = 1)\nhidedecorations!(ax, label = false, ticklabels = false, ticks = false) # hide background lattice\nfor i in eachindex(groups_to_plot_PCA) \n    selection = PCAmodelAll.metadata.Fst_group .== groups_to_plot_PCA[i]\n    CairoMakie.scatter!(ax, PCAmodelAll.metadata.PC1[selection], PCAmodelAll.metadata.PC3[selection], marker = :diamond, color = (group_colors_PCA[i], 0.6), markersize = 14, strokewidth=0.5, strokecolor = (\"black\", 0.7))\nend\ndisplay(f)\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\nCairoMakie.Screen{IMAGE}\n\n\n\n\nAt chr 13 high ViSHet region, there are 6 clear haplogroups (vir and lud separated cleanly on PC3, with one hetero between them). Divide samples into those groups, based on PCA scores, and then calculate pi within and pi between\n\nclusterNames = [\"vir\",\n                \"nit\",\n                \"lud\",\n                \"troch\",\n                \"obs\",\n                \"plumb\"]\n\nclusterColors = [\"blue\",\n                \"grey\",\n                \"green\",\n                \"yellow\",\n                \"orange\",\n                \"red\"]\n\nvir = (PCAmodelAll.metadata.PC1 .&lt; -4) .&\n        (2 .&lt; PCAmodelAll.metadata.PC3) .& \n            indSelection_lowIndHetStan\nnit = (-4 .&lt; PCAmodelAll.metadata.PC1 .&lt; -1) .&\n        (2.5 .&lt; PCAmodelAll.metadata.PC2 .&lt; 3.5) .&\n            indSelection_lowIndHetStan\nlud = (PCAmodelAll.metadata.PC1 .&lt; -5) .&\n        (PCAmodelAll.metadata.PC3 .&lt; -2) .& \n            indSelection_lowIndHetStan\ntroch = (-2 .&lt; PCAmodelAll.metadata.PC1 .&lt; 0) .&\n            (PCAmodelAll.metadata.PC2 .&lt; -5.5) .&\n            indSelection_lowIndHetStan\nobs = (-1 .&lt; PCAmodelAll.metadata.PC1 .&lt; 3) .&\n            (-5.5 .&lt; PCAmodelAll.metadata.PC2 .&lt; -2.5) .&\n            indSelection_lowIndHetStan\nplumb = (6 .&lt; PCAmodelAll.metadata.PC1) .& \n            (1 .&lt; PCAmodelAll.metadata.PC2) .&\n            indSelection_lowIndHetStan\n\n# check the individuals in each group\nPCAmodelAll.metadata.Fst_group[vir]\nPCAmodelAll.metadata.Fst_group[nit]\nPCAmodelAll.metadata.Fst_group[lud]\nPCAmodelAll.metadata.Fst_group[troch]\nPCAmodelAll.metadata.Fst_group[obs]\nPCAmodelAll.metadata.Fst_group[plumb]\n\nclusterArray = [vir nit lud troch obs plumb]\n\n# show numbers in each group\nprintln(\"The numbers in each group are $(sum(clusterArray, dims=1)) and the sum of those is $(sum(sum(clusterArray, dims=1)))\")\n\n# create vectors that indicate the groups and plot order for this analysis:\nclusterMembership = fill(\"none\", nrow(PCAmodelAll.metadata))\nplotOrder = fill(-9, nrow(PCAmodelAll.metadata))\nfor i in eachindex(clusterArray[1,:])\n    clusterMembership[clusterArray[:,i]] .= clusterNames[i]\n    plotOrder[clusterArray[:,i]] .= i\nend\n\n# Calculate allele freqs and sample sizes\nfreqs, sampleSizes = getFreqsAndSampleSizes(genos_highViSHetRegion, clusterMembership, clusterNames)\nprintln(\"Calculated population allele frequencies and sample sizes\")\n\n# Calculate per-site pi (within-group nucleotide distance)\n\nsitePi = getSitePi(freqs, sampleSizes)\n\n# calculate pairwise Dxy per site, using data in \"freqs\" and groups in \"groups\"\n\nDxy, pairwiseDxyClusterNames = getDxy(freqs, clusterNames)\n\nFst, FstNumerator, FstDenominator, pairwiseFstClusterNames = getFst(freqs, sampleSizes, clusterNames; among=false)  # set among to FALSE if no among Fst wanted (some things won't work without it) \n\n# Now get averages of pi and Dxy for whole region:\n\nregionPiTable = DataFrame(cluster = clusterNames, pi = getRegionPi(sitePi))\n#= 6×2 DataFrame\n Row │ cluster  pi         \n     │ String   Float64    \n─────┼─────────────────────\n   1 │ vir      0.00875059\n   2 │ nit      0.00517962\n   3 │ lud      0.00819617\n   4 │ troch    0.00565913\n   5 │ obs      0.0090813\n   6 │ plumb    0.00929977 =#\n\nregionDxyTable = DataFrame(cluster_pair = pairwiseDxyClusterNames, Dxy = getRegionDxy(Dxy))\n#= 15×2 DataFrame\n Row │ cluster_pair  Dxy       \n     │ String        Float64   \n─────┼─────────────────────────\n   1 │ vir_nit       0.035675\n   2 │ vir_lud       0.0188542\n   3 │ vir_troch     0.0297034\n   4 │ vir_obs       0.028434\n   5 │ vir_plumb     0.0382774\n   6 │ nit_lud       0.0377189\n   7 │ nit_troch     0.0437711\n   8 │ nit_obs       0.0424561\n   9 │ nit_plumb     0.0482994\n  10 │ lud_troch     0.0303352\n  11 │ lud_obs       0.0294719\n  12 │ lud_plumb     0.0394332\n  13 │ troch_obs     0.0124742\n  14 │ troch_plumb   0.0313941\n  15 │ obs_plumb     0.0300717 =#\n\n# Make a genotype-by-individual plot using all variable loci in the region,\nmissingFractionAllowed = 0.1\n# in metadata, replace `Fst_group` column with cluster info (needed for the function below):\nPCAmodelAll.metadata.original_Fst_groups = PCAmodelAll.metadata.Fst_group # store the Fst_groups in this\nPCAmodelAll.metadata.Fst_group = clusterMembership\nPCAmodelAll.metadata.original_plot_order = PCAmodelAll.metadata.plot_order # store the original plot_order in this\nPCAmodelAll.metadata.plot_order = plotOrder\n\n# limit the SNPs to those with variants greater than 50% in \n# at least one pop, and less than 50% in at least one pop.\n# (So for each column in `freqs`, the maximum should be &gt; 0.5 \n# and the minimum should be &lt; 0.5)\nselectedSNPs = (vec(maximum(freqs, dims=1)) .&gt; 0.5) .& (vec(minimum(freqs, dims=1)) .&lt; 0.5)\ngenos_selectedSNPs = genos_highViSHetRegion[:, selectedSNPs]\npos_selectedSNPs = pos_highViSHetRegion[selectedSNPs, :]\nFst_selectedSNPs = Fst[:, selectedSNPs]\nfreqs_selectedSNPs = freqs[:, selectedSNPs]\n\n# limit the number of individuals per group to plot\nnumIndsToPlot = fill(15, length(clusterNames))\n\ngenosForGBI, indMetadataforGBI = limitIndsToPlot(clusterNames, numIndsToPlot, \n                                            genos_selectedSNPs, PCAmodelAll.metadata;\n                                            sortByMissing = true)\n\nplotGenotypeByIndividual(regionInfo, pos_selectedSNPs,\n                genosForGBI, indMetadataforGBI, freqs_selectedSNPs, clusterNames, clusterColors;\n                missingFractionAllowed = missingFractionAllowed,\n                indColorRightProvided = true)\n\nThe numbers in each group are [38 2 41 67 5 68] and the sum of those is 221\nCalculated population allele frequencies and sample sizes\n\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\n\n(Scene (768px, 960px):\n  0 Plots\n  2 Child Scenes:\n    ├ Scene (768px, 960px)\n    └ Scene (768px, 960px), Union{Missing, Int16}[0 0 … 0 1; 0 0 … 0 0; … ; 0 2 … 2 2; 0 2 … 2 2], [14109120, 14109196, 14109223, 14113908, 14117707, 14117822, 14121642, 14124306, 14127880, 14135008  …  15108025, 15108049, 15108085, 15116504, 15127266, 15129890, 15134320, 15134324, 15177202, 15177253], 67×34 DataFrame\n Row │ ind                        ID                         location  group   ⋯\n     │ String                     String                     String7   String1 ⋯\n─────┼──────────────────────────────────────────────────────────────────────────\n   1 │ GW_Armando_plate1_AB1      GW_Armando_plate1_AB1      AB        vir     ⋯\n   2 │ GW_Armando_plate1_JF12G04  GW_Armando_plate1_JF12G04  ST_vi     vir\n   3 │ GW_Armando_plate1_JF16G01  GW_Armando_plate1_JF16G01  DV_vi     plumb_v\n   4 │ GW_Armando_plate1_TL3      GW_Armando_plate1_TL3      TL        vir\n   5 │ GW_Armando_plate2_JE31G01  GW_Armando_plate2_JE31G01  VB_vi     vir_mis ⋯\n   6 │ GW_Armando_plate2_JF03G01  GW_Armando_plate2_JF03G01  ST_vi     vir_mis\n   7 │ GW_Armando_plate2_JF16G02  GW_Armando_plate2_JF16G02  DV_vi     plumb_v\n   8 │ GW_Armando_plate2_JF30G01  GW_Armando_plate2_JF30G01  ST_vi     vir_mis\n   9 │ GW_Lane5_TL1               GW_Lane5_TL1               TL        vir     ⋯\n  10 │ GW_Lane5_TL11              GW_Lane5_TL11              TL        vir\n  11 │ GW_Lane5_TL12              GW_Lane5_TL12              TL        vir\n  ⋮  │             ⋮                          ⋮                 ⋮          ⋮   ⋱\n  58 │ GW_Armando_plate1_JF23G02  GW_Armando_plate1_JF23G02  VB        plumb\n  59 │ GW_Armando_plate1_JF24G02  GW_Armando_plate1_JF24G02  VB        plumb   ⋯\n  60 │ GW_Armando_plate1_JF27G01  GW_Armando_plate1_JF27G01  ST        plumb\n  61 │ GW_Armando_plate1_JF29G01  GW_Armando_plate1_JF29G01  ST        plumb\n  62 │ GW_Armando_plate1_JF29G02  GW_Armando_plate1_JF29G02  ST        plumb\n  63 │ GW_Armando_plate1_JG02G02  GW_Armando_plate1_JG02G02  PR        plumb   ⋯\n  64 │ GW_Armando_plate1_JG02G04  GW_Armando_plate1_JG02G04  PR        plumb\n  65 │ GW_Armando_plate1_JG08G01  GW_Armando_plate1_JG08G01  ST        plumb\n  66 │ GW_Armando_plate1_JG17G01  GW_Armando_plate1_JG17G01  ST        plumb_v\n  67 │ GW_Armando_plate2_JF08G04  GW_Armando_plate2_JF08G04  ST        plumb   ⋯\n                                                  31 columns and 46 rows omitted)\n\n\n\n\n\nNow show a GBI plot like above, but with heterozygotes:\n\nclusterNamesWithHets = [\"vir\",\n                \"vir_lud\",\n                \"nit\",\n                \"lud\",\n                \"lud_troch\",\n                \"troch\",\n                \"obs\",\n                \"plumb\",\n                \"plumbHet\",\n                \"vir_plumb\"]\n\nclusterColorsWithHets = [\"blue\",\n                \"seagreen\",\n                \"grey\",\n                \"green\",\n                \"green2\",\n                \"yellow\",\n                \"orange\",\n                \"red\",\n                \"red\",\n                \"purple\"]\n\nvir_lud = (PCAmodelAll.metadata.PC1 .&lt; -5) .&\n            (-1 .&lt; PCAmodelAll.metadata.PC3 .&lt; 1)\nlud_troch = (-5 .&lt; PCAmodelAll.metadata.PC1 .&lt; -2) .&\n                (-3.5 .&lt; PCAmodelAll.metadata.PC2 .&lt; 0) .&\n                 .!indSelection_lowIndHetStan\nplumbHet = (7 .&lt; PCAmodelAll.metadata.PC1) .& \n            (1 .&lt; PCAmodelAll.metadata.PC2) .&\n            .!indSelection_lowIndHetStan\nvir_plumb = (1 .&lt; PCAmodelAll.metadata.PC1 .&lt; 4) .&\n                (2 .&lt; PCAmodelAll.metadata.PC2 .&lt; 5) .&\n                 .!indSelection_lowIndHetStan\n\nclusterArray = [vir vir_lud nit lud lud_troch troch obs plumb plumbHet vir_plumb]\n\nsum(clusterArray, dims=1)\n\nif sum(sum(clusterArray, dims=1)) == size(PCAmodelAll.metadata, 1)\n    println(\"Good news: Individuals included in a group matches total number of individuals\")\nelse \n    println(\"Warning: Individuals included in a group ($(sum(sum(clusterArray, dims=1)))) do NOT match total number of individuals ($(size(PCAmodelAll.metadata, 1)))\")\nend\n\n\n# check which individuals left out:\n\nsum(clusterArray, dims=2)\n\nPCAmodelAll.metadata.ind[vec(sum(clusterArray, dims=2) .== 0)]\nPCAmodelAll.metadata.PC1[vec(sum(clusterArray, dims=2) .== 0)]\nPCAmodelAll.metadata.PC2[vec(sum(clusterArray, dims=2) .== 0)]\nindSelection_lowIndHetStan[vec(sum(clusterArray, dims=2) .== 0)]\n\n# create vectors that indicate the groups and plot order for this analysis:\nclusterMembershipWithHets = fill(\"none\", nrow(PCAmodelAll.metadata))\nplotOrderWithHets = fill(-9, nrow(PCAmodelAll.metadata))\nfor i in eachindex(clusterArray[1,:])\n    clusterMembershipWithHets[clusterArray[:,i]] .= clusterNamesWithHets[i]\n    plotOrderWithHets[clusterArray[:,i]] .= i\nend\n\n# Add column to main metadata object containing the cluster membership for this highHet region:\ncommand = \"ind_with_metadata_included.\" * chr * \"_cluster = clusterMembershipWithHets\"\neval(Meta.parse(command)) # this executes the command constructed above\n\n# in metadata, replace `Fst_group` column with cluster info (needed for the function below):\nPCAmodelAll.metadata.Fst_group = clusterMembershipWithHets\nPCAmodelAll.metadata.plot_order = plotOrderWithHets\n\n# limit the number of individuals per group to plot\nnumIndsToPlotWithHets = fill(15, length(clusterNamesWithHets))\n\ngenosForGBI, indMetadataforGBI = limitIndsToPlot(clusterNamesWithHets, numIndsToPlotWithHets, \n                                            genos_selectedSNPs, PCAmodelAll.metadata;\n                                            sortByMissing = true)\n\nplotGenotypeByIndividual(regionInfo, pos_selectedSNPs,\n                genosForGBI, indMetadataforGBI, freqs_selectedSNPs, clusterNamesWithHets, clusterColorsWithHets;\n                missingFractionAllowed = missingFractionAllowed,\n                indColorLeftProvided = false,\n                indColorRightProvided = true)\n\nGood news: Individuals included in a group matches total number of individuals\n\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\n\n(Scene (768px, 960px):\n  0 Plots\n  2 Child Scenes:\n    ├ Scene (768px, 960px)\n    └ Scene (768px, 960px), Union{Missing, Int16}[0 0 … 0 1; 0 0 … 0 0; … ; 0 1 … 1 1; 0 1 … 1 2], [14109120, 14109196, 14109223, 14113908, 14117707, 14117822, 14121642, 14124306, 14127880, 14135008  …  15108025, 15108049, 15108085, 15116504, 15127266, 15129890, 15134320, 15134324, 15177202, 15177253], 88×34 DataFrame\n Row │ ind                        ID                         location  group   ⋯\n     │ String                     String                     String7   String1 ⋯\n─────┼──────────────────────────────────────────────────────────────────────────\n   1 │ GW_Armando_plate1_AB1      GW_Armando_plate1_AB1      AB        vir     ⋯\n   2 │ GW_Armando_plate1_JF12G04  GW_Armando_plate1_JF12G04  ST_vi     vir\n   3 │ GW_Armando_plate1_JF16G01  GW_Armando_plate1_JF16G01  DV_vi     plumb_v\n   4 │ GW_Armando_plate1_TL3      GW_Armando_plate1_TL3      TL        vir\n   5 │ GW_Armando_plate2_JE31G01  GW_Armando_plate2_JE31G01  VB_vi     vir_mis ⋯\n   6 │ GW_Armando_plate2_JF03G01  GW_Armando_plate2_JF03G01  ST_vi     vir_mis\n   7 │ GW_Armando_plate2_JF16G02  GW_Armando_plate2_JF16G02  DV_vi     plumb_v\n   8 │ GW_Armando_plate2_JF30G01  GW_Armando_plate2_JF30G01  ST_vi     vir_mis\n   9 │ GW_Lane5_TL1               GW_Lane5_TL1               TL        vir     ⋯\n  10 │ GW_Lane5_TL11              GW_Lane5_TL11              TL        vir\n  11 │ GW_Lane5_TL12              GW_Lane5_TL12              TL        vir\n  ⋮  │             ⋮                          ⋮                 ⋮          ⋮   ⋱\n  79 │ GW_Armando_plate1_JG02G02  GW_Armando_plate1_JG02G02  PR        plumb\n  80 │ GW_Armando_plate1_JG02G04  GW_Armando_plate1_JG02G04  PR        plumb   ⋯\n  81 │ GW_Armando_plate1_JG08G01  GW_Armando_plate1_JG08G01  ST        plumb\n  82 │ GW_Armando_plate1_JG17G01  GW_Armando_plate1_JG17G01  ST        plumb_v\n  83 │ GW_Armando_plate2_JF08G04  GW_Armando_plate2_JF08G04  ST        plumb\n  84 │ GW_Armando_plate1_JF20G01  GW_Armando_plate1_JF20G01  MB        plumb   ⋯\n  85 │ GW_Armando_plate2_JF13G02  GW_Armando_plate2_JF13G02  ST        plumb\n  86 │ GW_Armando_plate2_JF12G05  GW_Armando_plate2_JF12G05  ST        plumb\n  87 │ GW_Armando_plate2_JF15G01  GW_Armando_plate2_JF15G01  DV        plumb\n  88 │ GW_Armando_plate2_JG12G02  GW_Armando_plate2_JG12G02  ST        plumb   ⋯\n                                                  31 columns and 67 rows omitted)\n\n\n\n\n\nshow GBI plot according to original groups and plot order\n\nPCAmodelAll.metadata.plot_order = PCAmodelAll.metadata.original_plot_order\n\ngenosForGBI, indMetadataforGBI = limitIndsToPlot(clusterNamesWithHets, numIndsToPlotWithHets, \n                                            genos_selectedSNPs, PCAmodelAll.metadata;\n                                            sortByMissing = true)\n\nplotGenotypeByIndividual(regionInfo, pos_selectedSNPs,\n                genosForGBI, indMetadataforGBI, freqs_selectedSNPs, clusterNamesWithHets, clusterColorsWithHets;\n                missingFractionAllowed = missingFractionAllowed,\n                indColorLeftProvided = false,\n                indColorRightProvided = true)\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\n\n(Scene (768px, 960px):\n  0 Plots\n  2 Child Scenes:\n    ├ Scene (768px, 960px)\n    └ Scene (768px, 960px), Union{Missing, Int16}[0 0 … 0 0; 0 0 … 0 0; … ; 0 2 … 2 2; 0 2 … 2 2], [14109120, 14109196, 14109223, 14113908, 14117707, 14117822, 14121642, 14124306, 14127880, 14135008  …  15108025, 15108049, 15108085, 15116504, 15127266, 15129890, 15134320, 15134324, 15177202, 15177253], 88×34 DataFrame\n Row │ ind                        ID                         location  group   ⋯\n     │ String                     String                     String7   String1 ⋯\n─────┼──────────────────────────────────────────────────────────────────────────\n   1 │ GW_Armando_plate1_JF12G04  GW_Armando_plate1_JF12G04  ST_vi     vir     ⋯\n   2 │ GW_Armando_plate2_JF03G01  GW_Armando_plate2_JF03G01  ST_vi     vir_mis\n   3 │ GW_Armando_plate2_JF30G01  GW_Armando_plate2_JF30G01  ST_vi     vir_mis\n   4 │ GW_Armando_plate1_JF16G01  GW_Armando_plate1_JF16G01  DV_vi     plumb_v\n   5 │ GW_Armando_plate2_JF16G02  GW_Armando_plate2_JF16G02  DV_vi     plumb_v ⋯\n   6 │ GW_Armando_plate2_JE31G01  GW_Armando_plate2_JE31G01  VB_vi     vir_mis\n   7 │ GW_Lane5_YK11              GW_Lane5_YK11              YK        vir\n   8 │ GW_Lane5_YK7               GW_Lane5_YK7               YK        vir\n   9 │ GW_Armando_plate1_AB1      GW_Armando_plate1_AB1      AB        vir     ⋯\n  10 │ GW_Armando_plate1_TL3      GW_Armando_plate1_TL3      TL        vir\n  11 │ GW_Lane5_TL1               GW_Lane5_TL1               TL        vir\n  ⋮  │             ⋮                          ⋮                 ⋮          ⋮   ⋱\n  79 │ GW_Armando_plate1_JG17G01  GW_Armando_plate1_JG17G01  ST        plumb_v\n  80 │ GW_Armando_plate2_JF08G04  GW_Armando_plate2_JF08G04  ST        plumb   ⋯\n  81 │ GW_Armando_plate2_JF13G02  GW_Armando_plate2_JF13G02  ST        plumb\n  82 │ GW_Armando_plate2_JF12G05  GW_Armando_plate2_JF12G05  ST        plumb\n  83 │ GW_Armando_plate2_JG12G02  GW_Armando_plate2_JG12G02  ST        plumb\n  84 │ GW_Armando_plate2_JF15G01  GW_Armando_plate2_JF15G01  DV        plumb   ⋯\n  85 │ GW_Armando_plate1_JF23G02  GW_Armando_plate1_JF23G02  VB        plumb\n  86 │ GW_Armando_plate1_JF24G02  GW_Armando_plate1_JF24G02  VB        plumb\n  87 │ GW_Armando_plate1_JG02G02  GW_Armando_plate1_JG02G02  PR        plumb\n  88 │ GW_Armando_plate1_JG02G04  GW_Armando_plate1_JG02G04  PR        plumb   ⋯\n                                                  31 columns and 67 rows omitted)\n\n\n\n\n\nshow same but with all individuals\n\nPCAmodelAll.metadata.plot_order = PCAmodelAll.metadata.original_plot_order\n\n# Set no limit (or high limit anyway) on the number of individuals per group to plot\nnumIndsToPlotWithHets = fill(1000, length(clusterNamesWithHets))\n\ngenosForGBI, indMetadataforGBI = limitIndsToPlot(clusterNamesWithHets, numIndsToPlotWithHets, \n                                            genos_selectedSNPs, PCAmodelAll.metadata;\n                                            sortByMissing = true)\n\nplotGenotypeByIndividual(regionInfo, pos_selectedSNPs,\n                genosForGBI, indMetadataforGBI, freqs_selectedSNPs, clusterNamesWithHets, clusterColorsWithHets;\n                missingFractionAllowed = missingFractionAllowed,\n                indColorLeftProvided = false,\n                indColorRightProvided = true)\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\n\n(Scene (768px, 960px):\n  0 Plots\n  2 Child Scenes:\n    ├ Scene (768px, 960px)\n    └ Scene (768px, 960px), Union{Missing, Int16}[0 0 … 0 0; 0 0 … 0 0; … ; 0 2 … 2 2; 0 2 … 2 2], [14109120, 14109196, 14109223, 14113908, 14117707, 14117822, 14121642, 14124306, 14127880, 14135008  …  15108025, 15108049, 15108085, 15116504, 15127266, 15129890, 15134320, 15134324, 15177202, 15177253], 257×34 DataFrame\n Row │ ind                        ID                         location  group   ⋯\n     │ String                     String                     String7   String1 ⋯\n─────┼──────────────────────────────────────────────────────────────────────────\n   1 │ GW_Armando_plate1_JF12G04  GW_Armando_plate1_JF12G04  ST_vi     vir     ⋯\n   2 │ GW_Armando_plate2_JF03G01  GW_Armando_plate2_JF03G01  ST_vi     vir_mis\n   3 │ GW_Armando_plate2_JF30G01  GW_Armando_plate2_JF30G01  ST_vi     vir_mis\n   4 │ GW_Lane5_STvi1             GW_Lane5_STvi1             ST_vi     vir\n   5 │ GW_Lane5_STvi3             GW_Lane5_STvi3             ST_vi     vir     ⋯\n   6 │ GW_Lane5_STvi2             GW_Lane5_STvi2             ST_vi     vir\n   7 │ GW_Armando_plate1_JF16G01  GW_Armando_plate1_JF16G01  DV_vi     plumb_v\n   8 │ GW_Armando_plate2_JF16G02  GW_Armando_plate2_JF16G02  DV_vi     plumb_v\n   9 │ GW_Armando_plate2_JE31G01  GW_Armando_plate2_JE31G01  VB_vi     vir_mis ⋯\n  10 │ GW_Armando_plate2_JF03G02  GW_Armando_plate2_JF03G02  VB_vi     vir_mis\n  11 │ GW_Lane5_YK11              GW_Lane5_YK11              YK        vir\n  ⋮  │             ⋮                          ⋮                 ⋮          ⋮   ⋱\n 248 │ GW_Armando_plate2_JF24G01  GW_Armando_plate2_JF24G01  VB        plumb\n 249 │ GW_Armando_plate2_JF25G01  GW_Armando_plate2_JF25G01  VB        plumb   ⋯\n 250 │ GW_Armando_plate1_JG02G02  GW_Armando_plate1_JG02G02  PR        plumb\n 251 │ GW_Armando_plate1_JG02G04  GW_Armando_plate1_JG02G04  PR        plumb\n 252 │ GW_Armando_plate2_JG01G01  GW_Armando_plate2_JG01G01  PR        plumb\n 253 │ GW_Armando_plate2_JG02G01  GW_Armando_plate2_JG02G01  PR        plumb   ⋯\n 254 │ GW_Armando_plate2_JG02G03  GW_Armando_plate2_JG02G03  PR        plumb\n 255 │ GW_Lane5_SL1               GW_Lane5_SL1               SL        plumb\n 256 │ GW_Lane5_SL2               GW_Lane5_SL2               SL        plumb\n 257 │ GW_Armando_plate1_JF10G03  GW_Armando_plate1_JF10G03  ST        plumb_v ⋯\n                                                 31 columns and 236 rows omitted)\n\n\n\n\n\nshow same but with only vir and plumb pops\n\nincludeTheseClusters = [\"vir\", \"plumb\"] # these are the haplotype clusters to include in the choice below of SNPs to show\n\n# Calculate allele freqs and sample sizes\nfreqs_local, sampleSizes_local = getFreqsAndSampleSizes(genos_selectedSNPs, clusterMembership, includeTheseClusters)\n\n# limit the SNPs to those with variants greater than 50% in \n# at least one pop, and less than 50% in at least one pop.\n# (So for each column in `freqs`, the maximum should be &gt; 0.5 \n# and the minimum should be &lt; 0.5)\nselectedSNPs = (vec(maximum(freqs_local, dims=1)) .&gt; 0.5) .& (vec(minimum(freqs_local, dims=1)) .&lt; 0.5)\ngenosForGBI = genos_selectedSNPs[:, selectedSNPs]\nposForGBI = pos_selectedSNPs[selectedSNPs, :]\nfreqsForGBI = freqs_local[:, selectedSNPs]\n\nplotGroups = [\"vir\", \"plumb\", \"plumb_vir\"] # these are the original Fst_groups\nplotGroupColors = [\"blue\", \"red\", \"purple\"]\n\nmetadataForGBI = copy(PCAmodelAll.metadata)\n\nmetadataForGBI.Fst_group = metadataForGBI.original_Fst_groups\n\nplotGenotypeByIndividual(regionInfo, posForGBI,\n                genosForGBI, metadataForGBI, freqsForGBI, plotGroups, plotGroupColors;\n                missingFractionAllowed = missingFractionAllowed)\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\n\n(Scene (768px, 960px):\n  0 Plots\n  2 Child Scenes:\n    ├ Scene (768px, 960px)\n    └ Scene (768px, 960px), Union{Missing, Int16}[0 0 … 0 0; 0 0 … 0 0; … ; 2 2 … 2 2; 2 2 … 2 2], [14109196, 14121642, 14127880, 14152299, 14191715, 14212308, 14234576, 14246931, 14261718, 14282920  …  15059893, 15061446, 15061449, 15084470, 15089863, 15108049, 15127266, 15134320, 15177202, 15177253], 100×34 DataFrame\n Row │ ind                        ID                         location  group   ⋯\n     │ String                     String                     String7   String1 ⋯\n─────┼──────────────────────────────────────────────────────────────────────────\n   1 │ GW_Armando_plate1_JF12G04  GW_Armando_plate1_JF12G04  ST_vi     vir     ⋯\n   2 │ GW_Armando_plate2_JF03G01  GW_Armando_plate2_JF03G01  ST_vi     vir_mis\n   3 │ GW_Armando_plate2_JF30G01  GW_Armando_plate2_JF30G01  ST_vi     vir_mis\n   4 │ GW_Lane5_STvi1             GW_Lane5_STvi1             ST_vi     vir\n   5 │ GW_Lane5_STvi2             GW_Lane5_STvi2             ST_vi     vir     ⋯\n   6 │ GW_Lane5_STvi3             GW_Lane5_STvi3             ST_vi     vir\n   7 │ GW_Armando_plate1_JF16G01  GW_Armando_plate1_JF16G01  DV_vi     plumb_v\n   8 │ GW_Armando_plate2_JF16G02  GW_Armando_plate2_JF16G02  DV_vi     plumb_v\n   9 │ GW_Armando_plate2_JE31G01  GW_Armando_plate2_JE31G01  VB_vi     vir_mis ⋯\n  10 │ GW_Armando_plate2_JF03G02  GW_Armando_plate2_JF03G02  VB_vi     vir_mis\n  11 │ GW_Lane5_YK11              GW_Lane5_YK11              YK        vir\n  ⋮  │             ⋮                          ⋮                 ⋮          ⋮   ⋱\n  91 │ GW_Armando_plate2_JF24G01  GW_Armando_plate2_JF24G01  VB        plumb\n  92 │ GW_Armando_plate2_JF25G01  GW_Armando_plate2_JF25G01  VB        plumb   ⋯\n  93 │ GW_Armando_plate1_JG02G02  GW_Armando_plate1_JG02G02  PR        plumb\n  94 │ GW_Armando_plate1_JG02G04  GW_Armando_plate1_JG02G04  PR        plumb\n  95 │ GW_Armando_plate2_JG01G01  GW_Armando_plate2_JG01G01  PR        plumb\n  96 │ GW_Armando_plate2_JG02G01  GW_Armando_plate2_JG02G01  PR        plumb   ⋯\n  97 │ GW_Armando_plate2_JG02G03  GW_Armando_plate2_JG02G03  PR        plumb\n  98 │ GW_Lane5_SL1               GW_Lane5_SL1               SL        plumb\n  99 │ GW_Lane5_SL2               GW_Lane5_SL2               SL        plumb\n 100 │ GW_Armando_plate1_JF10G03  GW_Armando_plate1_JF10G03  ST        plumb_v ⋯\n                                                  31 columns and 79 rows omitted)\n\n\n\n\n\nShow just the west area (without nitidus)\n\nclusterNamesWithHetsWest = [\"vir\",\n                        \"vir_lud\",\n                        \"lud\",\n                        \"lud_troch\",\n                        \"troch\"]\n\nclusterColorsWithHetsWest = [\"blue\",\n                        \"seagreen\",\n                        \"green\",\n                        \"green2\",\n                        \"yellow\"]\n\n# limit the SNPs to those with variants greater than 50% in \n# at least one pop, and less than 50% in at least one pop.\n# (So for each column in `freqs`, the maximum should be &gt; 0.5 \n# and the minimum should be &lt; 0.5)\n# Calculate allele freqs and sample sizes\nfreqs, sampleSizes = getFreqsAndSampleSizes(genos_selectedSNPs, clusterMembershipWithHets, clusterNamesWithHetsWest)\nprintln(\"Calculated population allele frequencies and sample sizes\")\nselectedSNPs = (vec(maximum(freqs, dims=1)) .&gt; 0.5) .& (vec(minimum(freqs, dims=1)) .&lt; 0.5)\ngenos_selectedSNPs2 = genos_selectedSNPs[:, selectedSNPs]\npos_selectedSNPs2 = pos_selectedSNPs[selectedSNPs, :]\nfreqs_selectedSNPs2 = freqs[:, selectedSNPs]\n\nnumIndsToPlotWithHets = fill(100, length(clusterNamesWithHetsWest))\n\ngenosForGBI, indMetadataforGBI = limitIndsToPlot(clusterNamesWithHetsWest, numIndsToPlotWithHets, \n                                            genos_selectedSNPs2, PCAmodelAll.metadata;\n                                            sortByMissing = true)\n\nplotGenotypeByIndividual(regionInfo, pos_selectedSNPs2,\n                genosForGBI, indMetadataforGBI, freqs_selectedSNPs2, clusterNamesWithHetsWest, clusterColorsWithHetsWest;\n                missingFractionAllowed = missingFractionAllowed,\n                indColorLeftProvided = false,\n                indColorRightProvided = true)\n\nCalculated population allele frequencies and sample sizes\n\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\n\n(Scene (768px, 960px):\n  0 Plots\n  2 Child Scenes:\n    ├ Scene (768px, 960px)\n    └ Scene (768px, 960px), Union{Missing, Int16}[0 0 … 0 0; 0 0 … 0 0; … ; -99 2 … 2 2; 0 2 … 2 2], [14109120, 14109196, 14109223, 14117707, 14135008, 14152299, 14206380, 14234576, 14234638, 14246931  …  15041158, 15053672, 15059893, 15061446, 15061449, 15090277, 15108025, 15134324, 15177202, 15177253], 177×34 DataFrame\n Row │ ind                        ID                         location  group   ⋯\n     │ String                     String                     String7   String1 ⋯\n─────┼──────────────────────────────────────────────────────────────────────────\n   1 │ GW_Armando_plate1_JF12G04  GW_Armando_plate1_JF12G04  ST_vi     vir     ⋯\n   2 │ GW_Armando_plate2_JF03G01  GW_Armando_plate2_JF03G01  ST_vi     vir_mis\n   3 │ GW_Armando_plate2_JF30G01  GW_Armando_plate2_JF30G01  ST_vi     vir_mis\n   4 │ GW_Lane5_STvi1             GW_Lane5_STvi1             ST_vi     vir\n   5 │ GW_Lane5_STvi2             GW_Lane5_STvi2             ST_vi     vir     ⋯\n   6 │ GW_Lane5_STvi3             GW_Lane5_STvi3             ST_vi     vir\n   7 │ GW_Armando_plate1_JF16G01  GW_Armando_plate1_JF16G01  DV_vi     plumb_v\n   8 │ GW_Armando_plate2_JF16G02  GW_Armando_plate2_JF16G02  DV_vi     plumb_v\n   9 │ GW_Armando_plate2_JE31G01  GW_Armando_plate2_JE31G01  VB_vi     vir_mis ⋯\n  10 │ GW_Armando_plate2_JF03G02  GW_Armando_plate2_JF03G02  VB_vi     vir_mis\n  11 │ GW_Lane5_YK11              GW_Lane5_YK11              YK        vir\n  ⋮  │             ⋮                          ⋮                 ⋮          ⋮   ⋱\n 168 │ GW_Lane5_LN3               GW_Lane5_LN3               LN        troch_L\n 169 │ GW_Lane5_LN6               GW_Lane5_LN6               LN        troch_L ⋯\n 170 │ GW_Lane5_LN1               GW_Lane5_LN1               LN        troch_L\n 171 │ GW_Lane5_LN4               GW_Lane5_LN4               LN        troch_L\n 172 │ GW_Lane5_LN12              GW_Lane5_LN12              LN        troch_L\n 173 │ GW_Lane5_LN20              GW_Lane5_LN20              LN        troch_L ⋯\n 174 │ GW_Lane5_LN10              GW_Lane5_LN10              LN        troch_L\n 175 │ GW_Lane5_LN14              GW_Lane5_LN14              LN        troch_L\n 176 │ GW_Lane5_LN7               GW_Lane5_LN7               LN        troch_L\n 177 │ GW_Lane5_LN8               GW_Lane5_LN8               LN        troch_L ⋯\n                                                 31 columns and 156 rows omitted)\n\n\n\n\n\nShow just the east area\n\nclusterNamesWithHetsEast = [\"obs\",\n                            \"plumb\",\n                            \"plumbHet\"]\n\nclusterColorsWithHetsEast = [\"orange\",\n                            \"red\",\n                            \"red\"]\n\n# limit the SNPs to those with variants greater than 50% in \n# at least one pop, and less than 50% in at least one pop.\n# (So for each column in `freqs`, the maximum should be &gt; 0.5 \n# and the minimum should be &lt; 0.5)\n# Calculate allele freqs and sample sizes\nfreqs, sampleSizes = getFreqsAndSampleSizes(genos_selectedSNPs, clusterMembershipWithHets, clusterNamesWithHetsEast)\nprintln(\"Calculated population allele frequencies and sample sizes\")\nselectedSNPs = (vec(maximum(freqs, dims=1)) .&gt; 0.5) .& (vec(minimum(freqs, dims=1)) .&lt; 0.5)\ngenos_selectedSNPs2 = genos_selectedSNPs[:, selectedSNPs]\npos_selectedSNPs2 = pos_selectedSNPs[selectedSNPs, :]\nfreqs_selectedSNPs2 = freqs[:, selectedSNPs]\n\nnumIndsToPlotWithHetsEast = fill(100, length(clusterNamesWithHetsEast))\n\ngenosForGBI, indMetadataforGBI = limitIndsToPlot(clusterNamesWithHetsEast, numIndsToPlotWithHetsEast, \n                                            genos_selectedSNPs2, PCAmodelAll.metadata;\n                                            sortByMissing = true)\n\nplotGenotypeByIndividual(regionInfo, pos_selectedSNPs2,\n                genosForGBI, indMetadataforGBI, freqs_selectedSNPs2, clusterNamesWithHetsEast, clusterColorsWithHetsEast;\n                missingFractionAllowed = missingFractionAllowed,\n                indColorLeftProvided = false,\n                indColorRightProvided = true)\n\nCalculated population allele frequencies and sample sizes\n\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\n\n(Scene (768px, 960px):\n  0 Plots\n  2 Child Scenes:\n    ├ Scene (768px, 960px)\n    └ Scene (768px, 960px), Union{Missing, Int16}[0 0 … 0 0; 0 0 … 0 0; … ; 2 2 … 2 2; 2 2 … -99 2], [14121642, 14127880, 14191715, 14206380, 14212308, 14234638, 14261718, 14318327, 14318334, 14327641  …  14985992, 15008548, 15029658, 15034885, 15041158, 15084470, 15089863, 15108049, 15127266, 15134320], 75×34 DataFrame\n Row │ ind                        ID                         location  group   ⋯\n     │ String                     String                     String7   String1 ⋯\n─────┼──────────────────────────────────────────────────────────────────────────\n   1 │ GW_Lane5_EM1               GW_Lane5_EM1               EM        troch_E ⋯\n   2 │ GW_Lane5_DA3               GW_Lane5_DA3               XN        obs\n   3 │ GW_Lane5_DA7               GW_Lane5_DA7               XN        obs\n   4 │ GW_Lane5_DA4               GW_Lane5_DA4               XN        obs\n   5 │ GW_Lane5_DA2               GW_Lane5_DA2               XN        obs     ⋯\n   6 │ GW_Armando_plate1_RF20G01  GW_Armando_plate1_RF20G01  BJ        obs_plu\n   7 │ GW_Armando_plate1_RF29G02  GW_Armando_plate1_RF29G02  BJ        obs_plu\n   8 │ GW_Armando_plate2_RF29G01  GW_Armando_plate2_RF29G01  BJ        obs_plu\n   9 │ GW_Lane5_BK3               GW_Lane5_BK3               BK        plumb   ⋯\n  10 │ GW_Lane5_BK2               GW_Lane5_BK2               BK        plumb\n  11 │ GW_Lane5_AN1               GW_Lane5_AN1               AN        plumb\n  ⋮  │             ⋮                          ⋮                 ⋮          ⋮   ⋱\n  66 │ GW_Armando_plate2_JF24G01  GW_Armando_plate2_JF24G01  VB        plumb\n  67 │ GW_Armando_plate2_JF25G01  GW_Armando_plate2_JF25G01  VB        plumb   ⋯\n  68 │ GW_Armando_plate1_JG02G02  GW_Armando_plate1_JG02G02  PR        plumb\n  69 │ GW_Armando_plate1_JG02G04  GW_Armando_plate1_JG02G04  PR        plumb\n  70 │ GW_Armando_plate2_JG01G01  GW_Armando_plate2_JG01G01  PR        plumb\n  71 │ GW_Armando_plate2_JG02G01  GW_Armando_plate2_JG02G01  PR        plumb   ⋯\n  72 │ GW_Armando_plate2_JG02G03  GW_Armando_plate2_JG02G03  PR        plumb\n  73 │ GW_Lane5_SL1               GW_Lane5_SL1               SL        plumb\n  74 │ GW_Lane5_SL2               GW_Lane5_SL2               SL        plumb\n  75 │ GW_Armando_plate1_JF10G03  GW_Armando_plate1_JF10G03  ST        plumb_v ⋯\n                                                  31 columns and 54 rows omitted)\n\n\n\n\n\nShow just the northern area\n\nclusterNamesWithHetsNorth = [\"vir\",\n                            \"vir_plumb\",\n                            \"plumb\",\n                            \"plumbHet\"]\n\nclusterColorsWithHetsNorth = [\"blue\",\n                            \"purple\",\n                            \"red\",\n                            \"red\"]\n\n# limit the SNPs to those with variants greater than 50% in \n# at least one pop, and less than 50% in at least one pop.\n# (So for each column in `freqs`, the maximum should be &gt; 0.5 \n# and the minimum should be &lt; 0.5)\n# Calculate allele freqs and sample sizes\nfreqs, sampleSizes = getFreqsAndSampleSizes(genos_selectedSNPs, clusterMembershipWithHets, clusterNamesWithHetsNorth)\nprintln(\"Calculated population allele frequencies and sample sizes\")\nselectedSNPs = (vec(maximum(freqs, dims=1)) .&gt; 0.5) .& (vec(minimum(freqs, dims=1)) .&lt; 0.5)\ngenos_selectedSNPs2 = genos_selectedSNPs[:, selectedSNPs]\npos_selectedSNPs2 = pos_selectedSNPs[selectedSNPs, :]\nfreqs_selectedSNPs2 = freqs[:, selectedSNPs]\n\nnumIndsToPlotWithHets = fill(100, length(clusterNamesWithHetsNorth))\n\ngenosForGBI, indMetadataforGBI = limitIndsToPlot(clusterNamesWithHetsNorth, numIndsToPlotWithHets, \n                                            genos_selectedSNPs2, PCAmodelAll.metadata;\n                                            sortByMissing = true)\n\nplotGenotypeByIndividual(regionInfo, pos_selectedSNPs2,\n                genosForGBI, indMetadataforGBI, freqs_selectedSNPs2, clusterNamesWithHetsNorth, clusterColorsWithHetsNorth;\n                missingFractionAllowed = missingFractionAllowed,\n                indColorLeftProvided = false,\n                indColorRightProvided = true)\n\nCalculated population allele frequencies and sample sizes\n\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\n\n(Scene (768px, 960px):\n  0 Plots\n  2 Child Scenes:\n    ├ Scene (768px, 960px)\n    └ Scene (768px, 960px), Union{Missing, Int16}[0 0 … 0 0; 0 0 … 0 0; … ; 2 2 … 2 2; 2 2 … 2 2], [14109196, 14121642, 14127880, 14152299, 14191715, 14212308, 14234576, 14246931, 14261718, 14282920  …  15059893, 15061446, 15061449, 15084470, 15089863, 15108049, 15127266, 15134320, 15177202, 15177253], 111×34 DataFrame\n Row │ ind                        ID                         location  group   ⋯\n     │ String                     String                     String7   String1 ⋯\n─────┼──────────────────────────────────────────────────────────────────────────\n   1 │ GW_Armando_plate1_JF12G04  GW_Armando_plate1_JF12G04  ST_vi     vir     ⋯\n   2 │ GW_Armando_plate2_JF03G01  GW_Armando_plate2_JF03G01  ST_vi     vir_mis\n   3 │ GW_Armando_plate2_JF30G01  GW_Armando_plate2_JF30G01  ST_vi     vir_mis\n   4 │ GW_Lane5_STvi1             GW_Lane5_STvi1             ST_vi     vir\n   5 │ GW_Lane5_STvi2             GW_Lane5_STvi2             ST_vi     vir     ⋯\n   6 │ GW_Lane5_STvi3             GW_Lane5_STvi3             ST_vi     vir\n   7 │ GW_Armando_plate1_JF16G01  GW_Armando_plate1_JF16G01  DV_vi     plumb_v\n   8 │ GW_Armando_plate2_JF16G02  GW_Armando_plate2_JF16G02  DV_vi     plumb_v\n   9 │ GW_Armando_plate2_JE31G01  GW_Armando_plate2_JE31G01  VB_vi     vir_mis ⋯\n  10 │ GW_Armando_plate2_JF03G02  GW_Armando_plate2_JF03G02  VB_vi     vir_mis\n  11 │ GW_Lane5_YK11              GW_Lane5_YK11              YK        vir\n  ⋮  │             ⋮                          ⋮                 ⋮          ⋮   ⋱\n 102 │ GW_Armando_plate2_JF24G01  GW_Armando_plate2_JF24G01  VB        plumb\n 103 │ GW_Armando_plate2_JF25G01  GW_Armando_plate2_JF25G01  VB        plumb   ⋯\n 104 │ GW_Armando_plate1_JG02G02  GW_Armando_plate1_JG02G02  PR        plumb\n 105 │ GW_Armando_plate1_JG02G04  GW_Armando_plate1_JG02G04  PR        plumb\n 106 │ GW_Armando_plate2_JG01G01  GW_Armando_plate2_JG01G01  PR        plumb\n 107 │ GW_Armando_plate2_JG02G01  GW_Armando_plate2_JG02G01  PR        plumb   ⋯\n 108 │ GW_Armando_plate2_JG02G03  GW_Armando_plate2_JG02G03  PR        plumb\n 109 │ GW_Lane5_SL1               GW_Lane5_SL1               SL        plumb\n 110 │ GW_Lane5_SL2               GW_Lane5_SL2               SL        plumb\n 111 │ GW_Armando_plate1_JF10G03  GW_Armando_plate1_JF10G03  ST        plumb_v ⋯\n                                                  31 columns and 90 rows omitted)\n\n\n\n\n\nDo a PCA based on a same-size region elsewhere on gw13 (with low ViSHet):\n\n# get length of region\nlengthHighViSHetRegion = positionMax - positionMin\n\nleftLocus = 1_000_000 # start at 1 Mb from left side\nrightLocus = leftLocus + lengthHighViSHetRegion\nregionText_lowViSHetRegion = string(\"chr \", chr, \" \",leftLocus,\" to \",rightLocus)\n\nlociSelection = (leftLocus .&lt;= pos_region.position .&lt;= rightLocus)\ngenotypes_lowViSHetRegion = genotypes_region[:, lociSelection]\n\n# impute missing genotypes:\n\ngenotypes_lowViSHetRegion_imputed = Impute.svd(Matrix{Union{Missing, Float32}}(genotypes_lowViSHetRegion))\n\nflipPC1 = true\nflipPC2 = true\n\nPCAmodel = plotPCA(genotypes_lowViSHetRegion_imputed, ind_with_metadata_included, \n            groups_to_plot_PCA, group_colors_PCA; \n            sampleSet = \"greenish warblers\", regionText = regionText_lowViSHetRegion,\n            flip1 = flipPC1, flip2 = flipPC2,\n            lineOpacity = 0.7, fillOpacity = 0.6,\n            symbolSize = 14, showTitle = true,\n            xLabelText = string(\"Region PC1\"), yLabelText = string(\"Region PC2\"),\n            showPlot = false)\n\ndisplay(PCAmodel.PCAfig)\nif false  # set to true to save plot\n    save(\"FigureS2B_gw13_nonHLBRarbitrary_from_Julia.png\", PCAmodel.PCAfig, px_per_unit = 2.0)\nend \n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238",
    "crumbs": [
      "Home",
      "Greenish Warbler heterozygosity variance analysis"
    ]
  },
  {
    "objectID": "GW_Heterozygosity_Variance.html#tried-chr-14-but-not-very-clearseems-recombination-backcrosses-in-ludlowi",
    "href": "GW_Heterozygosity_Variance.html#tried-chr-14-but-not-very-clearseems-recombination-backcrosses-in-ludlowi",
    "title": "Greenish Warbler heterozygosity variance analysis",
    "section": "Tried chr 14 but not very clear–seems recombination backcrosses in ludlowi",
    "text": "Tried chr 14 but not very clear–seems recombination backcrosses in ludlowi",
    "crumbs": [
      "Home",
      "Greenish Warbler heterozygosity variance analysis"
    ]
  },
  {
    "objectID": "GW_Heterozygosity_Variance.html#same-for-chr-17",
    "href": "GW_Heterozygosity_Variance.html#same-for-chr-17",
    "title": "Greenish Warbler heterozygosity variance analysis",
    "section": "Same for chr 17",
    "text": "Same for chr 17\n\nShows a pattern seen in chr 2 (and others) where ludlowi samples have some plumb haplotypes\n\n# choose scaffold\nchr = \"gw17\"\n\npositionMin, positionMax, regionText, \n    windowedIndHetStanRegion, meanAcrossRegionIndHetStan,\n    genos_highViSHetRegion, pos_highViSHetRegion, regionInfo = \n    getWindowedIndHetStanRegion(genosOnly_included, \n                            pos_SNP_filtered, \n                            highViSHetRegions, chr;\n                            windowSize = 500)\n\n# inspect values for mean IndHetStan per individual for that high ViSHet region\nplot(meanAcrossRegionIndHetStan)\n\n# Add column to metadata containing the regionIndHetStan for this highHet region:\ncommand = \"ind_with_metadata_included.\" * chr * \"_regionIndHetStan = meanAcrossRegionIndHetStan\"\neval(Meta.parse(command)) # this executes the command constructed above\nind_with_metadata_included.regionIndHetStan = meanAcrossRegionIndHetStan\n\n#names(ind_with_metadata_included)\n\n# check whether missing data related to heterozygosity (good news: not really)\nplot(ind_with_metadata_included.numMissings, meanAcrossRegionIndHetStan)\n\n# PCA of all individuals:\n\ngenos_highViSHetRegion_imputed = Impute.svd(Matrix{Union{Missing, Float32}}(genos_highViSHetRegion))\n\nflipPC1 = false\nflipPC2 = false\n\nPCAmodelAll = plotPCA(genos_highViSHetRegion_imputed, ind_with_metadata_included, \n            groups_to_plot_PCA, group_colors_PCA; \n            sampleSet = \"greenish warblers\", regionText = regionText,\n            flip1 = flipPC1, flip2 = flipPC2,\n            lineOpacity = 0.7, fillOpacity = 0.6,\n            symbolSize = 14, showTitle = true,\n            xLabelText = string(\"Region PC1\"), yLabelText = string(\"Region PC2\"),\n            showPlot = false)\n\ndisplay(PCAmodelAll.PCAfig)\n\n# Add PC values to metadata for individuals included in PCA above:\nif flipPC1\n    PCAmodelAll.metadata.PC1 = -1 .* PCAmodelAll.values[1,:]\nelse \n    PCAmodelAll.metadata.PC1 = PCAmodelAll.values[1,:]\nend\nif flipPC2\n    PCAmodelAll.metadata.PC2 = -1 .* PCAmodelAll.values[2,:]\nelse\n    PCAmodelAll.metadata.PC2 = PCAmodelAll.values[2,:]\nend\nPCAmodelAll.metadata.PC3 = PCAmodelAll.values[3,:]\n\n# For the next bit to work with above, make sure that all individuals in the above `plotPCA` command\n# are included in the `groups_to_plot_PCA`\n\n# choose inds with low IndHet in high ViSHet region:\nindSelection_lowIndHetStan = (meanAcrossRegionIndHetStan .&lt; 1.4) \n\n#Plot only the lowIndHetStan individuals:\n\nf = CairoMakie.Figure();\nax = Axis(f[1, 1],\n    title = \"PC1 vs. PC2, only low heterozygosity\",\n    xlabel = \"Region PC1\", xlabelsize = 24,\n    ylabel = \"Region PC2\", ylabelsize = 24,\n    autolimitaspect = 1)\nhidedecorations!(ax, label = false, ticklabels = false, ticks = false) # hide background lattice\nfor i in eachindex(groups_to_plot_PCA) \n    selection = (PCAmodelAll.metadata.Fst_group .== groups_to_plot_PCA[i]) .& indSelection_lowIndHetStan\n    CairoMakie.scatter!(ax, PCAmodelAll.metadata.PC1[selection], PCAmodelAll.metadata.PC2[selection], marker = :diamond, color = (group_colors_PCA[i], 0.6), markersize = 14, strokewidth=0.5, strokecolor = (\"black\", 0.7))\nend\ndisplay(f)\n\nGood news: 1 region on that scaffold\n\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\nCairoMakie.Screen{IMAGE}\n\n\n\n\nSave the individual colors in the metadata\n\nindColors = fill(\"\", size(PCAmodelAll.metadata, 1))\nfor i in axes(PCAmodelAll.metadata, 1)\n    indColors[i] = group_colors_PCA[findfirst(groups_to_plot_PCA .== PCAmodelAll.metadata.Fst_group[i])]\nend\nPCAmodelAll.metadata.indColorLeft = indColors\nPCAmodelAll.metadata.indColorRight = indColors\n\n257-element Vector{String}:\n \"blue\"\n \"red\"\n \"red\"\n \"red\"\n \"red\"\n \"red\"\n \"red\"\n \"purple\"\n \"red\"\n \"red\"\n \"red\"\n \"blue\"\n \"red\"\n ⋮\n \"olivedrab2\"\n \"olivedrab2\"\n \"olivedrab2\"\n \"olivedrab2\"\n \"olivedrab2\"\n \"olivedrab2\"\n \"olivedrab2\"\n \"olivedrab2\"\n \"olivedrab2\"\n \"olivedrab2\"\n \"olivedrab2\"\n \"olivedrab2\"\n\n\n\n\nPlot PC1 vs. PC2:\n\nf = CairoMakie.Figure()\nax = Axis(f[1, 1],\n    title = \"PC1 vs. PC2\",\n    xlabel = \"Region PC1\", xlabelsize = 24,\n    ylabel = \"Region PC2\", ylabelsize = 24,\n    autolimitaspect = 1)\nhidedecorations!(ax, label = false, ticklabels = false, ticks = false) # hide background lattice\nfor i in eachindex(groups_to_plot_PCA) \n    selection = PCAmodelAll.metadata.Fst_group .== groups_to_plot_PCA[i]\n    CairoMakie.scatter!(ax, PCAmodelAll.metadata.PC1[selection], PCAmodelAll.metadata.PC2[selection], marker = :diamond, color = (group_colors_PCA[i], 0.6), markersize = 14, strokewidth=0.5, strokecolor = (\"black\", 0.7))\nend\ndisplay(f)\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\nCairoMakie.Screen{IMAGE}\n\n\n\n\nPlot PC1 vs. PC3:\n\nf = CairoMakie.Figure()\nax = Axis(f[1, 1],\n    title = \"PC1 vs. PC3\",\n    xlabel = \"Region PC1\", xlabelsize = 24,\n    ylabel = \"Region PC3\", ylabelsize = 24,\n    autolimitaspect = 1)\nhidedecorations!(ax, label = false, ticklabels = false, ticks = false) # hide background lattice\nfor i in eachindex(groups_to_plot_PCA) \n    selection = PCAmodelAll.metadata.Fst_group .== groups_to_plot_PCA[i]\n    CairoMakie.scatter!(ax, PCAmodelAll.metadata.PC1[selection], PCAmodelAll.metadata.PC3[selection], marker = :diamond, color = (group_colors_PCA[i], 0.6), markersize = 14, strokewidth=0.5, strokecolor = (\"black\", 0.7))\nend\ndisplay(f)\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\nCairoMakie.Screen{IMAGE}\n\n\n\nclusterNames = [\"virLud\",\n                \"nit\",\n                \"troch\",\n                \"obs\",\n                \"plumb\"]\n\nclusterColors = [\"blue\",\n                \"grey\",\n                \"yellow\",\n                \"orange\",\n                \"red\"]\n\nvirLud = (PCAmodelAll.metadata.PC1 .&lt; -6.5) .&\n            (0.5 .&lt; PCAmodelAll.metadata.PC2 .&lt; 4) .&\n            indSelection_lowIndHetStan\nnit = (-6 .&lt; PCAmodelAll.metadata.PC1 .&lt; -4.5) .&\n        (0.5 .&lt; PCAmodelAll.metadata.PC2 .&lt; 1.5) .&\n            indSelection_lowIndHetStan\ntroch = (2 .&lt; PCAmodelAll.metadata.PC1 .&lt; 4.5) .&\n            (PCAmodelAll.metadata.PC2 .&lt; -4) .&\n            indSelection_lowIndHetStan\nobs = (1.5 .&lt; PCAmodelAll.metadata.PC1 .&lt; 5) .&\n            (-3.5 .&lt; PCAmodelAll.metadata.PC2 .&lt; 2.5) .&\n            indSelection_lowIndHetStan\nplumb = (3.5 .&lt; PCAmodelAll.metadata.PC1) .& \n            (3 .&lt; PCAmodelAll.metadata.PC2) .&\n            indSelection_lowIndHetStan\n\n# check the individuals in each group\nPCAmodelAll.metadata.Fst_group[virLud]\nPCAmodelAll.metadata.Fst_group[nit]\nPCAmodelAll.metadata.Fst_group[troch]\nPCAmodelAll.metadata.Fst_group[obs]\nPCAmodelAll.metadata.Fst_group[plumb]\n\nclusterArray = [virLud nit troch obs plumb]\n\n# show numbers in each group\nprintln(\"The numbers in each group are $(sum(clusterArray, dims=1)) and the sum of those is $(sum(sum(clusterArray, dims=1)))\")\n\n# create vectors that indicate the groups and plot order for this analysis:\nclusterMembership = fill(\"none\", nrow(PCAmodelAll.metadata))\nplotOrder = fill(-9, nrow(PCAmodelAll.metadata))\nfor i in eachindex(clusterArray[1,:])\n    clusterMembership[clusterArray[:,i]] .= clusterNames[i]\n    plotOrder[clusterArray[:,i]] .= i\nend\n\n# Calculate allele freqs and sample sizes\nfreqs, sampleSizes = getFreqsAndSampleSizes(genos_highViSHetRegion, clusterMembership, clusterNames)\nprintln(\"Calculated population allele frequencies and sample sizes\")\n\n# Calculate per-site pi (within-group nucleotide distance)\n\nsitePi = getSitePi(freqs, sampleSizes)\n\n# calculate pairwise Dxy per site, using data in \"freqs\" and groups in \"groups\"\n\nDxy, pairwiseDxyClusterNames = getDxy(freqs, clusterNames)\n\nFst, FstNumerator, FstDenominator, pairwiseFstClusterNames = getFst(freqs, sampleSizes, clusterNames; among=false)  # set among to FALSE if no among Fst wanted (some things won't work without it) \n\n# Now get averages of pi and Dxy for whole region:\n\nregionPiTable = DataFrame(cluster = clusterNames, pi = getRegionPi(sitePi))\n#= 5×2 DataFrame\n Row │ cluster  pi         \n     │ String   Float64    \n─────┼─────────────────────\n   1 │ virLud   0.0116354\n   2 │ nit      0.0010142\n   3 │ troch    0.00706002\n   4 │ obs      0.0162496\n   5 │ plumb    0.00402182 =#\n\nregionDxyTable = DataFrame(cluster_pair = pairwiseDxyClusterNames, Dxy = getRegionDxy(Dxy))\n#= 10×2 DataFrame\n Row │ cluster_pair  Dxy       \n     │ String        Float64   \n─────┼─────────────────────────\n   1 │ virLud_nit    0.021495\n   2 │ virLud_troch  0.0329751\n   3 │ virLud_obs    0.0328026\n   4 │ virLud_plumb  0.0354124\n   5 │ nit_troch     0.0339931\n   6 │ nit_obs       0.0337221\n   7 │ nit_plumb     0.036556\n   8 │ troch_obs     0.0201926\n   9 │ troch_plumb   0.0240156\n  10 │ obs_plumb     0.0195389 =#\n\n# Make a genotype-by-individual plot using all variable loci in the region,\nmissingFractionAllowed = 0.1\n# in metadata, replace `Fst_group` column with cluster info (needed for the function below):\nPCAmodelAll.metadata.original_Fst_groups = PCAmodelAll.metadata.Fst_group # store the Fst_groups in this\nPCAmodelAll.metadata.Fst_group = clusterMembership\nPCAmodelAll.metadata.original_plot_order = PCAmodelAll.metadata.plot_order # store the original plot_order in this\nPCAmodelAll.metadata.plot_order = plotOrder\n\n# limit the SNPs to those with variants greater than 50% in \n# at least one pop, and less than 50% in at least one pop.\n# (So for each column in `freqs`, the maximum should be &gt; 0.5 \n# and the minimum should be &lt; 0.5)\nselectedSNPs = (vec(maximum(freqs, dims=1)) .&gt; 0.5) .& (vec(minimum(freqs, dims=1)) .&lt; 0.5)\ngenos_selectedSNPs = genos_highViSHetRegion[:, selectedSNPs]\npos_selectedSNPs = pos_highViSHetRegion[selectedSNPs, :]\nFst_selectedSNPs = Fst[:, selectedSNPs]\nfreqs_selectedSNPs = freqs[:, selectedSNPs]\n\n# limit the number of individuals per group to plot\nnumIndsToPlot = fill(15, length(clusterNames))\n\ngenosForGBI, indMetadataforGBI = limitIndsToPlot(clusterNames, numIndsToPlot, \n                                            genos_selectedSNPs, PCAmodelAll.metadata;\n                                            sortByMissing = true)\n\nplotGenotypeByIndividual(regionInfo, pos_selectedSNPs,\n                genosForGBI, indMetadataforGBI, freqs_selectedSNPs, clusterNames, clusterColors;\n                missingFractionAllowed = missingFractionAllowed,\n                indColorRightProvided = true)\n\nThe numbers in each group are [73 2 62 3 64] and the sum of those is 204\nCalculated population allele frequencies and sample sizes\n\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\n\n(Scene (768px, 960px):\n  0 Plots\n  2 Child Scenes:\n    ├ Scene (768px, 960px)\n    └ Scene (768px, 960px), Union{Missing, Int16}[0 0 … 0 0; 0 0 … 0 0; … ; 2 2 … 0 2; 2 2 … 0 2], [11771696, 11771805, 11824912, 11824930, 11840181, 11843613, 11854001, 11854002, 11862254, 11865895  …  12545202, 12545274, 12550749, 12556180, 12562225, 12562314, 12582178, 12584065, 12586755, 12623539], 50×36 DataFrame\n Row │ ind                           ID                            location  g ⋯\n     │ String                        String                        String7   S ⋯\n─────┼──────────────────────────────────────────────────────────────────────────\n   1 │ GW_Armando_plate1_AB1         GW_Armando_plate1_AB1         AB        v ⋯\n   2 │ GW_Armando_plate1_TTGW53      GW_Armando_plate1_TTGW53      NG        l\n   3 │ GW_Armando_plate1_TTGW58      GW_Armando_plate1_TTGW58      NG        l\n   4 │ GW_Armando_plate1_TTGW-15-09  GW_Armando_plate1_TTGW-15-09  SR        l\n   5 │ GW_Armando_plate2_JE31G01     GW_Armando_plate2_JE31G01     VB_vi     v ⋯\n   6 │ GW_Armando_plate2_JF16G02     GW_Armando_plate2_JF16G02     DV_vi     p\n   7 │ GW_Armando_plate2_JF30G01     GW_Armando_plate2_JF30G01     ST_vi     v\n   8 │ GW_Armando_plate2_TTGW16      GW_Armando_plate2_TTGW16      TH        l\n   9 │ GW_Armando_plate2_TTGW18      GW_Armando_plate2_TTGW18      TH        l ⋯\n  10 │ GW_Armando_plate2_TTGW56      GW_Armando_plate2_TTGW56      NG        l\n  11 │ GW_Armando_plate2_TTGW-15-03  GW_Armando_plate2_TTGW-15-03  SR        l\n  ⋮  │              ⋮                             ⋮                   ⋮        ⋱\n  41 │ GW_Armando_plate1_JF12G02     GW_Armando_plate1_JF12G02     ST        p\n  42 │ GW_Armando_plate1_JF13G01     GW_Armando_plate1_JF13G01     ST        p ⋯\n  43 │ GW_Armando_plate1_JF15G03     GW_Armando_plate1_JF15G03     DV        p\n  44 │ GW_Armando_plate1_JF22G01     GW_Armando_plate1_JF22G01     MB        p\n  45 │ GW_Armando_plate1_JF23G02     GW_Armando_plate1_JF23G02     VB        p\n  46 │ GW_Armando_plate1_JF26G01     GW_Armando_plate1_JF26G01     ST        p ⋯\n  47 │ GW_Armando_plate1_JF27G01     GW_Armando_plate1_JF27G01     ST        p\n  48 │ GW_Armando_plate1_JF29G02     GW_Armando_plate1_JF29G02     ST        p\n  49 │ GW_Armando_plate1_JF29G03     GW_Armando_plate1_JF29G03     ST        p\n  50 │ GW_Armando_plate1_JG02G04     GW_Armando_plate1_JG02G04     PR        p ⋯\n                                                  33 columns and 29 rows omitted)\n\n\n\n\n\nNow show a GBI plot like above, but with heterozygotes:\n\nclusterNamesWithHets = [\"virLud\",\n                        \"nit\",\n                        \"virLud_troch\",\n                        \"troch\",\n                        \"virLud_obs\",\n                        \"obs\",\n                        \"troch_plumb\",\n                        \"plumb\",\n                        \"vir_plumb\"]\n\nclusterColorsWithHets = [\"blue\",\n                        \"grey\",\n                        \"green\",\n                        \"yellow\",\n                        \"olive\",\n                        \"orange\",\n                        \"coral\",\n                        \"red\",\n                        \"purple\"]\n\nvirLud_troch = (-5 .&lt; PCAmodelAll.metadata.PC1 .&lt; 0) .&\n                (-4 .&lt; PCAmodelAll.metadata.PC2 .&lt; -0.7) .&\n                 .!indSelection_lowIndHetStan\nvirLud_obs = (-3 .&lt; PCAmodelAll.metadata.PC1 .&lt; -1) .&\n                (-0.5 .&lt; PCAmodelAll.metadata.PC2 .&lt; 0) .&\n                 .!indSelection_lowIndHetStan\ntroch_plumb = (1.5 .&lt; PCAmodelAll.metadata.PC1 .&lt; 5.5) .&\n                (-3 .&lt; PCAmodelAll.metadata.PC2 .&lt; 2) .&\n                 .!indSelection_lowIndHetStan\nvir_plumb = (-2.5 .&lt; PCAmodelAll.metadata.PC1 .&lt; 1) .&\n                (2 .&lt; PCAmodelAll.metadata.PC2 .&lt; 5) .&\n                 .!indSelection_lowIndHetStan\n\nclusterArray = [virLud nit virLud_troch troch virLud_obs obs troch_plumb plumb vir_plumb]\n\nsum(clusterArray, dims=1)\n\nif sum(sum(clusterArray, dims=1)) == size(PCAmodelAll.metadata, 1)\n    println(\"Good news: Individuals included in a group matches total number of individuals\")\nelse \n    println(\"Warning: Individuals included in a group ($(sum(sum(clusterArray, dims=1)))) do NOT match total number of individuals ($(size(PCAmodelAll.metadata, 1)))\")\nend\n\n\n# check which individuals left out:\n\nsum(clusterArray, dims=2)\n\nPCAmodelAll.metadata.ind[vec(sum(clusterArray, dims=2) .== 0)]\nPCAmodelAll.metadata.PC1[vec(sum(clusterArray, dims=2) .== 0)]\nPCAmodelAll.metadata.PC2[vec(sum(clusterArray, dims=2) .== 0)]\nindSelection_lowIndHetStan[vec(sum(clusterArray, dims=2) .== 0)]\n\n# create vectors that indicate the groups and plot order for this analysis:\nclusterMembershipWithHets = fill(\"none\", nrow(PCAmodelAll.metadata))\nplotOrderWithHets = fill(-9, nrow(PCAmodelAll.metadata))\nfor i in eachindex(clusterArray[1,:])\n    clusterMembershipWithHets[clusterArray[:,i]] .= clusterNamesWithHets[i]\n    plotOrderWithHets[clusterArray[:,i]] .= i\nend\n\n# Add column to main metadata object containing the cluster membership for this highHet region:\ncommand = \"ind_with_metadata_included.\" * chr * \"_cluster = clusterMembershipWithHets\"\neval(Meta.parse(command)) # this executes the command constructed above\n\n# in metadata, replace `Fst_group` column with cluster info (needed for the function below):\nPCAmodelAll.metadata.Fst_group = clusterMembershipWithHets\nPCAmodelAll.metadata.plot_order = plotOrderWithHets\n\n# limit the number of individuals per group to plot\nnumIndsToPlotWithHets = fill(100, length(clusterNamesWithHets))\n\ngenosForGBI, indMetadataforGBI = limitIndsToPlot(clusterNamesWithHets, numIndsToPlotWithHets, \n                                            genos_selectedSNPs, PCAmodelAll.metadata;\n                                            sortByMissing = true)\n\nplotGenotypeByIndividual(regionInfo, pos_selectedSNPs,\n                genosForGBI, indMetadataforGBI, freqs_selectedSNPs, clusterNamesWithHets, clusterColorsWithHets;\n                missingFractionAllowed = missingFractionAllowed,\n                indColorLeftProvided = false,\n                indColorRightProvided = true)\n\nGood news: Individuals included in a group matches total number of individuals\n\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\n\n(Scene (768px, 960px):\n  0 Plots\n  2 Child Scenes:\n    ├ Scene (768px, 960px)\n    └ Scene (768px, 960px), Union{Missing, Int16}[0 0 … 0 0; 0 0 … 0 0; … ; 1 1 … 0 1; 1 2 … 0 1], [11771696, 11771805, 11824912, 11824930, 11840181, 11843613, 11854001, 11854002, 11862254, 11865895  …  12545202, 12545274, 12550749, 12556180, 12562225, 12562314, 12582178, 12584065, 12586755, 12623539], 257×36 DataFrame\n Row │ ind                           ID                            location  g ⋯\n     │ String                        String                        String7   S ⋯\n─────┼──────────────────────────────────────────────────────────────────────────\n   1 │ GW_Armando_plate1_AB1         GW_Armando_plate1_AB1         AB        v ⋯\n   2 │ GW_Armando_plate1_TTGW53      GW_Armando_plate1_TTGW53      NG        l\n   3 │ GW_Armando_plate1_TTGW58      GW_Armando_plate1_TTGW58      NG        l\n   4 │ GW_Armando_plate1_TTGW-15-09  GW_Armando_plate1_TTGW-15-09  SR        l\n   5 │ GW_Armando_plate2_JE31G01     GW_Armando_plate2_JE31G01     VB_vi     v ⋯\n   6 │ GW_Armando_plate2_JF16G02     GW_Armando_plate2_JF16G02     DV_vi     p\n   7 │ GW_Armando_plate2_JF30G01     GW_Armando_plate2_JF30G01     ST_vi     v\n   8 │ GW_Armando_plate2_TTGW16      GW_Armando_plate2_TTGW16      TH        l\n   9 │ GW_Armando_plate2_TTGW18      GW_Armando_plate2_TTGW18      TH        l ⋯\n  10 │ GW_Armando_plate2_TTGW56      GW_Armando_plate2_TTGW56      NG        l\n  11 │ GW_Armando_plate2_TTGW-15-03  GW_Armando_plate2_TTGW-15-03  SR        l\n  ⋮  │              ⋮                             ⋮                   ⋮        ⋱\n 248 │ GW_Armando_plate2_JF10G02     GW_Armando_plate2_JF10G02     ST        p\n 249 │ GW_Armando_plate2_JF14G01     GW_Armando_plate2_JF14G01     DV        p ⋯\n 250 │ GW_Armando_plate2_JG12G02     GW_Armando_plate2_JG12G02     ST        p\n 251 │ GW_Armando_plate2_TTGW24      GW_Armando_plate2_TTGW24      SR        l\n 252 │ GW_Armando_plate2_TTGW25      GW_Armando_plate2_TTGW25      SR        l\n 253 │ GW_Armando_plate2_TTGW-15-01  GW_Armando_plate2_TTGW-15-01  SR        l ⋯\n 254 │ GW_Armando_plate2_JF08G04     GW_Armando_plate2_JF08G04     ST        p\n 255 │ GW_Lane5_UY6                  GW_Lane5_UY6                  UY        p\n 256 │ GW_Armando_plate2_TTGW-15-10  GW_Armando_plate2_TTGW-15-10  SR        l\n 257 │ GW_Lane5_UY3                  GW_Lane5_UY3                  UY        p ⋯\n                                                 33 columns and 236 rows omitted)\n\n\n\n\n\nChr 17 above shows interesting pattern with plumb haplotype more widespread–found in ludlowi, and the obscuratus pattern complex with recombination. I checked chr 17 carefully in the summary plot, and it looks good.",
    "crumbs": [
      "Home",
      "Greenish Warbler heterozygosity variance analysis"
    ]
  },
  {
    "objectID": "GW_Heterozygosity_Variance.html#same-for-chr-19",
    "href": "GW_Heterozygosity_Variance.html#same-for-chr-19",
    "title": "Greenish Warbler heterozygosity variance analysis",
    "section": "Same for chr 19",
    "text": "Same for chr 19\n\n# choose scaffold\nchr = \"gw19\"\n\npositionMin, positionMax, regionText, \n    windowedIndHetStanRegion, meanAcrossRegionIndHetStan,\n    genos_highViSHetRegion, pos_highViSHetRegion, regionInfo = \n    getWindowedIndHetStanRegion(genosOnly_included, \n                            pos_SNP_filtered, \n                            highViSHetRegions, chr;\n                            windowSize = 500)\n\n# inspect values for mean IndHetStan per individual for that high ViSHet region\nplot(meanAcrossRegionIndHetStan)\n\n# Add column to metadata containing the regionIndHetStan for this highHet region:\ncommand = \"ind_with_metadata_included.\" * chr * \"_regionIndHetStan = meanAcrossRegionIndHetStan\"\neval(Meta.parse(command)) # this executes the command constructed above\nind_with_metadata_included.regionIndHetStan = meanAcrossRegionIndHetStan\n\n#names(ind_with_metadata_included)\n\n# check whether missing data related to heterozygosity (good news: not really)\nplot(ind_with_metadata_included.numMissings, meanAcrossRegionIndHetStan)\n\n# PCA of all individuals:\n\ngenos_highViSHetRegion_imputed = Impute.svd(Matrix{Union{Missing, Float32}}(genos_highViSHetRegion))\n\nflipPC1 = true\nflipPC2 = true\n\nPCAmodelAll = plotPCA(genos_highViSHetRegion_imputed, ind_with_metadata_included, \n            groups_to_plot_PCA, group_colors_PCA; \n            sampleSet = \"greenish warblers\", regionText = regionText,\n            flip1 = flipPC1, flip2 = flipPC2,\n            lineOpacity = 0.7, fillOpacity = 0.6,\n            symbolSize = 14, showTitle = true,\n            xLabelText = string(\"Region PC1\"), yLabelText = string(\"Region PC2\"),\n            showPlot = false)\n\ndisplay(PCAmodelAll.PCAfig)\n\n# Add PC values to metadata for individuals included in PCA above:\nif flipPC1\n    PCAmodelAll.metadata.PC1 = -1 .* PCAmodelAll.values[1,:]\nelse \n    PCAmodelAll.metadata.PC1 = PCAmodelAll.values[1,:]\nend\nif flipPC2\n    PCAmodelAll.metadata.PC2 = -1 .* PCAmodelAll.values[2,:]\nelse\n    PCAmodelAll.metadata.PC2 = PCAmodelAll.values[2,:]\nend\nPCAmodelAll.metadata.PC3 = PCAmodelAll.values[3,:]\n\n# For the next bit to work with above, make sure that all individuals in the above `plotPCA` command\n# are included in the `groups_to_plot_PCA`\n\n# choose inds with low IndHet in high ViSHet region:\nindSelection_lowIndHetStan = (meanAcrossRegionIndHetStan .&lt; 1.5) \n\n#Plot only the lowIndHetStan individuals:\n\nf = CairoMakie.Figure();\nax = Axis(f[1, 1],\n    title = \"PC1 vs. PC2, only low heterozygosity\",\n    xlabel = \"Region PC1\", xlabelsize = 24,\n    ylabel = \"Region PC2\", ylabelsize = 24,\n    autolimitaspect = 1)\nhidedecorations!(ax, label = false, ticklabels = false, ticks = false) # hide background lattice\nfor i in eachindex(groups_to_plot_PCA) \n    selection = (PCAmodelAll.metadata.Fst_group .== groups_to_plot_PCA[i]) .& indSelection_lowIndHetStan\n    CairoMakie.scatter!(ax, PCAmodelAll.metadata.PC1[selection], PCAmodelAll.metadata.PC2[selection], marker = :diamond, color = (group_colors_PCA[i], 0.6), markersize = 14, strokewidth=0.5, strokecolor = (\"black\", 0.7))\nend\ndisplay(f)\n\nGood news: 1 region on that scaffold\n\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\nCairoMakie.Screen{IMAGE}\n\n\n\nSave the individual colors in the metadata\n\nindColors = fill(\"\", size(PCAmodelAll.metadata, 1))\nfor i in axes(PCAmodelAll.metadata, 1)\n    indColors[i] = group_colors_PCA[findfirst(groups_to_plot_PCA .== PCAmodelAll.metadata.Fst_group[i])]\nend\nPCAmodelAll.metadata.indColorLeft = indColors\nPCAmodelAll.metadata.indColorRight = indColors\n\n257-element Vector{String}:\n \"blue\"\n \"red\"\n \"red\"\n \"red\"\n \"red\"\n \"red\"\n \"red\"\n \"purple\"\n \"red\"\n \"red\"\n \"red\"\n \"blue\"\n \"red\"\n ⋮\n \"olivedrab2\"\n \"olivedrab2\"\n \"olivedrab2\"\n \"olivedrab2\"\n \"olivedrab2\"\n \"olivedrab2\"\n \"olivedrab2\"\n \"olivedrab2\"\n \"olivedrab2\"\n \"olivedrab2\"\n \"olivedrab2\"\n \"olivedrab2\"\n\n\n\n\nPlot PC1 vs. PC2:\n\nf = CairoMakie.Figure()\nax = Axis(f[1, 1],\n    title = \"PC1 vs. PC2\",\n    xlabel = \"Region PC1\", xlabelsize = 24,\n    ylabel = \"Region PC2\", ylabelsize = 24,\n    autolimitaspect = 1)\nhidedecorations!(ax, label = false, ticklabels = false, ticks = false) # hide background lattice\nfor i in eachindex(groups_to_plot_PCA) \n    selection = PCAmodelAll.metadata.Fst_group .== groups_to_plot_PCA[i]\n    CairoMakie.scatter!(ax, PCAmodelAll.metadata.PC1[selection], PCAmodelAll.metadata.PC2[selection], marker = :diamond, color = (group_colors_PCA[i], 0.6), markersize = 14, strokewidth=0.5, strokecolor = (\"black\", 0.7))\nend\ndisplay(f)\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\nCairoMakie.Screen{IMAGE}\n\n\n\n\nPlot PC1 vs. PC3:\n\nf = CairoMakie.Figure()\nax = Axis(f[1, 1],\n    title = \"PC1 vs. PC3\",\n    xlabel = \"Region PC1\", xlabelsize = 24,\n    ylabel = \"Region PC3\", ylabelsize = 24,\n    autolimitaspect = 1)\nhidedecorations!(ax, label = false, ticklabels = false, ticks = false) # hide background lattice\nfor i in eachindex(groups_to_plot_PCA) \n    selection = PCAmodelAll.metadata.Fst_group .== groups_to_plot_PCA[i]\n    CairoMakie.scatter!(ax, PCAmodelAll.metadata.PC1[selection], PCAmodelAll.metadata.PC3[selection], marker = :diamond, color = (group_colors_PCA[i], 0.6), markersize = 14, strokewidth=0.5, strokecolor = (\"black\", 0.7))\nend\ndisplay(f)\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\nCairoMakie.Screen{IMAGE}\n\n\n\n\nAt chr 19 high ViSHet region, there are 4 clear homozygous haplogroups (vir and lud separated though on PC3, but not clearly enough to show in summary plot). Divide samples into those groups, based on PCA scores, and then calculate pi within and pi between\n\nclusterNames = [\"virLud\",\n                \"nit\",\n                \"trochObs\",\n                \"plumb\"]\n\nclusterColors = [\"blue\",\n                \"grey\",\n                \"yellow\",\n                \"red\"]\n\nvirLud = (PCAmodelAll.metadata.PC1 .&lt; -4) .&\n            (2 .&lt; PCAmodelAll.metadata.PC2) .&\n            indSelection_lowIndHetStan\nnit = (-4 .&lt; PCAmodelAll.metadata.PC1 .&lt; -2) .&\n        (1 .&lt; PCAmodelAll.metadata.PC2 .&lt; 2.5) .&\n            indSelection_lowIndHetStan\ntrochObs = (-1.5 .&lt; PCAmodelAll.metadata.PC1 .&lt; 1.5) .&\n            (PCAmodelAll.metadata.PC2 .&lt; -3.5) .&\n            indSelection_lowIndHetStan\nplumb = (5 .&lt; PCAmodelAll.metadata.PC1) .& \n            (1.5 .&lt; PCAmodelAll.metadata.PC2) .&\n            indSelection_lowIndHetStan\n\n# check the individuals in each group\nPCAmodelAll.metadata.Fst_group[virLud]\nPCAmodelAll.metadata.Fst_group[nit]\nPCAmodelAll.metadata.Fst_group[trochObs]\nPCAmodelAll.metadata.Fst_group[plumb]\n\nclusterArray = [virLud nit trochObs plumb]\n\n# show numbers in each group\nprintln(\"The numbers in each group are $(sum(clusterArray, dims=1)) and the sum of those is $(sum(sum(clusterArray, dims=1)))\")\n\n# create vectors that indicate the groups and plot order for this analysis:\nclusterMembership = fill(\"none\", nrow(PCAmodelAll.metadata))\nplotOrder = fill(-9, nrow(PCAmodelAll.metadata))\nfor i in eachindex(clusterArray[1,:])\n    clusterMembership[clusterArray[:,i]] .= clusterNames[i]\n    plotOrder[clusterArray[:,i]] .= i\nend\n\n# Calculate allele freqs and sample sizes\nfreqs, sampleSizes = getFreqsAndSampleSizes(genos_highViSHetRegion, clusterMembership, clusterNames)\nprintln(\"Calculated population allele frequencies and sample sizes\")\n\n# Calculate per-site pi (within-group nucleotide distance)\n\nsitePi = getSitePi(freqs, sampleSizes)\n\n# calculate pairwise Dxy per site, using data in \"freqs\" and groups in \"groups\"\n\nDxy, pairwiseDxyClusterNames = getDxy(freqs, clusterNames)\n\nFst, FstNumerator, FstDenominator, pairwiseFstClusterNames = getFst(freqs, sampleSizes, clusterNames; among=false)  # set among to FALSE if no among Fst wanted (some things won't work without it) \n\n# Now get averages of pi and Dxy for whole region:\n\nregionPiTable = DataFrame(cluster = clusterNames, pi = getRegionPi(sitePi))\n#= 4×2 DataFrame\n Row │ cluster   pi         \n     │ String    Float64    \n─────┼──────────────────────\n   1 │ virLud    0.0144925\n   2 │ nit       0.0052608\n   3 │ trochObs  0.0150341\n   4 │ plumb     0.00320386 =#\n\nregionDxyTable = DataFrame(cluster_pair = pairwiseDxyClusterNames, Dxy = getRegionDxy(Dxy))\n#= 6×2 DataFrame\n Row │ cluster_pair     Dxy       \n     │ String           Float64   \n─────┼────────────────────────────\n   1 │ virLud_nit       0.0291485\n   2 │ virLud_trochObs  0.0330435\n   3 │ virLud_plumb     0.0347335\n   4 │ nit_trochObs     0.0359384\n   5 │ nit_plumb        0.0373399\n   6 │ trochObs_plumb   0.0289202 =#\n\n# Make a genotype-by-individual plot using all variable loci in the region,\nmissingFractionAllowed = 0.1\n# in metadata, replace `Fst_group` column with cluster info (needed for the function below):\nPCAmodelAll.metadata.original_Fst_groups = PCAmodelAll.metadata.Fst_group # store the Fst_groups in this\nPCAmodelAll.metadata.Fst_group = clusterMembership\nPCAmodelAll.metadata.original_plot_order = PCAmodelAll.metadata.plot_order # store the original plot_order in this\nPCAmodelAll.metadata.plot_order = plotOrder\n\n# limit the SNPs to those with variants greater than 50% in \n# at least one pop, and less than 50% in at least one pop.\n# (So for each column in `freqs`, the maximum should be &gt; 0.5 \n# and the minimum should be &lt; 0.5)\nselectedSNPs = (vec(maximum(freqs, dims=1)) .&gt; 0.5) .& (vec(minimum(freqs, dims=1)) .&lt; 0.5)\ngenos_selectedSNPs = genos_highViSHetRegion[:, selectedSNPs]\npos_selectedSNPs = pos_highViSHetRegion[selectedSNPs, :]\nFst_selectedSNPs = Fst[:, selectedSNPs]\nfreqs_selectedSNPs = freqs[:, selectedSNPs]\n\n# limit the number of individuals per group to plot\nnumIndsToPlot = fill(15, length(clusterNames))\n\ngenosForGBI, indMetadataforGBI = limitIndsToPlot(clusterNames, numIndsToPlot, \n                                            genos_selectedSNPs, PCAmodelAll.metadata;\n                                            sortByMissing = true)\n\nplotGenotypeByIndividual(regionInfo, pos_selectedSNPs,\n                genosForGBI, indMetadataforGBI, freqs_selectedSNPs, clusterNames, clusterColors;\n                missingFractionAllowed = missingFractionAllowed,\n                indColorRightProvided = true)\n\nThe numbers in each group are [70 2 67 66] and the sum of those is 205\nCalculated population allele frequencies and sample sizes\n\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\n\n(Scene (768px, 960px):\n  0 Plots\n  2 Child Scenes:\n    ├ Scene (768px, 960px)\n    └ Scene (768px, 960px), Union{Missing, Int16}[0 0 … 0 0; 0 0 … 0 0; … ; 2 2 … 2 2; 2 2 … 2 2], [63088, 70570, 71423, 74630, 78271, 89983, 89997, 132730, 153219, 167981  …  925752, 925762, 925928, 939829, 945566, 950361, 952095, 975932, 976062, 984894], 47×38 DataFrame\n Row │ ind                           ID                            location  g ⋯\n     │ String                        String                        String7   S ⋯\n─────┼──────────────────────────────────────────────────────────────────────────\n   1 │ GW_Armando_plate1_AB1         GW_Armando_plate1_AB1         AB        v ⋯\n   2 │ GW_Armando_plate1_TL3         GW_Armando_plate1_TL3         TL        v\n   3 │ GW_Armando_plate1_TTGW10      GW_Armando_plate1_TTGW10      SU        l\n   4 │ GW_Armando_plate1_TTGW22      GW_Armando_plate1_TTGW22      SR        l\n   5 │ GW_Armando_plate1_TTGW57      GW_Armando_plate1_TTGW57      NG        l ⋯\n   6 │ GW_Armando_plate1_TTGW-15-07  GW_Armando_plate1_TTGW-15-07  SR        l\n   7 │ GW_Armando_plate2_JF03G01     GW_Armando_plate2_JF03G01     ST_vi     v\n   8 │ GW_Armando_plate2_JF03G02     GW_Armando_plate2_JF03G02     VB_vi     v\n   9 │ GW_Armando_plate2_JF16G02     GW_Armando_plate2_JF16G02     DV_vi     p ⋯\n  10 │ GW_Armando_plate2_TTGW12      GW_Armando_plate2_TTGW12      TH        l\n  11 │ GW_Armando_plate2_TTGW14      GW_Armando_plate2_TTGW14      TH        l\n  ⋮  │              ⋮                             ⋮                   ⋮        ⋱\n  38 │ GW_Armando_plate1_JF15G03     GW_Armando_plate1_JF15G03     DV        p\n  39 │ GW_Armando_plate1_JF23G01     GW_Armando_plate1_JF23G01     VB        p ⋯\n  40 │ GW_Armando_plate1_JF23G02     GW_Armando_plate1_JF23G02     VB        p\n  41 │ GW_Armando_plate1_JF26G01     GW_Armando_plate1_JF26G01     ST        p\n  42 │ GW_Armando_plate1_JF27G01     GW_Armando_plate1_JF27G01     ST        p\n  43 │ GW_Armando_plate1_JF29G01     GW_Armando_plate1_JF29G01     ST        p ⋯\n  44 │ GW_Armando_plate1_JF29G02     GW_Armando_plate1_JF29G02     ST        p\n  45 │ GW_Armando_plate1_JF29G03     GW_Armando_plate1_JF29G03     ST        p\n  46 │ GW_Armando_plate1_JG02G02     GW_Armando_plate1_JG02G02     PR        p\n  47 │ GW_Armando_plate1_JG12G01     GW_Armando_plate1_JG12G01     ST        p ⋯\n                                                  35 columns and 26 rows omitted)\n\n\n\n\n\nNow show a GBI plot like above, but with heterozygotes:\n\nclusterNamesWithHets = [\"virLud\",\n                \"virLudHet\",\n                \"nit\",\n                \"virLud_trochObs\",\n                \"trochObs\",\n                \"trochObsHet\",\n                \"trochObs_plumb\",\n                \"plumb\",\n                \"vir_plumb\"]\n\nclusterColorsWithHets = [\"blue\",\n                \"blue\",\n                \"grey\",\n                \"green\",\n                \"yellow\",\n                \"yellow\",\n                \"orange\",\n                \"red\",\n                \"purple\"]\n\nvirLudHet = (-8 .&lt; PCAmodelAll.metadata.PC1 .&lt; -4) .&\n                (1.5 .&lt; PCAmodelAll.metadata.PC2 .&lt; 5) .&\n                 .!indSelection_lowIndHetStan\nvirLud_trochObs = (-4 .&lt; PCAmodelAll.metadata.PC1 .&lt; -1) .&\n                (-3.5 .&lt; PCAmodelAll.metadata.PC2 .&lt; 0.5) .&\n                 .!indSelection_lowIndHetStan\ntrochObsHet = (-1.5 .&lt; PCAmodelAll.metadata.PC1 .&lt; 1.5) .&\n                (PCAmodelAll.metadata.PC2 .&lt; -3.5) .&\n                 .!indSelection_lowIndHetStan\ntrochObs_plumb = (1.5 .&lt; PCAmodelAll.metadata.PC1 .&lt; 5) .&\n                (-3.5 .&lt; PCAmodelAll.metadata.PC2 .&lt; 0) .&\n                 .!indSelection_lowIndHetStan\nvir_plumb = (-1 .&lt; PCAmodelAll.metadata.PC1 .&lt; 1.5) .&\n                (2 .&lt; PCAmodelAll.metadata.PC2 .&lt; 5) .&\n                 .!indSelection_lowIndHetStan\n\nclusterArray = [virLud virLudHet nit virLud_trochObs trochObs trochObsHet trochObs_plumb plumb vir_plumb]\n\nsum(clusterArray, dims=1)\n\nif sum(sum(clusterArray, dims=1)) == size(PCAmodelAll.metadata, 1)\n    println(\"Good news: Individuals included in a group matches total number of individuals\")\nelse \n    println(\"Warning: Individuals included in a group ($(sum(sum(clusterArray, dims=1)))) do NOT match total number of individuals ($(size(PCAmodelAll.metadata, 1)))\")\nend\n\n\n# check which individuals left out:\n\nsum(clusterArray, dims=2)\n\nPCAmodelAll.metadata.ind[vec(sum(clusterArray, dims=2) .== 0)]\nPCAmodelAll.metadata.PC1[vec(sum(clusterArray, dims=2) .== 0)]\nPCAmodelAll.metadata.PC2[vec(sum(clusterArray, dims=2) .== 0)]\nindSelection_lowIndHetStan[vec(sum(clusterArray, dims=2) .== 0)]\n\n# create vectors that indicate the groups and plot order for this analysis:\nclusterMembershipWithHets = fill(\"none\", nrow(PCAmodelAll.metadata))\nplotOrderWithHets = fill(-9, nrow(PCAmodelAll.metadata))\nfor i in eachindex(clusterArray[1,:])\n    clusterMembershipWithHets[clusterArray[:,i]] .= clusterNamesWithHets[i]\n    plotOrderWithHets[clusterArray[:,i]] .= i\nend\n\n# Add column to main metadata object containing the cluster membership for this highHet region:\ncommand = \"ind_with_metadata_included.\" * chr * \"_cluster = clusterMembershipWithHets\"\neval(Meta.parse(command)) # this executes the command constructed above\n\n# in metadata, replace `Fst_group` column with cluster info (needed for the function below):\nPCAmodelAll.metadata.Fst_group = clusterMembershipWithHets\nPCAmodelAll.metadata.plot_order = plotOrderWithHets\n\n# limit the number of individuals per group to plot\nnumIndsToPlotWithHets = fill(15, length(clusterNamesWithHets))\n\ngenosForGBI, indMetadataforGBI = limitIndsToPlot(clusterNamesWithHets, numIndsToPlotWithHets, \n                                            genos_selectedSNPs, PCAmodelAll.metadata;\n                                            sortByMissing = true)\n\nplotGenotypeByIndividual(regionInfo, pos_selectedSNPs,\n                genosForGBI, indMetadataforGBI, freqs_selectedSNPs, clusterNamesWithHets, clusterColorsWithHets;\n                missingFractionAllowed = missingFractionAllowed,\n                indColorLeftProvided = false,\n                indColorRightProvided = true)\n\nGood news: Individuals included in a group matches total number of individuals\n\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\n\n(Scene (768px, 960px):\n  0 Plots\n  2 Child Scenes:\n    ├ Scene (768px, 960px)\n    └ Scene (768px, 960px), Union{Missing, Int16}[0 0 … 0 0; 0 0 … 0 0; … ; 1 1 … 1 1; 2 1 … -99 1], [63088, 70570, 71423, 74630, 78271, 89983, 89997, 132730, 153219, 167981  …  925752, 925762, 925928, 939829, 945566, 950361, 952095, 975932, 976062, 984894], 82×38 DataFrame\n Row │ ind                           ID                            location  g ⋯\n     │ String                        String                        String7   S ⋯\n─────┼──────────────────────────────────────────────────────────────────────────\n   1 │ GW_Armando_plate1_AB1         GW_Armando_plate1_AB1         AB        v ⋯\n   2 │ GW_Armando_plate1_TL3         GW_Armando_plate1_TL3         TL        v\n   3 │ GW_Armando_plate1_TTGW10      GW_Armando_plate1_TTGW10      SU        l\n   4 │ GW_Armando_plate1_TTGW22      GW_Armando_plate1_TTGW22      SR        l\n   5 │ GW_Armando_plate1_TTGW57      GW_Armando_plate1_TTGW57      NG        l ⋯\n   6 │ GW_Armando_plate1_TTGW-15-07  GW_Armando_plate1_TTGW-15-07  SR        l\n   7 │ GW_Armando_plate2_JF03G01     GW_Armando_plate2_JF03G01     ST_vi     v\n   8 │ GW_Armando_plate2_JF03G02     GW_Armando_plate2_JF03G02     VB_vi     v\n   9 │ GW_Armando_plate2_JF16G02     GW_Armando_plate2_JF16G02     DV_vi     p ⋯\n  10 │ GW_Armando_plate2_TTGW12      GW_Armando_plate2_TTGW12      TH        l\n  11 │ GW_Armando_plate2_TTGW14      GW_Armando_plate2_TTGW14      TH        l\n  ⋮  │              ⋮                             ⋮                   ⋮        ⋱\n  73 │ GW_Armando_plate1_JF29G01     GW_Armando_plate1_JF29G01     ST        p\n  74 │ GW_Armando_plate1_JF29G02     GW_Armando_plate1_JF29G02     ST        p ⋯\n  75 │ GW_Armando_plate1_JF29G03     GW_Armando_plate1_JF29G03     ST        p\n  76 │ GW_Armando_plate1_JG02G02     GW_Armando_plate1_JG02G02     PR        p\n  77 │ GW_Armando_plate1_JG12G01     GW_Armando_plate1_JG12G01     ST        p\n  78 │ GW_Armando_plate1_JF07G03     GW_Armando_plate1_JF07G03     ST        p ⋯\n  79 │ GW_Armando_plate1_JF10G03     GW_Armando_plate1_JF10G03     ST        p\n  80 │ GW_Armando_plate1_JF24G02     GW_Armando_plate1_JF24G02     VB        p\n  81 │ GW_Armando_plate2_JF15G01     GW_Armando_plate2_JF15G01     DV        p\n  82 │ GW_Armando_plate1_JF12G02     GW_Armando_plate1_JF12G02     ST        p ⋯\n                                                  35 columns and 61 rows omitted)\n\n\n\n\n\nshow GBI plot according to original groups and plot order\n\nPCAmodelAll.metadata.plot_order = PCAmodelAll.metadata.original_plot_order\n\ngenosForGBI, indMetadataforGBI = limitIndsToPlot(clusterNamesWithHets, numIndsToPlotWithHets, \n                                            genos_selectedSNPs, PCAmodelAll.metadata;\n                                            sortByMissing = true)\n\nplotGenotypeByIndividual(regionInfo, pos_selectedSNPs,\n                genosForGBI, indMetadataforGBI, freqs_selectedSNPs, clusterNamesWithHets, clusterColorsWithHets;\n                missingFractionAllowed = missingFractionAllowed,\n                indColorLeftProvided = false,\n                indColorRightProvided = true)\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\n\n(Scene (768px, 960px):\n  0 Plots\n  2 Child Scenes:\n    ├ Scene (768px, 960px)\n    └ Scene (768px, 960px), Union{Missing, Int16}[0 0 … 0 0; 0 0 … 0 0; … ; 2 2 … 2 2; 0 1 … 1 2], [63088, 70570, 71423, 74630, 78271, 89983, 89997, 132730, 153219, 167981  …  925752, 925762, 925928, 939829, 945566, 950361, 952095, 975932, 976062, 984894], 82×38 DataFrame\n Row │ ind                        ID                         location  group   ⋯\n     │ String                     String                     String7   String1 ⋯\n─────┼──────────────────────────────────────────────────────────────────────────\n   1 │ GW_Armando_plate2_JF03G01  GW_Armando_plate2_JF03G01  ST_vi     vir_mis ⋯\n   2 │ GW_Armando_plate2_JF30G01  GW_Armando_plate2_JF30G01  ST_vi     vir_mis\n   3 │ GW_Armando_plate2_JF16G02  GW_Armando_plate2_JF16G02  DV_vi     plumb_v\n   4 │ GW_Armando_plate2_JF03G02  GW_Armando_plate2_JF03G02  VB_vi     vir_mis\n   5 │ GW_Armando_plate1_AB1      GW_Armando_plate1_AB1      AB        vir     ⋯\n   6 │ GW_Armando_plate1_TL3      GW_Armando_plate1_TL3      TL        vir\n   7 │ GW_Lane5_TU1               GW_Lane5_TU1               TU        nit\n   8 │ GW_Lane5_TU2               GW_Lane5_TU2               TU        nit\n   9 │ GW_Armando_plate1_TTGW72   GW_Armando_plate1_TTGW72   SA        lud_Sat ⋯\n  10 │ GW_Armando_plate1_TTGW78   GW_Armando_plate1_TTGW78   SA        lud_Sat\n  11 │ GW_Armando_plate2_TTGW77   GW_Armando_plate2_TTGW77   SA        lud_Sat\n  ⋮  │             ⋮                          ⋮                 ⋮            ⋮ ⋱\n  73 │ GW_Armando_plate1_JG12G01  GW_Armando_plate1_JG12G01  ST        plumb\n  74 │ GW_Armando_plate1_JF07G03  GW_Armando_plate1_JF07G03  ST        plumb   ⋯\n  75 │ GW_Armando_plate1_JF12G02  GW_Armando_plate1_JF12G02  ST        plumb\n  76 │ GW_Armando_plate1_JF15G03  GW_Armando_plate1_JF15G03  DV        plumb\n  77 │ GW_Armando_plate2_JF15G01  GW_Armando_plate2_JF15G01  DV        plumb\n  78 │ GW_Armando_plate1_JF23G01  GW_Armando_plate1_JF23G01  VB        plumb   ⋯\n  79 │ GW_Armando_plate1_JF23G02  GW_Armando_plate1_JF23G02  VB        plumb\n  80 │ GW_Armando_plate1_JF24G02  GW_Armando_plate1_JF24G02  VB        plumb\n  81 │ GW_Armando_plate1_JG02G02  GW_Armando_plate1_JG02G02  PR        plumb\n  82 │ GW_Armando_plate1_JF10G03  GW_Armando_plate1_JF10G03  ST        plumb_v ⋯\n                                                  35 columns and 61 rows omitted)\n\n\n\n\n\nshow same but with all individuals\n\nPCAmodelAll.metadata.plot_order = PCAmodelAll.metadata.original_plot_order\n\n# Set no limit (or high limit anyway) on the number of individuals per group to plot\nnumIndsToPlotWithHets = fill(1000, length(clusterNamesWithHets))\n\ngenosForGBI, indMetadataforGBI = limitIndsToPlot(clusterNamesWithHets, numIndsToPlotWithHets, \n                                            genos_selectedSNPs, PCAmodelAll.metadata;\n                                            sortByMissing = false)\n\nplotGenotypeByIndividual(regionInfo, pos_selectedSNPs,\n                genosForGBI, indMetadataforGBI, freqs_selectedSNPs, clusterNamesWithHets, clusterColorsWithHets;\n                missingFractionAllowed = missingFractionAllowed,\n                indColorLeftProvided = false,\n                indColorRightProvided = true)\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\n\n(Scene (768px, 960px):\n  0 Plots\n  2 Child Scenes:\n    ├ Scene (768px, 960px)\n    └ Scene (768px, 960px), Union{Missing, Int16}[0 0 … 0 0; 0 0 … 0 0; … ; 2 2 … 2 2; 0 1 … 1 2], [63088, 70570, 71423, 74630, 78271, 89983, 89997, 132730, 153219, 167981  …  925752, 925762, 925928, 939829, 945566, 950361, 952095, 975932, 976062, 984894], 257×38 DataFrame\n Row │ ind                        ID                         location  group   ⋯\n     │ String                     String                     String7   String1 ⋯\n─────┼──────────────────────────────────────────────────────────────────────────\n   1 │ GW_Armando_plate1_JF12G04  GW_Armando_plate1_JF12G04  ST_vi     vir     ⋯\n   2 │ GW_Armando_plate2_JF03G01  GW_Armando_plate2_JF03G01  ST_vi     vir_mis\n   3 │ GW_Lane5_STvi1             GW_Lane5_STvi1             ST_vi     vir\n   4 │ GW_Lane5_STvi2             GW_Lane5_STvi2             ST_vi     vir\n   5 │ GW_Lane5_STvi3             GW_Lane5_STvi3             ST_vi     vir     ⋯\n   6 │ GW_Armando_plate2_JF30G01  GW_Armando_plate2_JF30G01  ST_vi     vir_mis\n   7 │ GW_Armando_plate1_JF16G01  GW_Armando_plate1_JF16G01  DV_vi     plumb_v\n   8 │ GW_Armando_plate2_JF16G02  GW_Armando_plate2_JF16G02  DV_vi     plumb_v\n   9 │ GW_Armando_plate2_JE31G01  GW_Armando_plate2_JE31G01  VB_vi     vir_mis ⋯\n  10 │ GW_Armando_plate2_JF03G02  GW_Armando_plate2_JF03G02  VB_vi     vir_mis\n  11 │ GW_Lane5_YK11              GW_Lane5_YK11              YK        vir\n  ⋮  │             ⋮                          ⋮                 ⋮          ⋮   ⋱\n 248 │ GW_Armando_plate2_JF25G01  GW_Armando_plate2_JF25G01  VB        plumb\n 249 │ GW_Armando_plate1_JF24G02  GW_Armando_plate1_JF24G02  VB        plumb   ⋯\n 250 │ GW_Armando_plate1_JG02G02  GW_Armando_plate1_JG02G02  PR        plumb\n 251 │ GW_Armando_plate1_JG02G04  GW_Armando_plate1_JG02G04  PR        plumb\n 252 │ GW_Armando_plate2_JG01G01  GW_Armando_plate2_JG01G01  PR        plumb\n 253 │ GW_Armando_plate2_JG02G01  GW_Armando_plate2_JG02G01  PR        plumb   ⋯\n 254 │ GW_Armando_plate2_JG02G03  GW_Armando_plate2_JG02G03  PR        plumb\n 255 │ GW_Lane5_SL1               GW_Lane5_SL1               SL        plumb\n 256 │ GW_Lane5_SL2               GW_Lane5_SL2               SL        plumb\n 257 │ GW_Armando_plate1_JF10G03  GW_Armando_plate1_JF10G03  ST        plumb_v ⋯\n                                                 35 columns and 236 rows omitted)\n\n\n\n\n\nshow same but with only vir and plumb pops\n\nincludeTheseClusters = [\"virLud\", \"plumb\"] # these are the haplotype clusters to include in the choice below of SNPs to show\n\n# Calculate allele freqs and sample sizes\nfreqs_local, sampleSizes_local = getFreqsAndSampleSizes(genos_selectedSNPs, clusterMembership, includeTheseClusters)\n\n# limit the SNPs to those with variants greater than 50% in \n# at least one pop, and less than 50% in at least one pop.\n# (So for each column in `freqs`, the maximum should be &gt; 0.5 \n# and the minimum should be &lt; 0.5)\nselectedSNPs = (vec(maximum(freqs_local, dims=1)) .&gt; 0.5) .& (vec(minimum(freqs_local, dims=1)) .&lt; 0.5)\ngenosForGBI = genos_selectedSNPs[:, selectedSNPs]\nposForGBI = pos_selectedSNPs[selectedSNPs, :]\nfreqsForGBI = freqs_local[:, selectedSNPs]\n\nplotGroups = [\"vir\", \"plumb\", \"plumb_vir\"] # these are the original Fst_groups\nplotGroupColors = [\"blue\", \"red\", \"purple\"]\n\nmetadataForGBI = copy(PCAmodelAll.metadata)\n\nmetadataForGBI.Fst_group = metadataForGBI.original_Fst_groups\n\nplotGenotypeByIndividual(regionInfo, posForGBI,\n                genosForGBI, metadataForGBI, freqsForGBI, plotGroups, plotGroupColors;\n                missingFractionAllowed = missingFractionAllowed)\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\n\n(Scene (768px, 960px):\n  0 Plots\n  2 Child Scenes:\n    ├ Scene (768px, 960px)\n    └ Scene (768px, 960px), Union{Missing, Int16}[0 0 … 0 0; 0 0 … 0 0; … ; 2 2 … 2 2; 0 1 … 1 2], [63088, 70570, 71423, 78271, 89983, 153219, 199863, 252463, 296231, 423565  …  882012, 900073, 925752, 925928, 939829, 945566, 952095, 975932, 976062, 984894], 100×38 DataFrame\n Row │ ind                        ID                         location  group   ⋯\n     │ String                     String                     String7   String1 ⋯\n─────┼──────────────────────────────────────────────────────────────────────────\n   1 │ GW_Armando_plate1_JF12G04  GW_Armando_plate1_JF12G04  ST_vi     vir     ⋯\n   2 │ GW_Armando_plate2_JF03G01  GW_Armando_plate2_JF03G01  ST_vi     vir_mis\n   3 │ GW_Armando_plate2_JF30G01  GW_Armando_plate2_JF30G01  ST_vi     vir_mis\n   4 │ GW_Lane5_STvi1             GW_Lane5_STvi1             ST_vi     vir\n   5 │ GW_Lane5_STvi2             GW_Lane5_STvi2             ST_vi     vir     ⋯\n   6 │ GW_Lane5_STvi3             GW_Lane5_STvi3             ST_vi     vir\n   7 │ GW_Armando_plate1_JF16G01  GW_Armando_plate1_JF16G01  DV_vi     plumb_v\n   8 │ GW_Armando_plate2_JF16G02  GW_Armando_plate2_JF16G02  DV_vi     plumb_v\n   9 │ GW_Armando_plate2_JE31G01  GW_Armando_plate2_JE31G01  VB_vi     vir_mis ⋯\n  10 │ GW_Armando_plate2_JF03G02  GW_Armando_plate2_JF03G02  VB_vi     vir_mis\n  11 │ GW_Lane5_YK11              GW_Lane5_YK11              YK        vir\n  ⋮  │             ⋮                          ⋮                 ⋮          ⋮   ⋱\n  91 │ GW_Armando_plate2_JF24G01  GW_Armando_plate2_JF24G01  VB        plumb\n  92 │ GW_Armando_plate2_JF25G01  GW_Armando_plate2_JF25G01  VB        plumb   ⋯\n  93 │ GW_Armando_plate1_JG02G02  GW_Armando_plate1_JG02G02  PR        plumb\n  94 │ GW_Armando_plate1_JG02G04  GW_Armando_plate1_JG02G04  PR        plumb\n  95 │ GW_Armando_plate2_JG01G01  GW_Armando_plate2_JG01G01  PR        plumb\n  96 │ GW_Armando_plate2_JG02G01  GW_Armando_plate2_JG02G01  PR        plumb   ⋯\n  97 │ GW_Armando_plate2_JG02G03  GW_Armando_plate2_JG02G03  PR        plumb\n  98 │ GW_Lane5_SL1               GW_Lane5_SL1               SL        plumb\n  99 │ GW_Lane5_SL2               GW_Lane5_SL2               SL        plumb\n 100 │ GW_Armando_plate1_JF10G03  GW_Armando_plate1_JF10G03  ST        plumb_v ⋯\n                                                  35 columns and 79 rows omitted)\n\n\n\n\n\nshow same but with only vir lud troch pops\n\nincludeTheseClusters = [\"virLud\", \"trochObs\"] # these are the haplotype clusters to include in the choice below of SNPs to show\n\n# Calculate allele freqs and sample sizes\nfreqs_local, sampleSizes_local = getFreqsAndSampleSizes(genos_selectedSNPs, clusterMembership, includeTheseClusters)\n\n# limit the SNPs to those with variants greater than 50% in \n# at least one pop, and less than 50% in at least one pop.\n# (So for each column in `freqs`, the maximum should be &gt; 0.5 \n# and the minimum should be &lt; 0.5)\nselectedSNPs = (vec(maximum(freqs_local, dims=1)) .&gt; 0.5) .& (vec(minimum(freqs_local, dims=1)) .&lt; 0.5)\ngenosForGBI = genos_selectedSNPs[:, selectedSNPs]\nposForGBI = pos_selectedSNPs[selectedSNPs, :]\nfreqsForGBI = freqs_local[:, selectedSNPs]\n\nmetadataForGBI = copy(PCAmodelAll.metadata)\nmetadataForGBI.Fst_group = metadataForGBI.original_Fst_groups\n\nplotGroups = [\"vir\", \"vir_S\", \"lud_PK\", \"lud_KS\", \"lud_central\", \"lud_Sath\", \"lud_ML\", \"troch_west\", \"troch_LN\"]\nplotGroupColors = [\"blue\",\"turquoise1\", \"seagreen4\",\"seagreen3\",\"seagreen2\",\"olivedrab3\",\"olivedrab2\",\"olivedrab1\",\"yellow\"]\n\n# Set no limit (or high limit anyway) on the number of individuals per group to plot\nnumIndsToPlotWithHets = fill(10, length(plotGroups))\n\ngenosForGBI_limited, indMetadataforGBI_limited = limitIndsToPlot(plotGroups,\n                                            numIndsToPlotWithHets, \n                                            genosForGBI, metadataForGBI;\n                                            sortByMissing = false)\n\nplotGenotypeByIndividual(regionInfo, posForGBI,\n                genosForGBI_limited, indMetadataforGBI_limited, freqsForGBI, plotGroups, plotGroupColors;\n                missingFractionAllowed = missingFractionAllowed)\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\n\n(Scene (768px, 960px):\n  0 Plots\n  2 Child Scenes:\n    ├ Scene (768px, 960px)\n    └ Scene (768px, 960px), Union{Missing, Int16}[0 0 … 0 0; 0 0 … 0 0; … ; 2 2 … 2 2; 2 2 … 2 2], [63088, 153219, 167981, 204946, 252487, 296231, 367641, 423565, 431630, 443933  …  678802, 684399, 741883, 767533, 773736, 792896, 900073, 925762, 939829, 952095], 74×38 DataFrame\n Row │ ind                        ID                         location  group   ⋯\n     │ String                     String                     String7   String1 ⋯\n─────┼──────────────────────────────────────────────────────────────────────────\n   1 │ GW_Armando_plate1_JF12G04  GW_Armando_plate1_JF12G04  ST_vi     vir     ⋯\n   2 │ GW_Armando_plate2_JF03G01  GW_Armando_plate2_JF03G01  ST_vi     vir_mis\n   3 │ GW_Armando_plate2_JF30G01  GW_Armando_plate2_JF30G01  ST_vi     vir_mis\n   4 │ GW_Armando_plate1_JF16G01  GW_Armando_plate1_JF16G01  DV_vi     plumb_v\n   5 │ GW_Armando_plate2_JF16G02  GW_Armando_plate2_JF16G02  DV_vi     plumb_v ⋯\n   6 │ GW_Armando_plate2_JE31G01  GW_Armando_plate2_JE31G01  VB_vi     vir_mis\n   7 │ GW_Armando_plate2_JF03G02  GW_Armando_plate2_JF03G02  VB_vi     vir_mis\n   8 │ GW_Armando_plate1_AB1      GW_Armando_plate1_AB1      AB        vir\n   9 │ GW_Lane5_AB2               GW_Lane5_AB2               AB        vir     ⋯\n  10 │ GW_Armando_plate1_TL3      GW_Armando_plate1_TL3      TL        vir\n  11 │ GW_Lane5_AA1               GW_Lane5_AA1               AA        vir_S\n  ⋮  │             ⋮                          ⋮                 ⋮          ⋮   ⋱\n  65 │ GW_Armando_plate2_LN2      GW_Armando_plate2_LN2      LN        troch_L\n  66 │ GW_Lane5_LN1               GW_Lane5_LN1               LN        troch_L ⋯\n  67 │ GW_Lane5_LN10              GW_Lane5_LN10              LN        troch_L\n  68 │ GW_Lane5_LN12              GW_Lane5_LN12              LN        troch_L\n  69 │ GW_Lane5_LN14              GW_Lane5_LN14              LN        troch_L\n  70 │ GW_Lane5_LN16              GW_Lane5_LN16              LN        troch_L ⋯\n  71 │ GW_Lane5_LN18              GW_Lane5_LN18              LN        troch_L\n  72 │ GW_Lane5_LN19              GW_Lane5_LN19              LN        troch_L\n  73 │ GW_Lane5_LN20              GW_Lane5_LN20              LN        troch_L\n  74 │ GW_Lane5_LN3               GW_Lane5_LN3               LN        troch_L ⋯\n                                                  35 columns and 53 rows omitted)\n\n\n\n\n\nshow same but with only troch plumb pops\n\nincludeTheseClusters = [\"trochObs\", \"plumb\"] # these are the haplotype clusters to include in the choice below of SNPs to show\n\n# Calculate allele freqs and sample sizes\nfreqs_local, sampleSizes_local = getFreqsAndSampleSizes(genos_selectedSNPs, clusterMembership, includeTheseClusters)\n\n# limit the SNPs to those with variants greater than 50% in \n# at least one pop, and less than 50% in at least one pop.\n# (So for each column in `freqs`, the maximum should be &gt; 0.5 \n# and the minimum should be &lt; 0.5)\nselectedSNPs = (vec(maximum(freqs_local, dims=1)) .&gt; 0.5) .& (vec(minimum(freqs_local, dims=1)) .&lt; 0.5)\ngenosForGBI = genos_selectedSNPs[:, selectedSNPs]\nposForGBI = pos_selectedSNPs[selectedSNPs, :]\nfreqsForGBI = freqs_local[:, selectedSNPs]\n\nmetadataForGBI = copy(PCAmodelAll.metadata)\nmetadataForGBI.Fst_group = metadataForGBI.original_Fst_groups\n\n# remove individuals that have vir haplotypes, as this could otherwise be mistaken for introgression from obscuratus:\n\nremoveTheseInds = [\"GW_Armando_plate1_JF24G02\", # gw19 hetero from plumb \n                    \"GW_Armando_plate1_JF07G03\", # gw19 hetero from plumb\n                    \"GW_Armando_plate1_JF12G02\", # gw19 hetero from plumb\n                    \"GW_Armando_plate1_JF09G01\"] # gw28 is hetero from plumb  \nselection = map(in(removeTheseInds), metadataForGBI.ind)\nmetadataForGBI = metadataForGBI[.!selection, :]\ngenosForGBI = genosForGBI[.!selection, :]\n\nplotGroups = [\"troch_LN\",\"troch_EM\",\"obs\",\"plumb_BJ\",\"plumb\"]\nplotGroupColors = [\"yellow\",\"gold\",\"orange\",\"pink\",\"red\"]\n\n# Set  limit on the number of individuals per group to plot\nnumIndsToPlotWithHets = fill(15, length(plotGroups))\n\n# metadataForGBI[metadataForGBI.Fst_group .== \"plumb\", :]\n\ngenosForGBI_limited, indMetadataforGBI_limited = limitIndsToPlot(plotGroups,\n                                            numIndsToPlotWithHets, \n                                            genosForGBI, metadataForGBI;\n                                            sortByMissing = false)\n\n# indMetadataforGBI_limited[indMetadataforGBI_limited.Fst_group .== \"plumb\", :]\n\nplotGenotypeByIndividual(regionInfo, posForGBI,\n                genosForGBI_limited, indMetadataforGBI_limited, freqsForGBI, plotGroups, plotGroupColors;\n                missingFractionAllowed = missingFractionAllowed)\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\n\n(Scene (768px, 960px):\n  0 Plots\n  2 Child Scenes:\n    ├ Scene (768px, 960px)\n    └ Scene (768px, 960px), Union{Missing, Int16}[0 0 … 0 0; 0 0 … 0 0; … ; 2 2 … 2 2; 2 2 … 2 2], [70570, 71423, 78271, 89983, 167981, 199863, 204946, 252463, 252487, 367641  …  792896, 867410, 881923, 882012, 925752, 925762, 925928, 945566, 976062, 984894], 37×38 DataFrame\n Row │ ind                        ID                         location  group   ⋯\n     │ String                     String                     String7   String1 ⋯\n─────┼──────────────────────────────────────────────────────────────────────────\n   1 │ GW_Armando_plate2_LN2      GW_Armando_plate2_LN2      LN        troch_L ⋯\n   2 │ GW_Lane5_LN1               GW_Lane5_LN1               LN        troch_L\n   3 │ GW_Lane5_LN10              GW_Lane5_LN10              LN        troch_L\n   4 │ GW_Lane5_LN12              GW_Lane5_LN12              LN        troch_L\n   5 │ GW_Lane5_LN14              GW_Lane5_LN14              LN        troch_L ⋯\n   6 │ GW_Lane5_LN16              GW_Lane5_LN16              LN        troch_L\n   7 │ GW_Lane5_LN18              GW_Lane5_LN18              LN        troch_L\n   8 │ GW_Lane5_LN19              GW_Lane5_LN19              LN        troch_L\n   9 │ GW_Lane5_LN20              GW_Lane5_LN20              LN        troch_L ⋯\n  10 │ GW_Lane5_LN3               GW_Lane5_LN3               LN        troch_L\n  11 │ GW_Lane5_LN4               GW_Lane5_LN4               LN        troch_L\n  ⋮  │             ⋮                          ⋮                 ⋮         ⋮    ⋱\n  28 │ GW_Armando_plate1_JF09G02  GW_Armando_plate1_JF09G02  ST        plumb\n  29 │ GW_Armando_plate1_JF11G01  GW_Armando_plate1_JF11G01  ST        plumb   ⋯\n  30 │ GW_Armando_plate1_JF12G01  GW_Armando_plate1_JF12G01  ST        plumb\n  31 │ GW_Armando_plate1_JF13G01  GW_Armando_plate1_JF13G01  ST        plumb\n  32 │ GW_Armando_plate1_JF26G01  GW_Armando_plate1_JF26G01  ST        plumb\n  33 │ GW_Armando_plate1_JF27G01  GW_Armando_plate1_JF27G01  ST        plumb   ⋯\n  34 │ GW_Armando_plate1_JF29G01  GW_Armando_plate1_JF29G01  ST        plumb\n  35 │ GW_Armando_plate1_JF15G03  GW_Armando_plate1_JF15G03  DV        plumb\n  36 │ GW_Armando_plate1_JF23G01  GW_Armando_plate1_JF23G01  VB        plumb\n  37 │ GW_Armando_plate1_JF23G02  GW_Armando_plate1_JF23G02  VB        plumb   ⋯\n                                                  35 columns and 16 rows omitted)\n\n\n\n\n\nShow just the west area (without nitidus)\n\nclusterNamesWithHetsWest = [\"virLud\",\n                        \"virLudHet\",\n                        \"virLud_trochObs\",\n                        \"trochObs\",\n                        \"trochObsHet\"]\n\nclusterColorsWithHetsWest = [\"blue\",\n                        \"blue\",\n                        \"green\",\n                        \"yellow\",\n                        \"yellow\"]\n\n# limit the SNPs to those with variants greater than 50% in \n# at least one pop, and less than 50% in at least one pop.\n# (So for each column in `freqs`, the maximum should be &gt; 0.5 \n# and the minimum should be &lt; 0.5)\n# Calculate allele freqs and sample sizes\nfreqs, sampleSizes = getFreqsAndSampleSizes(genos_selectedSNPs, clusterMembershipWithHets, clusterNamesWithHetsWest)\nprintln(\"Calculated population allele frequencies and sample sizes\")\nselectedSNPs = (vec(maximum(freqs, dims=1)) .&gt; 0.5) .& (vec(minimum(freqs, dims=1)) .&lt; 0.5)\ngenos_selectedSNPs2 = genos_selectedSNPs[:, selectedSNPs]\npos_selectedSNPs2 = pos_selectedSNPs[selectedSNPs, :]\nfreqs_selectedSNPs2 = freqs[:, selectedSNPs]\n\nnumIndsToPlotWithHets = fill(100, length(clusterNamesWithHetsWest))\n\ngenosForGBI, indMetadataforGBI = limitIndsToPlot(clusterNamesWithHetsWest, numIndsToPlotWithHets, \n                                            genos_selectedSNPs2, PCAmodelAll.metadata;\n                                            sortByMissing = true)\n\nplotGenotypeByIndividual(regionInfo, pos_selectedSNPs2,\n                genosForGBI, indMetadataforGBI, freqs_selectedSNPs2, clusterNamesWithHetsWest, clusterColorsWithHetsWest;\n                missingFractionAllowed = missingFractionAllowed,\n                indColorLeftProvided = false,\n                indColorRightProvided = true)\n\nCalculated population allele frequencies and sample sizes\n\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\n\n(Scene (768px, 960px):\n  0 Plots\n  2 Child Scenes:\n    ├ Scene (768px, 960px)\n    └ Scene (768px, 960px), Union{Missing, Int16}[0 0 … 0 0; 0 0 … 0 0; … ; 2 2 … 2 2; 0 0 … 0 0], [63088, 153219, 167981, 204946, 252487, 296231, 367641, 423565, 431630, 443933  …  678802, 684399, 741883, 767533, 773736, 792896, 900073, 925762, 939829, 952095], 180×38 DataFrame\n Row │ ind                        ID                         location  group   ⋯\n     │ String                     String                     String7   String1 ⋯\n─────┼──────────────────────────────────────────────────────────────────────────\n   1 │ GW_Armando_plate2_JF03G01  GW_Armando_plate2_JF03G01  ST_vi     vir_mis ⋯\n   2 │ GW_Lane5_STvi3             GW_Lane5_STvi3             ST_vi     vir\n   3 │ GW_Lane5_STvi1             GW_Lane5_STvi1             ST_vi     vir\n   4 │ GW_Armando_plate1_JF12G04  GW_Armando_plate1_JF12G04  ST_vi     vir\n   5 │ GW_Lane5_STvi2             GW_Lane5_STvi2             ST_vi     vir     ⋯\n   6 │ GW_Armando_plate2_JF30G01  GW_Armando_plate2_JF30G01  ST_vi     vir_mis\n   7 │ GW_Armando_plate2_JF16G02  GW_Armando_plate2_JF16G02  DV_vi     plumb_v\n   8 │ GW_Armando_plate1_JF16G01  GW_Armando_plate1_JF16G01  DV_vi     plumb_v\n   9 │ GW_Armando_plate2_JF03G02  GW_Armando_plate2_JF03G02  VB_vi     vir_mis ⋯\n  10 │ GW_Armando_plate2_JE31G01  GW_Armando_plate2_JE31G01  VB_vi     vir_mis\n  11 │ GW_Lane5_YK7               GW_Lane5_YK7               YK        vir\n  ⋮  │             ⋮                          ⋮                 ⋮          ⋮   ⋱\n 171 │ GW_Lane5_LN12              GW_Lane5_LN12              LN        troch_L\n 172 │ GW_Lane5_LN14              GW_Lane5_LN14              LN        troch_L ⋯\n 173 │ GW_Lane5_LN19              GW_Lane5_LN19              LN        troch_L\n 174 │ GW_Lane5_LN20              GW_Lane5_LN20              LN        troch_L\n 175 │ GW_Lane5_LN4               GW_Lane5_LN4               LN        troch_L\n 176 │ GW_Lane5_LN8               GW_Lane5_LN8               LN        troch_L ⋯\n 177 │ GW_Lane5_LN16              GW_Lane5_LN16              LN        troch_L\n 178 │ GW_Lane5_EM1               GW_Lane5_EM1               EM        troch_E\n 179 │ GW_Lane5_DA7               GW_Lane5_DA7               XN        obs\n 180 │ GW_Lane5_UY4               GW_Lane5_UY4               UY        plumb   ⋯\n                                                 35 columns and 159 rows omitted)\n\n\n\n\n\nShow just the east area\n\nclusterNamesWithHetsEast = [\"trochObs\",\n                            \"trochObsHet\",\n                            \"trochObs_plumb\",\n                            \"plumb\"]\n\nclusterColorsWithHetsEast = [\"yellow\",\n                            \"yellow\",\n                            \"orange\",\n                            \"red\"]\n\n# limit the SNPs to those with variants greater than 50% in \n# at least one pop, and less than 50% in at least one pop.\n# (So for each column in `freqs`, the maximum should be &gt; 0.5 \n# and the minimum should be &lt; 0.5)\n# Calculate allele freqs and sample sizes\nfreqs, sampleSizes = getFreqsAndSampleSizes(genos_selectedSNPs, clusterMembershipWithHets, clusterNamesWithHetsEast)\nprintln(\"Calculated population allele frequencies and sample sizes\")\nselectedSNPs = (vec(maximum(freqs, dims=1)) .&gt; 0.5) .& (vec(minimum(freqs, dims=1)) .&lt; 0.5)\ngenos_selectedSNPs2 = genos_selectedSNPs[:, selectedSNPs]\npos_selectedSNPs2 = pos_selectedSNPs[selectedSNPs, :]\nfreqs_selectedSNPs2 = freqs[:, selectedSNPs]\n\nnumIndsToPlotWithHetsEast = fill(100, length(clusterNamesWithHetsEast))\n\ngenosForGBI, indMetadataforGBI = limitIndsToPlot(clusterNamesWithHetsEast, numIndsToPlotWithHetsEast, \n                                            genos_selectedSNPs2, PCAmodelAll.metadata;\n                                            sortByMissing = true)\n\nplotGenotypeByIndividual(regionInfo, pos_selectedSNPs2,\n                genosForGBI, indMetadataforGBI, freqs_selectedSNPs2, clusterNamesWithHetsEast, clusterColorsWithHetsEast;\n                missingFractionAllowed = missingFractionAllowed,\n                indColorLeftProvided = false,\n                indColorRightProvided = true)\n\nCalculated population allele frequencies and sample sizes\n\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\n\n(Scene (768px, 960px):\n  0 Plots\n  2 Child Scenes:\n    ├ Scene (768px, 960px)\n    └ Scene (768px, 960px), Union{Missing, Int16}[0 0 … 0 0; 0 0 … 0 0; … ; 2 2 … 2 2; 2 2 … 2 2], [70570, 71423, 78271, 89983, 167981, 199863, 204946, 252463, 252487, 367641  …  792896, 867410, 881923, 882012, 925752, 925762, 925928, 945566, 976062, 984894], 146×38 DataFrame\n Row │ ind                           ID                            location  g ⋯\n     │ String                        String                        String7   S ⋯\n─────┼──────────────────────────────────────────────────────────────────────────\n   1 │ GW_Armando_plate1_TTGW72      GW_Armando_plate1_TTGW72      SA        l ⋯\n   2 │ GW_Armando_plate1_TTGW78      GW_Armando_plate1_TTGW78      SA        l\n   3 │ GW_Armando_plate2_TTGW73      GW_Armando_plate2_TTGW73      SA        l\n   4 │ GW_Armando_plate2_TTGW75      GW_Armando_plate2_TTGW75      SA        l\n   5 │ GW_Armando_plate1_TTGW70      GW_Armando_plate1_TTGW70      SA        l ⋯\n   6 │ GW_Armando_plate2_TTGW77      GW_Armando_plate2_TTGW77      SA        l\n   7 │ GW_Armando_plate2_TTGW80      GW_Armando_plate2_TTGW80      SA        l\n   8 │ GW_Armando_plate2_TTGW79      GW_Armando_plate2_TTGW79      SA        l\n   9 │ GW_Armando_plate1_TTGW-15-08  GW_Armando_plate1_TTGW-15-08  SR        l ⋯\n  10 │ GW_Armando_plate2_TTGW28      GW_Armando_plate2_TTGW28      SR        l\n  11 │ GW_Armando_plate2_TTGW25      GW_Armando_plate2_TTGW25      SR        l\n  ⋮  │              ⋮                             ⋮                   ⋮        ⋱\n 137 │ GW_Armando_plate1_JF23G02     GW_Armando_plate1_JF23G02     VB        p\n 138 │ GW_Armando_plate2_JF24G01     GW_Armando_plate2_JF24G01     VB        p ⋯\n 139 │ GW_Armando_plate2_JF25G01     GW_Armando_plate2_JF25G01     VB        p\n 140 │ GW_Armando_plate1_JG02G02     GW_Armando_plate1_JG02G02     PR        p\n 141 │ GW_Armando_plate2_JG01G01     GW_Armando_plate2_JG01G01     PR        p\n 142 │ GW_Armando_plate2_JG02G01     GW_Armando_plate2_JG02G01     PR        p ⋯\n 143 │ GW_Armando_plate2_JG02G03     GW_Armando_plate2_JG02G03     PR        p\n 144 │ GW_Armando_plate1_JG02G04     GW_Armando_plate1_JG02G04     PR        p\n 145 │ GW_Lane5_SL1                  GW_Lane5_SL1                  SL        p\n 146 │ GW_Lane5_SL2                  GW_Lane5_SL2                  SL        p ⋯\n                                                 35 columns and 125 rows omitted)\n\n\n\n\n\nShow just the northern area\n\nclusterNamesWithHetsNorth = [\"virLud\",\n                            \"virLudHet\",\n                            \"vir_plumb\",\n                            \"plumb\"]\n\nclusterColorsWithHetsNorth = [\"blue\",\n                            \"blue\",\n                            \"purple\",\n                            \"red\"]\n\n# limit the SNPs to those with variants greater than 50% in \n# at least one pop, and less than 50% in at least one pop.\n# (So for each column in `freqs`, the maximum should be &gt; 0.5 \n# and the minimum should be &lt; 0.5)\n# Calculate allele freqs and sample sizes\nfreqs, sampleSizes = getFreqsAndSampleSizes(genos_selectedSNPs, clusterMembershipWithHets, clusterNamesWithHetsNorth)\nprintln(\"Calculated population allele frequencies and sample sizes\")\nselectedSNPs = (vec(maximum(freqs, dims=1)) .&gt; 0.5) .& (vec(minimum(freqs, dims=1)) .&lt; 0.5)\ngenos_selectedSNPs2 = genos_selectedSNPs[:, selectedSNPs]\npos_selectedSNPs2 = pos_selectedSNPs[selectedSNPs, :]\nfreqs_selectedSNPs2 = freqs[:, selectedSNPs]\n\nnumIndsToPlotWithHets = fill(100, length(clusterNamesWithHetsNorth))\n\ngenosForGBI, indMetadataforGBI = limitIndsToPlot(clusterNamesWithHetsNorth, numIndsToPlotWithHets, \n                                            genos_selectedSNPs2, PCAmodelAll.metadata;\n                                            sortByMissing = true)\n\nplotGenotypeByIndividual(regionInfo, pos_selectedSNPs2,\n                genosForGBI, indMetadataforGBI, freqs_selectedSNPs2, clusterNamesWithHetsNorth, clusterColorsWithHetsNorth;\n                missingFractionAllowed = missingFractionAllowed,\n                indColorLeftProvided = false,\n                indColorRightProvided = true)\n\nCalculated population allele frequencies and sample sizes\n\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\n\n(Scene (768px, 960px):\n  0 Plots\n  2 Child Scenes:\n    ├ Scene (768px, 960px)\n    └ Scene (768px, 960px), Union{Missing, Int16}[0 0 … 0 0; 0 0 … 0 0; … ; 2 2 … 2 2; 0 1 … 1 2], [63088, 70570, 71423, 78271, 89983, 153219, 199863, 252463, 296231, 423565  …  882012, 900073, 925752, 925928, 939829, 945566, 952095, 975932, 976062, 984894], 143×38 DataFrame\n Row │ ind                        ID                         location  group   ⋯\n     │ String                     String                     String7   String1 ⋯\n─────┼──────────────────────────────────────────────────────────────────────────\n   1 │ GW_Armando_plate2_JF03G01  GW_Armando_plate2_JF03G01  ST_vi     vir_mis ⋯\n   2 │ GW_Lane5_STvi3             GW_Lane5_STvi3             ST_vi     vir\n   3 │ GW_Lane5_STvi1             GW_Lane5_STvi1             ST_vi     vir\n   4 │ GW_Armando_plate1_JF12G04  GW_Armando_plate1_JF12G04  ST_vi     vir\n   5 │ GW_Lane5_STvi2             GW_Lane5_STvi2             ST_vi     vir     ⋯\n   6 │ GW_Armando_plate2_JF30G01  GW_Armando_plate2_JF30G01  ST_vi     vir_mis\n   7 │ GW_Armando_plate2_JF16G02  GW_Armando_plate2_JF16G02  DV_vi     plumb_v\n   8 │ GW_Armando_plate1_JF16G01  GW_Armando_plate1_JF16G01  DV_vi     plumb_v\n   9 │ GW_Armando_plate2_JF03G02  GW_Armando_plate2_JF03G02  VB_vi     vir_mis ⋯\n  10 │ GW_Armando_plate2_JE31G01  GW_Armando_plate2_JE31G01  VB_vi     vir_mis\n  11 │ GW_Lane5_YK7               GW_Lane5_YK7               YK        vir\n  ⋮  │             ⋮                          ⋮                 ⋮          ⋮   ⋱\n 134 │ GW_Armando_plate2_JF24G01  GW_Armando_plate2_JF24G01  VB        plumb\n 135 │ GW_Armando_plate2_JF25G01  GW_Armando_plate2_JF25G01  VB        plumb   ⋯\n 136 │ GW_Armando_plate1_JG02G02  GW_Armando_plate1_JG02G02  PR        plumb\n 137 │ GW_Armando_plate2_JG01G01  GW_Armando_plate2_JG01G01  PR        plumb\n 138 │ GW_Armando_plate2_JG02G01  GW_Armando_plate2_JG02G01  PR        plumb\n 139 │ GW_Armando_plate2_JG02G03  GW_Armando_plate2_JG02G03  PR        plumb   ⋯\n 140 │ GW_Armando_plate1_JG02G04  GW_Armando_plate1_JG02G04  PR        plumb\n 141 │ GW_Lane5_SL1               GW_Lane5_SL1               SL        plumb\n 142 │ GW_Lane5_SL2               GW_Lane5_SL2               SL        plumb\n 143 │ GW_Armando_plate1_JF10G03  GW_Armando_plate1_JF10G03  ST        plumb_v ⋯\n                                                 35 columns and 122 rows omitted)",
    "crumbs": [
      "Home",
      "Greenish Warbler heterozygosity variance analysis"
    ]
  },
  {
    "objectID": "GW_Heterozygosity_Variance.html#add-chr-4a",
    "href": "GW_Heterozygosity_Variance.html#add-chr-4a",
    "title": "Greenish Warbler heterozygosity variance analysis",
    "section": "Add chr 4A",
    "text": "Add chr 4A\n\n# choose scaffold\nchr = \"gw4A\"\n\npositionMin, positionMax, regionText, \n    windowedIndHetStanRegion, meanAcrossRegionIndHetStan,\n    genos_highViSHetRegion, pos_highViSHetRegion, regionInfo = \n    getWindowedIndHetStanRegion(genosOnly_included, \n                            pos_SNP_filtered, \n                            highViSHetRegions, chr;\n                            windowSize = 500)\n\n# inspect values for mean IndHetStan per individual for that high ViSHet region\nplot(meanAcrossRegionIndHetStan)\n\n# Add column to metadata containing the regionIndHetStan for this highHet region:\ncommand = \"ind_with_metadata_included.\" * chr * \"_regionIndHetStan = meanAcrossRegionIndHetStan\"\neval(Meta.parse(command)) # this executes the command constructed above\nind_with_metadata_included.regionIndHetStan = meanAcrossRegionIndHetStan\n\n#names(ind_with_metadata_included)\n\n# check whether missing data related to heterozygosity (good news: not really)\nplot(ind_with_metadata_included.numMissings, meanAcrossRegionIndHetStan)\n\n# PCA of all individuals:\n\ngenos_highViSHetRegion_imputed = Impute.svd(Matrix{Union{Missing, Float32}}(genos_highViSHetRegion))\n\nflipPC1 = true\nflipPC2 = true\n\nPCAmodelAll = plotPCA(genos_highViSHetRegion_imputed, ind_with_metadata_included, \n            groups_to_plot_PCA, group_colors_PCA; \n            sampleSet = \"greenish warblers\", regionText = regionText,\n            flip1 = flipPC1, flip2 = flipPC2,\n            lineOpacity = 0.7, fillOpacity = 0.6,\n            symbolSize = 14, showTitle = true,\n            xLabelText = string(\"Region PC1\"), yLabelText = string(\"Region PC2\"),\n            showPlot = false)\n\ndisplay(PCAmodelAll.PCAfig)\n\n# Add PC values to metadata for individuals included in PCA above:\nif flipPC1\n    PCAmodelAll.metadata.PC1 = -1 .* PCAmodelAll.values[1,:]\nelse \n    PCAmodelAll.metadata.PC1 = PCAmodelAll.values[1,:]\nend\nif flipPC2\n    PCAmodelAll.metadata.PC2 = -1 .* PCAmodelAll.values[2,:]\nelse\n    PCAmodelAll.metadata.PC2 = PCAmodelAll.values[2,:]\nend\nPCAmodelAll.metadata.PC3 = PCAmodelAll.values[3,:]\n\n# For the next bit to work with above, make sure that all individuals in the above `plotPCA` command\n# are included in the `groups_to_plot_PCA`\n\n# choose inds with low IndHet in high ViSHet region:\nindSelection_lowIndHetStan = (meanAcrossRegionIndHetStan .&lt; 1.5) \n\n#Plot only the lowIndHetStan individuals:\n\nf = CairoMakie.Figure();\nax = Axis(f[1, 1],\n    title = \"PC1 vs. PC2, only low heterozygosity\",\n    xlabel = \"Region PC1\", xlabelsize = 24,\n    ylabel = \"Region PC2\", ylabelsize = 24,\n    autolimitaspect = 1)\nhidedecorations!(ax, label = false, ticklabels = false, ticks = false) # hide background lattice\nfor i in eachindex(groups_to_plot_PCA) \n    selection = (PCAmodelAll.metadata.Fst_group .== groups_to_plot_PCA[i]) .& indSelection_lowIndHetStan\n    CairoMakie.scatter!(ax, PCAmodelAll.metadata.PC1[selection], PCAmodelAll.metadata.PC2[selection], marker = :diamond, color = (group_colors_PCA[i], 0.6), markersize = 14, strokewidth=0.5, strokecolor = (\"black\", 0.7))\nend\ndisplay(f)\n\nGood news: 1 region on that scaffold\n\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\nCairoMakie.Screen{IMAGE}\n\n\n\nSave the individual colors in the metadata\n\nindColors = fill(\"\", size(PCAmodelAll.metadata, 1))\nfor i in axes(PCAmodelAll.metadata, 1)\n    indColors[i] = group_colors_PCA[findfirst(groups_to_plot_PCA .== PCAmodelAll.metadata.Fst_group[i])]\nend\nPCAmodelAll.metadata.indColorLeft = indColors\nPCAmodelAll.metadata.indColorRight = indColors\n\n257-element Vector{String}:\n \"blue\"\n \"red\"\n \"red\"\n \"red\"\n \"red\"\n \"red\"\n \"red\"\n \"purple\"\n \"red\"\n \"red\"\n \"red\"\n \"blue\"\n \"red\"\n ⋮\n \"olivedrab2\"\n \"olivedrab2\"\n \"olivedrab2\"\n \"olivedrab2\"\n \"olivedrab2\"\n \"olivedrab2\"\n \"olivedrab2\"\n \"olivedrab2\"\n \"olivedrab2\"\n \"olivedrab2\"\n \"olivedrab2\"\n \"olivedrab2\"\n\n\n\n\nPlot PC1 vs. PC2:\n\nf = CairoMakie.Figure()\nax = Axis(f[1, 1],\n    title = \"PC1 vs. PC2\",\n    xlabel = \"Region PC1\", xlabelsize = 24,\n    ylabel = \"Region PC2\", ylabelsize = 24,\n    autolimitaspect = 1)\nhidedecorations!(ax, label = false, ticklabels = false, ticks = false) # hide background lattice\nfor i in eachindex(groups_to_plot_PCA) \n    selection = PCAmodelAll.metadata.Fst_group .== groups_to_plot_PCA[i]\n    CairoMakie.scatter!(ax, PCAmodelAll.metadata.PC1[selection], PCAmodelAll.metadata.PC2[selection], marker = :diamond, color = (group_colors_PCA[i], 0.6), markersize = 14, strokewidth=0.5, strokecolor = (\"black\", 0.7))\nend\ndisplay(f)\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\nCairoMakie.Screen{IMAGE}\n\n\n\n\nPlot PC1 vs. PC3:\n\nf = CairoMakie.Figure()\nax = Axis(f[1, 1],\n    title = \"PC1 vs. PC3\",\n    xlabel = \"Region PC1\", xlabelsize = 24,\n    ylabel = \"Region PC3\", ylabelsize = 24,\n    autolimitaspect = 1)\nhidedecorations!(ax, label = false, ticklabels = false, ticks = false) # hide background lattice\nfor i in eachindex(groups_to_plot_PCA) \n    selection = PCAmodelAll.metadata.Fst_group .== groups_to_plot_PCA[i]\n    CairoMakie.scatter!(ax, PCAmodelAll.metadata.PC1[selection], PCAmodelAll.metadata.PC3[selection], marker = :diamond, color = (group_colors_PCA[i], 0.6), markersize = 14, strokewidth=0.5, strokecolor = (\"black\", 0.7))\nend\ndisplay(f)\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\nCairoMakie.Screen{IMAGE}\n\n\n\n\nAt chr 4A high ViSHet region, there are 4 clear haplogroups (no discernment of lud or obs on PC3, which is driven by nitidus). Divide samples into those groups, based on PCA scores, and then calculate pi within and pi between\n\nclusterNames = [\"virLud\",\n                \"nit\",\n                \"troch\",\n                \"obsPlumb\"]\n\nclusterColors = [\"blue\",\n                \"grey\",\n                \"yellow\",\n                \"red\"]\n\nvirLud = (PCAmodelAll.metadata.PC1 .&lt; -2) .&\n            (PCAmodelAll.metadata.PC2 .&lt; -2.5) .&\n            indSelection_lowIndHetStan\nnit = (PCAmodelAll.metadata.PC3 .&lt; -7) .&\n            indSelection_lowIndHetStan\ntroch = (3 .&lt; PCAmodelAll.metadata.PC1) .&\n            indSelection_lowIndHetStan\nobsPlumb = (-4 .&lt; PCAmodelAll.metadata.PC1 .&lt; -1) .& \n            (2.5 .&lt; PCAmodelAll.metadata.PC2) .&\n            indSelection_lowIndHetStan\n\n# check the individuals in each group\nPCAmodelAll.metadata.Fst_group[virLud]\nPCAmodelAll.metadata.Fst_group[nit]\nPCAmodelAll.metadata.Fst_group[troch]\nPCAmodelAll.metadata.Fst_group[obsPlumb]\n\nclusterArray = [virLud nit troch obsPlumb]\n\n# show numbers in each group\nprintln(\"The numbers in each group are $(sum(clusterArray, dims=1)) and the sum of those is $(sum(sum(clusterArray, dims=1)))\")\n\n# create vectors that indicate the groups and plot order for this analysis:\nclusterMembership = fill(\"none\", nrow(PCAmodelAll.metadata))\nplotOrder = fill(-9, nrow(PCAmodelAll.metadata))\nfor i in eachindex(clusterArray[1,:])\n    clusterMembership[clusterArray[:,i]] .= clusterNames[i]\n    plotOrder[clusterArray[:,i]] .= i\nend\n\n# Calculate allele freqs and sample sizes\nfreqs, sampleSizes = getFreqsAndSampleSizes(genos_highViSHetRegion, clusterMembership, clusterNames)\nprintln(\"Calculated population allele frequencies and sample sizes\")\n\n# Calculate per-site pi (within-group nucleotide distance)\n\nsitePi = getSitePi(freqs, sampleSizes)\n\n# calculate pairwise Dxy per site, using data in \"freqs\" and groups in \"groups\"\n\nDxy, pairwiseDxyClusterNames = getDxy(freqs, clusterNames)\n\nFst, FstNumerator, FstDenominator, pairwiseFstClusterNames = getFst(freqs, sampleSizes, clusterNames; among=false)  # set among to FALSE if no among Fst wanted (some things won't work without it) \n\n# Now get averages of pi and Dxy for whole region:\n\nregionPiTable = DataFrame(cluster = clusterNames, pi = getRegionPi(sitePi))\n#= 4×2 DataFrame\n Row │ cluster   pi         \n     │ String    Float64    \n─────┼──────────────────────\n   1 │ virLud    0.00664772\n   2 │ nit       0.00609756\n   3 │ troch     0.00614846\n   4 │ obsPlumb  0.00206023 =#\n\nregionDxyTable = DataFrame(cluster_pair = pairwiseDxyClusterNames, Dxy = getRegionDxy(Dxy))\n#= 6×2 DataFrame\n Row │ cluster_pair     Dxy       \n     │ String           Float64   \n─────┼────────────────────────────\n   1 │ virLud_nit       0.0447451\n   2 │ virLud_troch     0.0343779\n   3 │ virLud_obsPlumb  0.0217185\n   4 │ nit_troch        0.0373178\n   5 │ nit_obsPlumb     0.0317873\n   6 │ troch_obsPlumb   0.0237405 =#\n\n# Make a genotype-by-individual plot using all variable loci in the region,\nmissingFractionAllowed = 0.1\n# in metadata, replace `Fst_group` column with cluster info (needed for the function below):\nPCAmodelAll.metadata.original_Fst_groups = PCAmodelAll.metadata.Fst_group # store the Fst_groups in this\nPCAmodelAll.metadata.Fst_group = clusterMembership\nPCAmodelAll.metadata.original_plot_order = PCAmodelAll.metadata.plot_order # store the original plot_order in this\nPCAmodelAll.metadata.plot_order = plotOrder\n\n# limit the SNPs to those with variants greater than 50% in \n# at least one pop, and less than 50% in at least one pop.\n# (So for each column in `freqs`, the maximum should be &gt; 0.5 \n# and the minimum should be &lt; 0.5)\nselectedSNPs = (vec(maximum(freqs, dims=1)) .&gt; 0.5) .& (vec(minimum(freqs, dims=1)) .&lt; 0.5)\ngenos_selectedSNPs = genos_highViSHetRegion[:, selectedSNPs]\npos_selectedSNPs = pos_highViSHetRegion[selectedSNPs, :]\nFst_selectedSNPs = Fst[:, selectedSNPs]\nfreqs_selectedSNPs = freqs[:, selectedSNPs]\n\n# limit the number of individuals per group to plot\nnumIndsToPlot = fill(150, length(clusterNames))\n\ngenosForGBI, indMetadataforGBI = limitIndsToPlot(clusterNames, numIndsToPlot, \n                                            genos_selectedSNPs, PCAmodelAll.metadata;\n                                            sortByMissing = false)\n\n# sort based on original_plot_order, and then together with function below will arrange individuals in population order within clusters:\nsortOrder = sortperm(indMetadataforGBI.original_plot_order, rev=false)\nindMetadataforGBI = indMetadataforGBI[sortOrder, :]\ngenosForGBI = genosForGBI[sortOrder, :]\n\nplotGenotypeByIndividual(regionInfo, pos_selectedSNPs,\n                genosForGBI, indMetadataforGBI, freqs_selectedSNPs, clusterNames, clusterColors;\n                indFontSize=6, figureSize=(800, 1800),\n                missingFractionAllowed = missingFractionAllowed,\n                indColorLeftProvided = true,\n                indColorRightProvided = true)\n\nThe numbers in each group are [40 2 62 91] and the sum of those is 195\nCalculated population allele frequencies and sample sizes\n\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\n\n(Scene (768px, 960px):\n  0 Plots\n  2 Child Scenes:\n    ├ Scene (768px, 960px)\n    └ Scene (768px, 960px), Union{Missing, Int16}[0 0 … 0 0; 0 0 … 0 0; … ; 0 0 … 0 0; 0 0 … 0 0], [387825, 397781, 397824, 405798, 408642, 419198, 425296, 437077, 447665, 454290  …  633803, 637531, 638456, 656257, 676526, 690700, 699577, 706480, 707103, 711862], 195×40 DataFrame\n Row │ ind                        ID                         location  group   ⋯\n     │ String                     String                     String7   String1 ⋯\n─────┼──────────────────────────────────────────────────────────────────────────\n   1 │ GW_Armando_plate1_JF12G04  GW_Armando_plate1_JF12G04  ST_vi     vir     ⋯\n   2 │ GW_Armando_plate2_JF03G01  GW_Armando_plate2_JF03G01  ST_vi     vir_mis\n   3 │ GW_Armando_plate2_JF30G01  GW_Armando_plate2_JF30G01  ST_vi     vir_mis\n   4 │ GW_Lane5_STvi1             GW_Lane5_STvi1             ST_vi     vir\n   5 │ GW_Lane5_STvi2             GW_Lane5_STvi2             ST_vi     vir     ⋯\n   6 │ GW_Lane5_STvi3             GW_Lane5_STvi3             ST_vi     vir\n   7 │ GW_Armando_plate1_JF16G01  GW_Armando_plate1_JF16G01  DV_vi     plumb_v\n   8 │ GW_Armando_plate2_JF16G02  GW_Armando_plate2_JF16G02  DV_vi     plumb_v\n   9 │ GW_Armando_plate2_JE31G01  GW_Armando_plate2_JE31G01  VB_vi     vir_mis ⋯\n  10 │ GW_Armando_plate2_JF03G02  GW_Armando_plate2_JF03G02  VB_vi     vir_mis\n  11 │ GW_Lane5_YK11              GW_Lane5_YK11              YK        vir\n  ⋮  │             ⋮                          ⋮                 ⋮          ⋮   ⋱\n 186 │ GW_Armando_plate1_JF23G01  GW_Armando_plate1_JF23G01  VB        plumb\n 187 │ GW_Armando_plate1_JF23G02  GW_Armando_plate1_JF23G02  VB        plumb   ⋯\n 188 │ GW_Armando_plate1_JF24G02  GW_Armando_plate1_JF24G02  VB        plumb\n 189 │ GW_Armando_plate2_JF24G01  GW_Armando_plate2_JF24G01  VB        plumb\n 190 │ GW_Armando_plate2_JF25G01  GW_Armando_plate2_JF25G01  VB        plumb\n 191 │ GW_Armando_plate1_JG02G02  GW_Armando_plate1_JG02G02  PR        plumb   ⋯\n 192 │ GW_Armando_plate1_JG02G04  GW_Armando_plate1_JG02G04  PR        plumb\n 193 │ GW_Armando_plate2_JG02G01  GW_Armando_plate2_JG02G01  PR        plumb\n 194 │ GW_Lane5_SL1               GW_Lane5_SL1               SL        plumb\n 195 │ GW_Lane5_SL2               GW_Lane5_SL2               SL        plumb   ⋯\n                                                 37 columns and 174 rows omitted)\n\n\n\n\n\nNow show a GBI plot like above, but with heterozygotes:\n\nclusterNamesWithHets = [\"virLud\",\n                \"virLudHet\",\n                \"nit\",\n                \"virLud_troch\",\n                \"troch\",\n                \"trochHet\",\n                \"troch_obsPlumb\",\n                \"obsPlumb\",\n                \"obsPlumbHet\",\n                \"virLud_obsPlumb\"]\n\nclusterColorsWithHets = [\"blue\",\n                \"blue\",\n                \"grey\",\n                \"green\",\n                \"yellow\",\n                \"yellow\",\n                \"orange\",\n                \"red\",\n                \"red\",\n                \"purple\"]\n\nvirLud = (PCAmodelAll.metadata.PC1 .&lt; -2) .&\n            (PCAmodelAll.metadata.PC2 .&lt; -2.5) .&\n            indSelection_lowIndHetStan\nnit = (PCAmodelAll.metadata.PC3 .&lt; -7) .&\n            indSelection_lowIndHetStan\ntroch = (3 .&lt; PCAmodelAll.metadata.PC1) .&\n            indSelection_lowIndHetStan\nobsPlumb = (-4 .&lt; PCAmodelAll.metadata.PC1 .&lt; -1) .& \n            (2.5 .&lt; PCAmodelAll.metadata.PC2) .&\n            indSelection_lowIndHetStan\nvirLudHet = (PCAmodelAll.metadata.PC1 .&lt; -2) .&\n            (PCAmodelAll.metadata.PC2 .&lt; -2.5) .&\n            .!indSelection_lowIndHetStan\nvirLud_troch = (0 .&lt; PCAmodelAll.metadata.PC1 .&lt; 3) .&\n                (-4 .&lt; PCAmodelAll.metadata.PC2 .&lt; -0.5) .&\n                 .!indSelection_lowIndHetStan\ntrochHet = (3 .&lt; PCAmodelAll.metadata.PC1) .&\n            .!indSelection_lowIndHetStan\ntroch_obsPlumb = (0 .&lt; PCAmodelAll.metadata.PC1 .&lt; 3) .& \n            (0 .&lt; PCAmodelAll.metadata.PC2 .&lt; 2.5) .&\n            (-2.5 .&lt; PCAmodelAll.metadata.PC3) .&\n            .!indSelection_lowIndHetStan\nobsPlumbHet = (-4 .&lt; PCAmodelAll.metadata.PC1 .&lt; -1) .& \n            (2.5 .&lt; PCAmodelAll.metadata.PC2) .&\n            .!indSelection_lowIndHetStan\nvirLud_obsPlumb = (-4 .&lt; PCAmodelAll.metadata.PC1 .&lt; -1.5) .&\n                (-2.5 .&lt; PCAmodelAll.metadata.PC2 .&lt; 1.5) .&\n                 .!indSelection_lowIndHetStan\n\nclusterArray = [virLud virLudHet nit virLud_troch troch trochHet troch_obsPlumb obsPlumb obsPlumbHet virLud_obsPlumb]\n\nsum(clusterArray, dims=1)\n\nif sum(sum(clusterArray, dims=1)) == size(PCAmodelAll.metadata, 1)\n    println(\"Good news: Individuals included in a group matches total number of individuals\")\nelse \n    println(\"Warning: Individuals included in a group ($(sum(sum(clusterArray, dims=1)))) do NOT match total number of individuals ($(size(PCAmodelAll.metadata, 1)))\")\nend\n\n\n# check which individuals left out:\n\nsum(clusterArray, dims=2)\n\nPCAmodelAll.metadata.ind[vec(sum(clusterArray, dims=2) .== 0)]\nPCAmodelAll.metadata.PC1[vec(sum(clusterArray, dims=2) .== 0)]\nPCAmodelAll.metadata.PC2[vec(sum(clusterArray, dims=2) .== 0)]\nindSelection_lowIndHetStan[vec(sum(clusterArray, dims=2) .== 0)]\n\n# create vectors that indicate the groups and plot order for this analysis:\nclusterMembershipWithHets = fill(\"none\", nrow(PCAmodelAll.metadata))\nplotOrderWithHets = fill(-9, nrow(PCAmodelAll.metadata))\nfor i in eachindex(clusterArray[1,:])\n    clusterMembershipWithHets[clusterArray[:,i]] .= clusterNamesWithHets[i]\n    plotOrderWithHets[clusterArray[:,i]] .= i\nend\n\n# Add column to main metadata object containing the cluster membership for this highHet region:\ncommand = \"ind_with_metadata_included.\" * chr * \"_cluster = clusterMembershipWithHets\"\neval(Meta.parse(command)) # this executes the command constructed above\n\n# in metadata, replace `Fst_group` column with cluster info (needed for the function below):\nPCAmodelAll.metadata.Fst_group = clusterMembershipWithHets\nPCAmodelAll.metadata.plot_order = plotOrderWithHets\n\n# limit the number of individuals per group to plot\nnumIndsToPlotWithHets = fill(15, length(clusterNamesWithHets))\n\ngenosForGBI, indMetadataforGBI = limitIndsToPlot(clusterNamesWithHets, numIndsToPlotWithHets, \n                                            genos_selectedSNPs, PCAmodelAll.metadata;\n                                            sortByMissing = true)\n\nplotGenotypeByIndividual(regionInfo, pos_selectedSNPs,\n                genosForGBI, indMetadataforGBI, freqs_selectedSNPs, clusterNamesWithHets, clusterColorsWithHets;\n                missingFractionAllowed = missingFractionAllowed,\n                indColorLeftProvided = false,\n                indColorRightProvided = true)\n\nGood news: Individuals included in a group matches total number of individuals\n\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\n\n(Scene (768px, 960px):\n  0 Plots\n  2 Child Scenes:\n    ├ Scene (768px, 960px)\n    └ Scene (768px, 960px), Union{Missing, Int16}[0 0 … 0 0; 0 0 … 0 0; … ; 0 0 … 0 0; 0 0 … 0 0], [387825, 397781, 397824, 405798, 408642, 419198, 425296, 437077, 447665, 454290  …  633803, 637531, 638456, 656257, 676526, 690700, 699577, 706480, 707103, 711862], 95×40 DataFrame\n Row │ ind                           ID                            location  g ⋯\n     │ String                        String                        String7   S ⋯\n─────┼──────────────────────────────────────────────────────────────────────────\n   1 │ GW_Armando_plate1_JF12G04     GW_Armando_plate1_JF12G04     ST_vi     v ⋯\n   2 │ GW_Armando_plate2_JF03G02     GW_Armando_plate2_JF03G02     VB_vi     v\n   3 │ GW_Armando_plate2_JF16G02     GW_Armando_plate2_JF16G02     DV_vi     p\n   4 │ GW_Armando_plate2_JF30G01     GW_Armando_plate2_JF30G01     ST_vi     v\n   5 │ GW_Lane5_AA5                  GW_Lane5_AA5                  AA        v ⋯\n   6 │ GW_Lane5_AA6                  GW_Lane5_AA6                  AA        v\n   7 │ GW_Lane5_AA7                  GW_Lane5_AA7                  AA        v\n   8 │ GW_Lane5_STvi1                GW_Lane5_STvi1                ST_vi     v\n   9 │ GW_Lane5_STvi3                GW_Lane5_STvi3                ST_vi     v ⋯\n  10 │ GW_Lane5_TL1                  GW_Lane5_TL1                  TL        v\n  11 │ GW_Lane5_TL10                 GW_Lane5_TL10                 TL        v\n  ⋮  │              ⋮                             ⋮                   ⋮        ⋱\n  86 │ GW_Armando_plate1_TTGW53      GW_Armando_plate1_TTGW53      NG        l\n  87 │ GW_Armando_plate1_TTGW-15-09  GW_Armando_plate1_TTGW-15-09  SR        l ⋯\n  88 │ GW_Armando_plate2_JG01G01     GW_Armando_plate2_JG01G01     PR        p\n  89 │ GW_Armando_plate2_TTGW18      GW_Armando_plate2_TTGW18      TH        l\n  90 │ GW_Armando_plate2_TTGW20      GW_Armando_plate2_TTGW20      SR        l\n  91 │ GW_Armando_plate2_TTGW56      GW_Armando_plate2_TTGW56      NG        l ⋯\n  92 │ GW_Armando_plate2_TTGW-15-01  GW_Armando_plate2_TTGW-15-01  SR        l\n  93 │ GW_Armando_plate2_TTGW-15-03  GW_Armando_plate2_TTGW-15-03  SR        l\n  94 │ GW_Armando_plate2_TTGW-15-06  GW_Armando_plate2_TTGW-15-06  SR        l\n  95 │ GW_Lane5_KS1                  GW_Lane5_KS1                  OV        l ⋯\n                                                  37 columns and 74 rows omitted)\n\n\n\n\n\nshow GBI plot according to original groups and plot order\n\nPCAmodelAll.metadata.plot_order = PCAmodelAll.metadata.original_plot_order\n\ngenosForGBI, indMetadataforGBI = limitIndsToPlot(clusterNamesWithHets, numIndsToPlotWithHets, \n                                            genos_selectedSNPs, PCAmodelAll.metadata;\n                                            sortByMissing = true)\n\nplotGenotypeByIndividual(regionInfo, pos_selectedSNPs,\n                genosForGBI, indMetadataforGBI, freqs_selectedSNPs, clusterNamesWithHets, clusterColorsWithHets;\n                missingFractionAllowed = missingFractionAllowed,\n                indColorLeftProvided = false,\n                indColorRightProvided = true)\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\n\n(Scene (768px, 960px):\n  0 Plots\n  2 Child Scenes:\n    ├ Scene (768px, 960px)\n    └ Scene (768px, 960px), Union{Missing, Int16}[0 0 … 0 0; 0 0 … 0 0; … ; 0 0 … 0 0; 0 0 … 0 0], [387825, 397781, 397824, 405798, 408642, 419198, 425296, 437077, 447665, 454290  …  633803, 637531, 638456, 656257, 676526, 690700, 699577, 706480, 707103, 711862], 95×40 DataFrame\n Row │ ind                        ID                         location  group   ⋯\n     │ String                     String                     String7   String1 ⋯\n─────┼──────────────────────────────────────────────────────────────────────────\n   1 │ GW_Armando_plate1_JF12G04  GW_Armando_plate1_JF12G04  ST_vi     vir     ⋯\n   2 │ GW_Armando_plate2_JF30G01  GW_Armando_plate2_JF30G01  ST_vi     vir_mis\n   3 │ GW_Lane5_STvi1             GW_Lane5_STvi1             ST_vi     vir\n   4 │ GW_Lane5_STvi3             GW_Lane5_STvi3             ST_vi     vir\n   5 │ GW_Armando_plate2_JF16G02  GW_Armando_plate2_JF16G02  DV_vi     plumb_v ⋯\n   6 │ GW_Armando_plate2_JF03G02  GW_Armando_plate2_JF03G02  VB_vi     vir_mis\n   7 │ GW_Lane5_YK11              GW_Lane5_YK11              YK        vir\n   8 │ GW_Lane5_TL1               GW_Lane5_TL1               TL        vir\n   9 │ GW_Lane5_TL10              GW_Lane5_TL10              TL        vir     ⋯\n  10 │ GW_Lane5_TL11              GW_Lane5_TL11              TL        vir\n  11 │ GW_Lane5_TL12              GW_Lane5_TL12              TL        vir\n  ⋮  │             ⋮                          ⋮                 ⋮          ⋮   ⋱\n  86 │ GW_Armando_plate1_JF29G01  GW_Armando_plate1_JF29G01  ST        plumb\n  87 │ GW_Armando_plate1_JF26G01  GW_Armando_plate1_JF26G01  ST        plumb   ⋯\n  88 │ GW_Armando_plate1_JF27G01  GW_Armando_plate1_JF27G01  ST        plumb\n  89 │ GW_Armando_plate1_JF29G02  GW_Armando_plate1_JF29G02  ST        plumb\n  90 │ GW_Armando_plate1_JF15G03  GW_Armando_plate1_JF15G03  DV        plumb\n  91 │ GW_Armando_plate1_JF23G01  GW_Armando_plate1_JF23G01  VB        plumb   ⋯\n  92 │ GW_Armando_plate1_JF23G02  GW_Armando_plate1_JF23G02  VB        plumb\n  93 │ GW_Armando_plate1_JF24G02  GW_Armando_plate1_JF24G02  VB        plumb\n  94 │ GW_Armando_plate2_JG02G03  GW_Armando_plate2_JG02G03  PR        plumb\n  95 │ GW_Armando_plate2_JG01G01  GW_Armando_plate2_JG01G01  PR        plumb   ⋯\n                                                  37 columns and 74 rows omitted)\n\n\n\n\n\nshow same but with all individuals\n\nPCAmodelAll.metadata.plot_order = PCAmodelAll.metadata.original_plot_order\n\n# Set no limit (or high limit anyway) on the number of individuals per group to plot\nnumIndsToPlotWithHets = fill(1000, length(clusterNamesWithHets))\n\ngenosForGBI, indMetadataforGBI = limitIndsToPlot(clusterNamesWithHets, numIndsToPlotWithHets, \n                                            genos_selectedSNPs, PCAmodelAll.metadata;\n                                            sortByMissing = true)\n\nplotGenotypeByIndividual(regionInfo, pos_selectedSNPs,\n                genosForGBI, indMetadataforGBI, freqs_selectedSNPs, clusterNamesWithHets, clusterColorsWithHets;\n                missingFractionAllowed = missingFractionAllowed,\n                indColorLeftProvided = false,\n                indColorRightProvided = true)\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\n\n(Scene (768px, 960px):\n  0 Plots\n  2 Child Scenes:\n    ├ Scene (768px, 960px)\n    └ Scene (768px, 960px), Union{Missing, Int16}[0 0 … 0 0; 0 0 … 0 0; … ; 0 0 … 0 0; 0 0 … 0 0], [387825, 397781, 397824, 405798, 408642, 419198, 425296, 437077, 447665, 454290  …  633803, 637531, 638456, 656257, 676526, 690700, 699577, 706480, 707103, 711862], 257×40 DataFrame\n Row │ ind                        ID                         location  group   ⋯\n     │ String                     String                     String7   String1 ⋯\n─────┼──────────────────────────────────────────────────────────────────────────\n   1 │ GW_Armando_plate1_JF12G04  GW_Armando_plate1_JF12G04  ST_vi     vir     ⋯\n   2 │ GW_Armando_plate2_JF30G01  GW_Armando_plate2_JF30G01  ST_vi     vir_mis\n   3 │ GW_Lane5_STvi1             GW_Lane5_STvi1             ST_vi     vir\n   4 │ GW_Lane5_STvi3             GW_Lane5_STvi3             ST_vi     vir\n   5 │ GW_Lane5_STvi2             GW_Lane5_STvi2             ST_vi     vir     ⋯\n   6 │ GW_Armando_plate2_JF03G01  GW_Armando_plate2_JF03G01  ST_vi     vir_mis\n   7 │ GW_Armando_plate2_JF16G02  GW_Armando_plate2_JF16G02  DV_vi     plumb_v\n   8 │ GW_Armando_plate1_JF16G01  GW_Armando_plate1_JF16G01  DV_vi     plumb_v\n   9 │ GW_Armando_plate2_JF03G02  GW_Armando_plate2_JF03G02  VB_vi     vir_mis ⋯\n  10 │ GW_Armando_plate2_JE31G01  GW_Armando_plate2_JE31G01  VB_vi     vir_mis\n  11 │ GW_Lane5_YK11              GW_Lane5_YK11              YK        vir\n  ⋮  │             ⋮                          ⋮                 ⋮          ⋮   ⋱\n 248 │ GW_Armando_plate2_JF24G01  GW_Armando_plate2_JF24G01  VB        plumb\n 249 │ GW_Armando_plate2_JF25G01  GW_Armando_plate2_JF25G01  VB        plumb   ⋯\n 250 │ GW_Armando_plate1_JG02G02  GW_Armando_plate1_JG02G02  PR        plumb\n 251 │ GW_Armando_plate1_JG02G04  GW_Armando_plate1_JG02G04  PR        plumb\n 252 │ GW_Armando_plate2_JG02G01  GW_Armando_plate2_JG02G01  PR        plumb\n 253 │ GW_Armando_plate2_JG02G03  GW_Armando_plate2_JG02G03  PR        plumb   ⋯\n 254 │ GW_Armando_plate2_JG01G01  GW_Armando_plate2_JG01G01  PR        plumb\n 255 │ GW_Lane5_SL1               GW_Lane5_SL1               SL        plumb\n 256 │ GW_Lane5_SL2               GW_Lane5_SL2               SL        plumb\n 257 │ GW_Armando_plate1_JF10G03  GW_Armando_plate1_JF10G03  ST        plumb_v ⋯\n                                                 37 columns and 236 rows omitted)\n\n\n\n\n\nshow same but with only vir and plumb pops\n\nincludeTheseClusters = [\"virLud\", \"obsPlumb\"] # these are the haplotype clusters to include in the choice below of SNPs to show\n\n# Calculate allele freqs and sample sizes\nfreqs_local, sampleSizes_local = getFreqsAndSampleSizes(genos_selectedSNPs, clusterMembership, includeTheseClusters)\n\n# limit the SNPs to those with variants greater than 50% in \n# at least one pop, and less than 50% in at least one pop.\n# (So for each column in `freqs`, the maximum should be &gt; 0.5 \n# and the minimum should be &lt; 0.5)\nselectedSNPs = (vec(maximum(freqs_local, dims=1)) .&gt; 0.5) .& (vec(minimum(freqs_local, dims=1)) .&lt; 0.5)\ngenosForGBI = genos_selectedSNPs[:, selectedSNPs]\nposForGBI = pos_selectedSNPs[selectedSNPs, :]\nfreqsForGBI = freqs_local[:, selectedSNPs]\n\nplotGroups = [\"vir\", \"plumb\", \"plumb_vir\"] # these are the original Fst_groups\nplotGroupColors = [\"blue\", \"red\", \"purple\"]\n\nmetadataForGBI = copy(PCAmodelAll.metadata)\n\nmetadataForGBI.Fst_group = metadataForGBI.original_Fst_groups\n\nplotGenotypeByIndividual(regionInfo, posForGBI,\n                genosForGBI, metadataForGBI, freqsForGBI, plotGroups, plotGroupColors;\n                missingFractionAllowed = missingFractionAllowed)\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\n\n(Scene (768px, 960px):\n  0 Plots\n  2 Child Scenes:\n    ├ Scene (768px, 960px)\n    └ Scene (768px, 960px), Union{Missing, Int16}[0 0 … 0 0; 0 0 … 0 0; … ; 2 2 … 2 2; 1 2 … 1 0], [397824, 447665, 454290, 505522, 510299, 520268, 527334, 531726, 578230, 582505, 587143, 614605, 617468, 617555, 621740, 633718, 633803, 690700], 100×40 DataFrame\n Row │ ind                        ID                         location  group   ⋯\n     │ String                     String                     String7   String1 ⋯\n─────┼──────────────────────────────────────────────────────────────────────────\n   1 │ GW_Armando_plate1_JF12G04  GW_Armando_plate1_JF12G04  ST_vi     vir     ⋯\n   2 │ GW_Armando_plate2_JF03G01  GW_Armando_plate2_JF03G01  ST_vi     vir_mis\n   3 │ GW_Armando_plate2_JF30G01  GW_Armando_plate2_JF30G01  ST_vi     vir_mis\n   4 │ GW_Lane5_STvi1             GW_Lane5_STvi1             ST_vi     vir\n   5 │ GW_Lane5_STvi2             GW_Lane5_STvi2             ST_vi     vir     ⋯\n   6 │ GW_Lane5_STvi3             GW_Lane5_STvi3             ST_vi     vir\n   7 │ GW_Armando_plate1_JF16G01  GW_Armando_plate1_JF16G01  DV_vi     plumb_v\n   8 │ GW_Armando_plate2_JF16G02  GW_Armando_plate2_JF16G02  DV_vi     plumb_v\n   9 │ GW_Armando_plate2_JE31G01  GW_Armando_plate2_JE31G01  VB_vi     vir_mis ⋯\n  10 │ GW_Armando_plate2_JF03G02  GW_Armando_plate2_JF03G02  VB_vi     vir_mis\n  11 │ GW_Lane5_YK11              GW_Lane5_YK11              YK        vir\n  ⋮  │             ⋮                          ⋮                 ⋮          ⋮   ⋱\n  91 │ GW_Armando_plate2_JF24G01  GW_Armando_plate2_JF24G01  VB        plumb\n  92 │ GW_Armando_plate2_JF25G01  GW_Armando_plate2_JF25G01  VB        plumb   ⋯\n  93 │ GW_Armando_plate1_JG02G02  GW_Armando_plate1_JG02G02  PR        plumb\n  94 │ GW_Armando_plate1_JG02G04  GW_Armando_plate1_JG02G04  PR        plumb\n  95 │ GW_Armando_plate2_JG01G01  GW_Armando_plate2_JG01G01  PR        plumb\n  96 │ GW_Armando_plate2_JG02G01  GW_Armando_plate2_JG02G01  PR        plumb   ⋯\n  97 │ GW_Armando_plate2_JG02G03  GW_Armando_plate2_JG02G03  PR        plumb\n  98 │ GW_Lane5_SL1               GW_Lane5_SL1               SL        plumb\n  99 │ GW_Lane5_SL2               GW_Lane5_SL2               SL        plumb\n 100 │ GW_Armando_plate1_JF10G03  GW_Armando_plate1_JF10G03  ST        plumb_v ⋯\n                                                  37 columns and 79 rows omitted)\n\n\n\n\n\nshow same but whole ring (but not nit)\n\nincludeTheseClusters = [\"virLud\",\n                        \"troch\",\n                        \"obsPlumb\"] # these are the haplotype clusters to include in the choice below of SNPs to show\n\n# Calculate allele freqs and sample sizes\nfreqs_local, sampleSizes_local = getFreqsAndSampleSizes(genos_selectedSNPs, clusterMembership, includeTheseClusters)\n\n# limit the SNPs to those with variants greater than 50% in \n# at least one pop, and less than 50% in at least one pop.\n# (So for each column in `freqs`, the maximum should be &gt; 0.5 \n# and the minimum should be &lt; 0.5)\nselectedSNPs = (vec(maximum(freqs_local, dims=1)) .&gt; 0.5) .& (vec(minimum(freqs_local, dims=1)) .&lt; 0.5)\ngenosForGBI = genos_selectedSNPs[:, selectedSNPs]\nposForGBI = pos_selectedSNPs[selectedSNPs, :]\nfreqsForGBI = freqs_local[:, selectedSNPs]\n\nmetadataForGBI = copy(PCAmodelAll.metadata)\nmetadataForGBI.Fst_group = metadataForGBI.original_Fst_groups\n\n# plotGroups = [\"vir\",\"vir_S\",\"lud_PK\", \"lud_KS\", \"lud_central\", \"lud_Sath\", \"lud_ML\",\"troch_west\",\"troch_LN\",\"troch_EM\",\"obs\",\"plumb_BJ\",\"plumb\",\"plumb_vir\"]\n# plotGroupColors = [\"blue\",\"turquoise1\",\"seagreen4\",\"seagreen3\",\"seagreen2\",\"olivedrab3\",\"olivedrab2\",\"olivedrab1\",\"yellow\",\"gold\",\"orange\",\"pink\",\"red\",\"purple\"]\n\nplotGroups = [\"vir\",\"vir_S\",\"lud_PK\",\"lud_KS\",\"lud_central\",\"troch_LN\",\"troch_EM\",\"obs\",\"plumb_BJ\",\"plumb\",\"plumb_vir\"]\nplotGroupColors = [\"blue\",\"turquoise1\",\"seagreen4\",\"seagreen3\",\"seagreen2\",\"yellow\",\"gold\",\"orange\", \"pink\",\"red\",\"purple\"]\n\n# Set  limit on the number of individuals per group to plot\nnumIndsToPlotWithHets = [10, 5, 5, 2, 10, 10, 1, 4, 3, 10, 1] # maximum number of individuals to plot from each group\n#numIndsToPlotWithHets = fill(100, length(plotGroups))\n\n# metadataForGBI[metadataForGBI.Fst_group .== \"plumb\", :]\n\ngenosForGBI_limited, indMetadataforGBI_limited = limitIndsToPlot(plotGroups,\n                                            numIndsToPlotWithHets, \n                                            genosForGBI, metadataForGBI;\n                                            sortByMissing = false)\n\n# indMetadataforGBI_limited[indMetadataforGBI_limited.Fst_group .== \"plumb\", :]\n\nplotGenotypeByIndividual(regionInfo, posForGBI,\n                genosForGBI_limited, indMetadataforGBI_limited, freqsForGBI, plotGroups, plotGroupColors;\n                missingFractionAllowed = missingFractionAllowed)\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\n\n(Scene (768px, 960px):\n  0 Plots\n  2 Child Scenes:\n    ├ Scene (768px, 960px)\n    └ Scene (768px, 960px), Union{Missing, Int16}[0 0 … 0 0; 0 0 … 0 0; … ; 0 0 … 0 0; 0 1 … 0 0], [397781, 397824, 405798, 419198, 425296, 447665, 454290, 505522, 510299, 513889  …  617468, 617539, 617555, 621740, 633718, 633787, 633803, 676526, 690700, 711862], 61×40 DataFrame\n Row │ ind                        ID                         location  group   ⋯\n     │ String                     String                     String7   String1 ⋯\n─────┼──────────────────────────────────────────────────────────────────────────\n   1 │ GW_Armando_plate1_JF12G04  GW_Armando_plate1_JF12G04  ST_vi     vir     ⋯\n   2 │ GW_Armando_plate2_JF03G01  GW_Armando_plate2_JF03G01  ST_vi     vir_mis\n   3 │ GW_Armando_plate2_JF30G01  GW_Armando_plate2_JF30G01  ST_vi     vir_mis\n   4 │ GW_Armando_plate1_JF16G01  GW_Armando_plate1_JF16G01  DV_vi     plumb_v\n   5 │ GW_Armando_plate2_JF16G02  GW_Armando_plate2_JF16G02  DV_vi     plumb_v ⋯\n   6 │ GW_Armando_plate2_JE31G01  GW_Armando_plate2_JE31G01  VB_vi     vir_mis\n   7 │ GW_Armando_plate2_JF03G02  GW_Armando_plate2_JF03G02  VB_vi     vir_mis\n   8 │ GW_Armando_plate1_AB1      GW_Armando_plate1_AB1      AB        vir\n   9 │ GW_Lane5_AB2               GW_Lane5_AB2               AB        vir     ⋯\n  10 │ GW_Armando_plate1_TL3      GW_Armando_plate1_TL3      TL        vir\n  11 │ GW_Lane5_AA1               GW_Lane5_AA1               AA        vir_S\n  ⋮  │             ⋮                          ⋮                 ⋮          ⋮   ⋱\n  52 │ GW_Armando_plate1_JF07G03  GW_Armando_plate1_JF07G03  ST        plumb\n  53 │ GW_Armando_plate1_JF07G04  GW_Armando_plate1_JF07G04  ST        plumb   ⋯\n  54 │ GW_Armando_plate1_JF08G02  GW_Armando_plate1_JF08G02  ST        plumb\n  55 │ GW_Armando_plate1_JF09G01  GW_Armando_plate1_JF09G01  ST        plumb\n  56 │ GW_Armando_plate1_JF09G02  GW_Armando_plate1_JF09G02  ST        plumb\n  57 │ GW_Armando_plate1_JF11G01  GW_Armando_plate1_JF11G01  ST        plumb   ⋯\n  58 │ GW_Armando_plate1_JF12G01  GW_Armando_plate1_JF12G01  ST        plumb\n  59 │ GW_Armando_plate1_JF12G02  GW_Armando_plate1_JF12G02  ST        plumb\n  60 │ GW_Armando_plate1_JF13G01  GW_Armando_plate1_JF13G01  ST        plumb\n  61 │ GW_Armando_plate1_JF10G03  GW_Armando_plate1_JF10G03  ST        plumb_v ⋯\n                                                  37 columns and 40 rows omitted)\n\n\n\n\n\nShow just the west area (without nitidus)\n\nclusterNamesWithHetsWest = [\"virLud\",\n                            \"virLudHet\",\n                            \"virLud_troch\",\n                            \"troch\",\n                            \"trochHet\"]\n\nclusterColorsWithHetsWest = [\"blue\",\n                            \"blue\",\n                            \"green\",\n                            \"yellow\",\n                            \"yellow\"]\n\n# limit the SNPs to those with variants greater than 50% in \n# at least one pop, and less than 50% in at least one pop.\n# (So for each column in `freqs`, the maximum should be &gt; 0.5 \n# and the minimum should be &lt; 0.5)\n# Calculate allele freqs and sample sizes\nfreqs, sampleSizes = getFreqsAndSampleSizes(genos_selectedSNPs, clusterMembershipWithHets, clusterNamesWithHetsWest)\nprintln(\"Calculated population allele frequencies and sample sizes\")\nselectedSNPs = (vec(maximum(freqs, dims=1)) .&gt; 0.5) .& (vec(minimum(freqs, dims=1)) .&lt; 0.5)\ngenos_selectedSNPs2 = genos_selectedSNPs[:, selectedSNPs]\npos_selectedSNPs2 = pos_selectedSNPs[selectedSNPs, :]\nfreqs_selectedSNPs2 = freqs[:, selectedSNPs]\n\nnumIndsToPlotWithHets = fill(100, length(clusterNamesWithHetsWest))\n\ngenosForGBI, indMetadataforGBI = limitIndsToPlot(clusterNamesWithHetsWest, numIndsToPlotWithHets, \n                                            genos_selectedSNPs2, PCAmodelAll.metadata;\n                                            sortByMissing = true)\n\nplotGenotypeByIndividual(regionInfo, pos_selectedSNPs2,\n                genosForGBI, indMetadataforGBI, freqs_selectedSNPs2, clusterNamesWithHetsWest, clusterColorsWithHetsWest;\n                missingFractionAllowed = missingFractionAllowed,\n                indColorLeftProvided = false,\n                indColorRightProvided = true)\n\nCalculated population allele frequencies and sample sizes\n\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\n\n(Scene (768px, 960px):\n  0 Plots\n  2 Child Scenes:\n    ├ Scene (768px, 960px)\n    └ Scene (768px, 960px), Union{Missing, Int16}[0 0 … 0 0; 0 0 … 0 0; … ; 1 2 … 2 0; 0 0 … 0 0], [397781, 397824, 405798, 419198, 425296, 447665, 510299, 513889, 520268, 520285  …  614605, 614609, 617539, 617555, 621740, 633718, 633787, 676526, 690700, 711862], 119×40 DataFrame\n Row │ ind                        ID                         location  group   ⋯\n     │ String                     String                     String7   String1 ⋯\n─────┼──────────────────────────────────────────────────────────────────────────\n   1 │ GW_Armando_plate1_JF12G04  GW_Armando_plate1_JF12G04  ST_vi     vir     ⋯\n   2 │ GW_Armando_plate2_JF30G01  GW_Armando_plate2_JF30G01  ST_vi     vir_mis\n   3 │ GW_Lane5_STvi1             GW_Lane5_STvi1             ST_vi     vir\n   4 │ GW_Lane5_STvi3             GW_Lane5_STvi3             ST_vi     vir\n   5 │ GW_Lane5_STvi2             GW_Lane5_STvi2             ST_vi     vir     ⋯\n   6 │ GW_Armando_plate2_JF03G01  GW_Armando_plate2_JF03G01  ST_vi     vir_mis\n   7 │ GW_Armando_plate2_JF16G02  GW_Armando_plate2_JF16G02  DV_vi     plumb_v\n   8 │ GW_Armando_plate1_JF16G01  GW_Armando_plate1_JF16G01  DV_vi     plumb_v\n   9 │ GW_Armando_plate2_JF03G02  GW_Armando_plate2_JF03G02  VB_vi     vir_mis ⋯\n  10 │ GW_Armando_plate2_JE31G01  GW_Armando_plate2_JE31G01  VB_vi     vir_mis\n  11 │ GW_Lane5_YK11              GW_Lane5_YK11              YK        vir\n  ⋮  │             ⋮                          ⋮                 ⋮          ⋮   ⋱\n 110 │ GW_Lane5_LN3               GW_Lane5_LN3               LN        troch_L\n 111 │ GW_Lane5_LN4               GW_Lane5_LN4               LN        troch_L ⋯\n 112 │ GW_Lane5_LN1               GW_Lane5_LN1               LN        troch_L\n 113 │ GW_Lane5_LN10              GW_Lane5_LN10              LN        troch_L\n 114 │ GW_Lane5_LN6               GW_Lane5_LN6               LN        troch_L\n 115 │ GW_Lane5_LN7               GW_Lane5_LN7               LN        troch_L ⋯\n 116 │ GW_Lane5_LN8               GW_Lane5_LN8               LN        troch_L\n 117 │ GW_Lane5_LN12              GW_Lane5_LN12              LN        troch_L\n 118 │ GW_Lane5_LN14              GW_Lane5_LN14              LN        troch_L\n 119 │ GW_Armando_plate1_JF13G01  GW_Armando_plate1_JF13G01  ST        plumb   ⋯\n                                                  37 columns and 98 rows omitted)\n\n\n\n\n\nShow just the east area\n\nclusterNamesWithHetsEast = [\"troch\",\n                            \"trochHet\",\n                            \"troch_obsPlumb\",\n                            \"obsPlumb\",\n                            \"obsPlumbHet\"]\n\nclusterColorsWithHetsEast = [\"yellow\",\n                            \"yellow\",\n                            \"orange\",\n                            \"red\",\n                            \"red\"]\n\n# limit the SNPs to those with variants greater than 50% in \n# at least one pop, and less than 50% in at least one pop.\n# (So for each column in `freqs`, the maximum should be &gt; 0.5 \n# and the minimum should be &lt; 0.5)\n# Calculate allele freqs and sample sizes\nfreqs, sampleSizes = getFreqsAndSampleSizes(genos_selectedSNPs, clusterMembershipWithHets, clusterNamesWithHetsEast)\nprintln(\"Calculated population allele frequencies and sample sizes\")\nselectedSNPs = (vec(maximum(freqs, dims=1)) .&gt; 0.5) .& (vec(minimum(freqs, dims=1)) .&lt; 0.5)\ngenos_selectedSNPs2 = genos_selectedSNPs[:, selectedSNPs]\npos_selectedSNPs2 = pos_selectedSNPs[selectedSNPs, :]\nfreqs_selectedSNPs2 = freqs[:, selectedSNPs]\n\nnumIndsToPlotWithHetsEast = fill(100, length(clusterNamesWithHetsEast))\n\ngenosForGBI, indMetadataforGBI = limitIndsToPlot(clusterNamesWithHetsEast, numIndsToPlotWithHetsEast, \n                                            genos_selectedSNPs2, PCAmodelAll.metadata;\n                                            sortByMissing = true)\n\nplotGenotypeByIndividual(regionInfo, pos_selectedSNPs2,\n                genosForGBI, indMetadataforGBI, freqs_selectedSNPs2, clusterNamesWithHetsEast, clusterColorsWithHetsEast;\n                missingFractionAllowed = missingFractionAllowed,\n                indColorLeftProvided = false,\n                indColorRightProvided = true)\n\nCalculated population allele frequencies and sample sizes\n\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\n\n(Scene (768px, 960px):\n  0 Plots\n  2 Child Scenes:\n    ├ Scene (768px, 960px)\n    └ Scene (768px, 960px), Union{Missing, Int16}[2 2 … 2 2; 2 2 … 2 2; … ; 2 2 … 2 2; 2 2 … 2 2], [397781, 405798, 419198, 425296, 454290, 505522, 513889, 520285, 527255, 531214  …  553195, 582581, 587134, 614609, 617468, 617539, 633787, 633803, 676526, 711862], 180×40 DataFrame\n Row │ ind                           ID                            location  g ⋯\n     │ String                        String                        String7   S ⋯\n─────┼──────────────────────────────────────────────────────────────────────────\n   1 │ GW_Lane5_NA3                  GW_Lane5_NA3                  NR        l ⋯\n   2 │ GW_Lane5_SH1                  GW_Lane5_SH1                  SH        l\n   3 │ GW_Lane5_SH2                  GW_Lane5_SH2                  SH        l\n   4 │ GW_Lane5_SH4                  GW_Lane5_SH4                  SH        l\n   5 │ GW_Lane5_SH5                  GW_Lane5_SH5                  SH        l ⋯\n   6 │ GW_Armando_plate1_TTGW72      GW_Armando_plate1_TTGW72      SA        l\n   7 │ GW_Armando_plate2_TTGW73      GW_Armando_plate2_TTGW73      SA        l\n   8 │ GW_Armando_plate2_TTGW77      GW_Armando_plate2_TTGW77      SA        l\n   9 │ GW_Armando_plate2_TTGW79      GW_Armando_plate2_TTGW79      SA        l ⋯\n  10 │ GW_Armando_plate2_TTGW80      GW_Armando_plate2_TTGW80      SA        l\n  11 │ GW_Armando_plate2_TTGW75      GW_Armando_plate2_TTGW75      SA        l\n  ⋮  │              ⋮                             ⋮                   ⋮        ⋱\n 171 │ GW_Armando_plate1_JF23G02     GW_Armando_plate1_JF23G02     VB        p\n 172 │ GW_Armando_plate1_JF24G02     GW_Armando_plate1_JF24G02     VB        p ⋯\n 173 │ GW_Armando_plate2_JF24G01     GW_Armando_plate2_JF24G01     VB        p\n 174 │ GW_Armando_plate2_JF25G01     GW_Armando_plate2_JF25G01     VB        p\n 175 │ GW_Armando_plate1_JG02G02     GW_Armando_plate1_JG02G02     PR        p\n 176 │ GW_Armando_plate1_JG02G04     GW_Armando_plate1_JG02G04     PR        p ⋯\n 177 │ GW_Armando_plate2_JG02G01     GW_Armando_plate2_JG02G01     PR        p\n 178 │ GW_Armando_plate2_JG02G03     GW_Armando_plate2_JG02G03     PR        p\n 179 │ GW_Lane5_SL1                  GW_Lane5_SL1                  SL        p\n 180 │ GW_Lane5_SL2                  GW_Lane5_SL2                  SL        p ⋯\n                                                 37 columns and 159 rows omitted)\n\n\n\n\n\nShow just the northern area\n\nclusterNamesWithHetsNorth = [\"virLud\",\n                            \"virLudHet\",\n                            \"virLud_obsPlumb\",\n                            \"obsPlumb\",\n                            \"obsPlumbHet\"]\n\nclusterColorsWithHetsNorth = [\"blue\",\n                            \"blue\",\n                            \"purple\",\n                            \"red\",\n                            \"red\"]\n\n# limit the SNPs to those with variants greater than 50% in \n# at least one pop, and less than 50% in at least one pop.\n# (So for each column in `freqs`, the maximum should be &gt; 0.5 \n# and the minimum should be &lt; 0.5)\n# Calculate allele freqs and sample sizes\nfreqs, sampleSizes = getFreqsAndSampleSizes(genos_selectedSNPs, clusterMembershipWithHets, clusterNamesWithHetsNorth)\nprintln(\"Calculated population allele frequencies and sample sizes\")\nselectedSNPs = (vec(maximum(freqs, dims=1)) .&gt; 0.5) .& (vec(minimum(freqs, dims=1)) .&lt; 0.5)\ngenos_selectedSNPs2 = genos_selectedSNPs[:, selectedSNPs]\npos_selectedSNPs2 = pos_selectedSNPs[selectedSNPs, :]\nfreqs_selectedSNPs2 = freqs[:, selectedSNPs]\n\nnumIndsToPlotWithHets = fill(100, length(clusterNamesWithHetsNorth))\n\ngenosForGBI, indMetadataforGBI = limitIndsToPlot(clusterNamesWithHetsNorth, numIndsToPlotWithHets, \n                                            genos_selectedSNPs2, PCAmodelAll.metadata;\n                                            sortByMissing = true)\n\nplotGenotypeByIndividual(regionInfo, pos_selectedSNPs2,\n                genosForGBI, indMetadataforGBI, freqs_selectedSNPs2, clusterNamesWithHetsNorth, clusterColorsWithHetsNorth;\n                missingFractionAllowed = missingFractionAllowed,\n                indColorLeftProvided = false,\n                indColorRightProvided = true)\n\nCalculated population allele frequencies and sample sizes\n\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\n\n(Scene (768px, 960px):\n  0 Plots\n  2 Child Scenes:\n    ├ Scene (768px, 960px)\n    └ Scene (768px, 960px), Union{Missing, Int16}[0 0 … 0 0; 0 0 … 0 0; … ; 2 2 … 2 2; 1 2 … 1 0], [397824, 447665, 454290, 505522, 510299, 520268, 527334, 531726, 578230, 582505, 587143, 614605, 617468, 617555, 621740, 633718, 633803, 690700], 157×40 DataFrame\n Row │ ind                        ID                         location  group   ⋯\n     │ String                     String                     String7   String1 ⋯\n─────┼──────────────────────────────────────────────────────────────────────────\n   1 │ GW_Armando_plate1_JF12G04  GW_Armando_plate1_JF12G04  ST_vi     vir     ⋯\n   2 │ GW_Armando_plate2_JF30G01  GW_Armando_plate2_JF30G01  ST_vi     vir_mis\n   3 │ GW_Lane5_STvi1             GW_Lane5_STvi1             ST_vi     vir\n   4 │ GW_Lane5_STvi3             GW_Lane5_STvi3             ST_vi     vir\n   5 │ GW_Armando_plate2_JF03G01  GW_Armando_plate2_JF03G01  ST_vi     vir_mis ⋯\n   6 │ GW_Lane5_STvi2             GW_Lane5_STvi2             ST_vi     vir\n   7 │ GW_Armando_plate2_JF16G02  GW_Armando_plate2_JF16G02  DV_vi     plumb_v\n   8 │ GW_Armando_plate1_JF16G01  GW_Armando_plate1_JF16G01  DV_vi     plumb_v\n   9 │ GW_Armando_plate2_JF03G02  GW_Armando_plate2_JF03G02  VB_vi     vir_mis ⋯\n  10 │ GW_Armando_plate2_JE31G01  GW_Armando_plate2_JE31G01  VB_vi     vir_mis\n  11 │ GW_Lane5_YK11              GW_Lane5_YK11              YK        vir\n  ⋮  │             ⋮                          ⋮                 ⋮          ⋮   ⋱\n 148 │ GW_Armando_plate2_JF24G01  GW_Armando_plate2_JF24G01  VB        plumb\n 149 │ GW_Armando_plate2_JF25G01  GW_Armando_plate2_JF25G01  VB        plumb   ⋯\n 150 │ GW_Armando_plate2_JG01G01  GW_Armando_plate2_JG01G01  PR        plumb\n 151 │ GW_Armando_plate1_JG02G02  GW_Armando_plate1_JG02G02  PR        plumb\n 152 │ GW_Armando_plate1_JG02G04  GW_Armando_plate1_JG02G04  PR        plumb\n 153 │ GW_Armando_plate2_JG02G01  GW_Armando_plate2_JG02G01  PR        plumb   ⋯\n 154 │ GW_Armando_plate2_JG02G03  GW_Armando_plate2_JG02G03  PR        plumb\n 155 │ GW_Lane5_SL1               GW_Lane5_SL1               SL        plumb\n 156 │ GW_Lane5_SL2               GW_Lane5_SL2               SL        plumb\n 157 │ GW_Armando_plate1_JF10G03  GW_Armando_plate1_JF10G03  ST        plumb_v ⋯\n                                                 37 columns and 136 rows omitted)\n\n\n\n\n\nDo a PCA based on a same-size region elsewhere on gw4A (with low ViSHet):\n\n# get length of region\nlengthHighViSHetRegion = positionMax - positionMin\n\n# because the region is on the left side of chr 4A, will put the non-interesting region on the right side:\nrightLocus = scaffold_lengths[\"gw4A\"] - 1_000_000\nleftLocus = rightLocus - lengthHighViSHetRegion\n\nregionText_lowViSHetRegion = string(\"chr \", chr, \" \",leftLocus,\" to \",rightLocus)\n\nlociSelection = (leftLocus .&lt;= pos_region.position .&lt;= rightLocus)\ngenotypes_lowViSHetRegion = genotypes_region[:, lociSelection]\n\n# impute missing genotypes:\n\ngenotypes_lowViSHetRegion_imputed = Impute.svd(Matrix{Union{Missing, Float32}}(genotypes_lowViSHetRegion))\n\nflipPC1 = true\nflipPC2 = true\n\nPCAmodel = plotPCA(genotypes_lowViSHetRegion_imputed, ind_with_metadata_included, \n            groups_to_plot_PCA, group_colors_PCA; \n            sampleSet = \"greenish warblers\", regionText = regionText_lowViSHetRegion,\n            flip1 = flipPC1, flip2 = flipPC2,\n            lineOpacity = 0.7, fillOpacity = 0.6,\n            symbolSize = 14, showTitle = true,\n            xLabelText = string(\"Region PC1\"), yLabelText = string(\"Region PC2\"),\n            showPlot = false)\n\ndisplay(PCAmodel.PCAfig)\nif true  # set to true to save plot\n    save(\"FigureS2D_gw4A_nonHLBRarbitrary_from_Julia.png\", PCAmodel.PCAfig, px_per_unit = 2.0)\nend \n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\nCairoMakie.Screen{IMAGE}\n\n\n\nChr 4A shows really remarkable patterns. Absolutely must be selective sweeps.",
    "crumbs": [
      "Home",
      "Greenish Warbler heterozygosity variance analysis"
    ]
  },
  {
    "objectID": "GW_Heterozygosity_Variance.html#add-chr-20",
    "href": "GW_Heterozygosity_Variance.html#add-chr-20",
    "title": "Greenish Warbler heterozygosity variance analysis",
    "section": "Add chr 20",
    "text": "Add chr 20\n\n# choose scaffold\nchr = \"gw20\"\n\npositionMin, positionMax, regionText, \n    windowedIndHetStanRegion, meanAcrossRegionIndHetStan,\n    genos_highViSHetRegion, pos_highViSHetRegion, regionInfo = \n    getWindowedIndHetStanRegion(genosOnly_included, \n                            pos_SNP_filtered, \n                            highViSHetRegions, chr;\n                            windowSize = 500)\n\n# inspect values for mean IndHetStan per individual for that high ViSHet region\nplot(meanAcrossRegionIndHetStan)\n\n# Add column to metadata containing the regionIndHetStan for this highHet region:\ncommand = \"ind_with_metadata_included.\" * chr * \"_regionIndHetStan = meanAcrossRegionIndHetStan\"\neval(Meta.parse(command)) # this executes the command constructed above\nind_with_metadata_included.regionIndHetStan = meanAcrossRegionIndHetStan\n\n#names(ind_with_metadata_included)\n\n# check whether missing data related to heterozygosity (good news: not really)\nplot(ind_with_metadata_included.numMissings, meanAcrossRegionIndHetStan)\n\n# PCA of all individuals:\n\ngenos_highViSHetRegion_imputed = Impute.svd(Matrix{Union{Missing, Float32}}(genos_highViSHetRegion))\n\nflipPC1 = false\nflipPC2 = true\n\nPCAmodelAll = plotPCA(genos_highViSHetRegion_imputed, ind_with_metadata_included, \n            groups_to_plot_PCA, group_colors_PCA; \n            sampleSet = \"greenish warblers\", regionText = regionText,\n            flip1 = flipPC1, flip2 = flipPC2,\n            lineOpacity = 0.7, fillOpacity = 0.6,\n            symbolSize = 14, showTitle = true,\n            xLabelText = string(\"Region PC1\"), yLabelText = string(\"Region PC2\"),\n            showPlot = false)\n\ndisplay(PCAmodelAll.PCAfig)\n\n# Add PC values to metadata for individuals included in PCA above:\nif flipPC1\n    PCAmodelAll.metadata.PC1 = -1 .* PCAmodelAll.values[1,:]\nelse \n    PCAmodelAll.metadata.PC1 = PCAmodelAll.values[1,:]\nend\nif flipPC2\n    PCAmodelAll.metadata.PC2 = -1 .* PCAmodelAll.values[2,:]\nelse\n    PCAmodelAll.metadata.PC2 = PCAmodelAll.values[2,:]\nend\nPCAmodelAll.metadata.PC3 = PCAmodelAll.values[3,:]\n\n# For the next bit to work with above, make sure that all individuals in the above `plotPCA` command\n# are included in the `groups_to_plot_PCA`\n\n# choose inds with low IndHet in high ViSHet region:\nindSelection_lowIndHetStan = (meanAcrossRegionIndHetStan .&lt; 1.5) \n\n#Plot only the lowIndHetStan individuals:\n\nf = CairoMakie.Figure();\nax = Axis(f[1, 1],\n    title = \"PC1 vs. PC2, only low heterozygosity\",\n    xlabel = \"Region PC1\", xlabelsize = 24,\n    ylabel = \"Region PC2\", ylabelsize = 24,\n    autolimitaspect = 1)\nhidedecorations!(ax, label = false, ticklabels = false, ticks = false) # hide background lattice\nfor i in eachindex(groups_to_plot_PCA) \n    selection = (PCAmodelAll.metadata.Fst_group .== groups_to_plot_PCA[i]) .& indSelection_lowIndHetStan\n    CairoMakie.scatter!(ax, PCAmodelAll.metadata.PC1[selection], PCAmodelAll.metadata.PC2[selection], marker = :diamond, color = (group_colors_PCA[i], 0.6), markersize = 14, strokewidth=0.5, strokecolor = (\"black\", 0.7))\nend\ndisplay(f)\nif false  # set to true to save plot\n    save(\"Figure6_top_gw28GBIplotEast_from_Julia.png\", plotInfo[1], px_per_unit = 2.0)\nend \n\nMore than 1 region on that scaffold. Using just the longest one.\n\n\n2×3 DataFrame\n\n\n\nRow\nregionChrom\nregionStart\nregionEnd\n\n\n\nString\nInt64\nInt64\n\n\n\n\n1\ngw20\n27354\n721651\n\n\n2\ngw20\n5852254\n6671670\n\n\n\n\n\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\n\nSave the individual colors in the metadata\n\nindColors = fill(\"\", size(PCAmodelAll.metadata, 1))\nfor i in axes(PCAmodelAll.metadata, 1)\n    indColors[i] = group_colors_PCA[findfirst(groups_to_plot_PCA .== PCAmodelAll.metadata.Fst_group[i])]\nend\nPCAmodelAll.metadata.indColorLeft = indColors\nPCAmodelAll.metadata.indColorRight = indColors\n\n257-element Vector{String}:\n \"blue\"\n \"red\"\n \"red\"\n \"red\"\n \"red\"\n \"red\"\n \"red\"\n \"purple\"\n \"red\"\n \"red\"\n \"red\"\n \"blue\"\n \"red\"\n ⋮\n \"olivedrab2\"\n \"olivedrab2\"\n \"olivedrab2\"\n \"olivedrab2\"\n \"olivedrab2\"\n \"olivedrab2\"\n \"olivedrab2\"\n \"olivedrab2\"\n \"olivedrab2\"\n \"olivedrab2\"\n \"olivedrab2\"\n \"olivedrab2\"\n\n\n\n\nPlot PC1 vs. PC2:\n\nf = CairoMakie.Figure()\nax = Axis(f[1, 1],\n    title = \"PC1 vs. PC2\",\n    xlabel = \"Region PC1\", xlabelsize = 24,\n    ylabel = \"Region PC2\", ylabelsize = 24,\n    autolimitaspect = 1)\nhidedecorations!(ax, label = false, ticklabels = false, ticks = false) # hide background lattice\nfor i in eachindex(groups_to_plot_PCA) \n    selection = PCAmodelAll.metadata.Fst_group .== groups_to_plot_PCA[i]\n    CairoMakie.scatter!(ax, PCAmodelAll.metadata.PC1[selection], PCAmodelAll.metadata.PC2[selection], marker = :diamond, color = (group_colors_PCA[i], 0.6), markersize = 14, strokewidth=0.5, strokecolor = (\"black\", 0.7))\nend\ndisplay(f)\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\nCairoMakie.Screen{IMAGE}\n\n\n\n\nPlot PC1 vs. PC3:\n\nf = CairoMakie.Figure()\nax = Axis(f[1, 1],\n    title = \"PC1 vs. PC3\",\n    xlabel = \"Region PC1\", xlabelsize = 24,\n    ylabel = \"Region PC3\", ylabelsize = 24,\n    autolimitaspect = 1)\nhidedecorations!(ax, label = false, ticklabels = false, ticks = false) # hide background lattice\nfor i in eachindex(groups_to_plot_PCA) \n    selection = PCAmodelAll.metadata.Fst_group .== groups_to_plot_PCA[i]\n    CairoMakie.scatter!(ax, PCAmodelAll.metadata.PC1[selection], PCAmodelAll.metadata.PC3[selection], marker = :diamond, color = (group_colors_PCA[i], 0.6), markersize = 14, strokewidth=0.5, strokecolor = (\"black\", 0.7))\nend\ndisplay(f)\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\nCairoMakie.Screen{IMAGE}\n\n\n\n\nAt chr 20 high ViSHet region, there are 6 clear haplogroups (with vir and lud clearly different on PC3). Divide samples into those groups, based on PCA scores, and then calculate pi within and pi between\n\nclusterNames = [\"vir\",\n                \"nit\",\n                \"lud\",\n                \"troch\",\n                \"obs\",\n                \"plumb\"]\n\nclusterColors = [\"blue\",\n                \"grey\",\n                \"green\",\n                \"yellow\",\n                \"orange\",\n                \"red\"]\n\nvir = (PCAmodelAll.metadata.PC1 .&lt; -5) .&\n            (-5 .&lt; PCAmodelAll.metadata.PC3 .&lt; -0.5) .&\n            indSelection_lowIndHetStan\nnit = (-5 .&lt; PCAmodelAll.metadata.PC1 .&lt; -3) .&\n        (PCAmodelAll.metadata.PC3 .&lt; -5) .&\n            indSelection_lowIndHetStan\nlud = (PCAmodelAll.metadata.PC1 .&lt; -4) .&\n            (0.5 .&lt; PCAmodelAll.metadata.PC3 .&lt; 7) .&\n            indSelection_lowIndHetStan\ntroch = (2 .&lt; PCAmodelAll.metadata.PC1 .&lt; 5) .&\n            (PCAmodelAll.metadata.PC2 .&lt; -4.2) .&\n            indSelection_lowIndHetStan\nobs = (3 .&lt; PCAmodelAll.metadata.PC1 .&lt; 4) .&\n            (-4.2 .&lt; PCAmodelAll.metadata.PC2 .&lt; -2.5) .&\n            indSelection_lowIndHetStan\nplumb = (2.5 .&lt; PCAmodelAll.metadata.PC1 .&lt; 6) .& \n            (3 .&lt; PCAmodelAll.metadata.PC2) .&\n            indSelection_lowIndHetStan\n\n# check the individuals in each group\nPCAmodelAll.metadata.Fst_group[vir]\nPCAmodelAll.metadata.Fst_group[nit]\nPCAmodelAll.metadata.Fst_group[lud]\nPCAmodelAll.metadata.Fst_group[troch]\nPCAmodelAll.metadata.Fst_group[obs]\nPCAmodelAll.metadata.Fst_group[plumb]\n\nclusterArray = [vir nit lud troch obs plumb]\n\n# show numbers in each group\nprintln(\"The numbers in each group are $(sum(clusterArray, dims=1)) and the sum of those is $(sum(sum(clusterArray, dims=1)))\")\n\n# create vectors that indicate the groups and plot order for this analysis:\nclusterMembership = fill(\"none\", nrow(PCAmodelAll.metadata))\nplotOrder = fill(-9, nrow(PCAmodelAll.metadata))\nfor i in eachindex(clusterArray[1,:])\n    clusterMembership[clusterArray[:,i]] .= clusterNames[i]\n    plotOrder[clusterArray[:,i]] .= i\nend\n\n# Calculate allele freqs and sample sizes\nfreqs, sampleSizes = getFreqsAndSampleSizes(genos_highViSHetRegion, clusterMembership, clusterNames)\nprintln(\"Calculated population allele frequencies and sample sizes\")\n\n# Calculate per-site pi (within-group nucleotide distance)\n\nsitePi = getSitePi(freqs, sampleSizes)\n\n# calculate pairwise Dxy per site, using data in \"freqs\" and groups in \"groups\"\n\nDxy, pairwiseDxyClusterNames = getDxy(freqs, clusterNames)\n\nFst, FstNumerator, FstDenominator, pairwiseFstClusterNames = getFst(freqs, sampleSizes, clusterNames; among=false)  # set among to FALSE if no among Fst wanted (some things won't work without it) \n\n# Now get averages of pi and Dxy for whole region:\n\nregionPiTable = DataFrame(cluster = clusterNames, pi = getRegionPi(sitePi))\n#= 6×2 DataFrame\n Row │ cluster  pi         \n     │ String   Float64    \n─────┼─────────────────────\n   1 │ vir      0.0132903\n   2 │ nit      0.00761773\n   3 │ lud      0.014873\n   4 │ troch    0.0101873\n   5 │ obs      0.00904222\n   6 │ plumb    0.00593251 =#\n\nregionDxyTable = DataFrame(cluster_pair = pairwiseDxyClusterNames, Dxy = getRegionDxy(Dxy))\n#= 15×2 DataFrame\n Row │ cluster_pair  Dxy       \n     │ String        Float64   \n─────┼─────────────────────────\n   1 │ vir_nit       0.0280243\n   2 │ vir_lud       0.0204941\n   3 │ vir_troch     0.0394257\n   4 │ vir_obs       0.0403572\n   5 │ vir_plumb     0.0376188\n   6 │ nit_lud       0.0288021\n   7 │ nit_troch     0.0377964\n   8 │ nit_obs       0.0389254\n   9 │ nit_plumb     0.0359742\n  10 │ lud_troch     0.0390498\n  11 │ lud_obs       0.0398045\n  12 │ lud_plumb     0.0371989\n  13 │ troch_obs     0.015702\n  14 │ troch_plumb   0.0285113\n  15 │ obs_plumb     0.0286543 =#\n\n# Make a genotype-by-individual plot using all variable loci in the region,\nmissingFractionAllowed = 0.1\n# in metadata, replace `Fst_group` column with cluster info (needed for the function below):\nPCAmodelAll.metadata.original_Fst_groups = PCAmodelAll.metadata.Fst_group # store the Fst_groups in this\nPCAmodelAll.metadata.Fst_group = clusterMembership\nPCAmodelAll.metadata.original_plot_order = PCAmodelAll.metadata.plot_order # store the original plot_order in this\nPCAmodelAll.metadata.plot_order = plotOrder\n\n# limit the SNPs to those with variants greater than 50% in \n# at least one pop, and less than 50% in at least one pop.\n# (So for each column in `freqs`, the maximum should be &gt; 0.5 \n# and the minimum should be &lt; 0.5)\nselectedSNPs = (vec(maximum(freqs, dims=1)) .&gt; 0.5) .& (vec(minimum(freqs, dims=1)) .&lt; 0.5)\ngenos_selectedSNPs = genos_highViSHetRegion[:, selectedSNPs]\npos_selectedSNPs = pos_highViSHetRegion[selectedSNPs, :]\nFst_selectedSNPs = Fst[:, selectedSNPs]\nfreqs_selectedSNPs = freqs[:, selectedSNPs]\n\n# limit the number of individuals per group to plot\nnumIndsToPlot = fill(15, length(clusterNames))\n\ngenosForGBI, indMetadataforGBI = limitIndsToPlot(clusterNames, numIndsToPlot, \n                                            genos_selectedSNPs, PCAmodelAll.metadata;\n                                            sortByMissing = true)\n\nplotGenotypeByIndividual(regionInfo, pos_selectedSNPs,\n                genosForGBI, indMetadataforGBI, freqs_selectedSNPs, clusterNames, clusterColors;\n                missingFractionAllowed = missingFractionAllowed,\n                indColorRightProvided = true)\n\nThe numbers in each group are [38 2 29 68 4 66] and the sum of those is 207\nCalculated population allele frequencies and sample sizes\n\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\n\n(Scene (768px, 960px):\n  0 Plots\n  2 Child Scenes:\n    ├ Scene (768px, 960px)\n    └ Scene (768px, 960px), Union{Missing, Int16}[0 0 … 0 0; 0 0 … 0 0; … ; 2 2 … 0 0; 2 2 … 0 0], [5852400, 5876520, 5876593, 5882337, 5882559, 5893275, 5901011, 5923576, 5923618, 5932214  …  6525018, 6533933, 6538226, 6559702, 6559912, 6582488, 6582518, 6594141, 6611772, 6618858], 66×42 DataFrame\n Row │ ind                        ID                         location  group   ⋯\n     │ String                     String                     String7   String1 ⋯\n─────┼──────────────────────────────────────────────────────────────────────────\n   1 │ GW_Armando_plate1_AB1      GW_Armando_plate1_AB1      AB        vir     ⋯\n   2 │ GW_Armando_plate1_JF12G04  GW_Armando_plate1_JF12G04  ST_vi     vir\n   3 │ GW_Armando_plate1_JF16G01  GW_Armando_plate1_JF16G01  DV_vi     plumb_v\n   4 │ GW_Armando_plate2_JE31G01  GW_Armando_plate2_JE31G01  VB_vi     vir_mis\n   5 │ GW_Armando_plate2_JF03G01  GW_Armando_plate2_JF03G01  ST_vi     vir_mis ⋯\n   6 │ GW_Armando_plate2_JF30G01  GW_Armando_plate2_JF30G01  ST_vi     vir_mis\n   7 │ GW_Lane5_AA3               GW_Lane5_AA3               AA        vir_S\n   8 │ GW_Lane5_AA5               GW_Lane5_AA5               AA        vir_S\n   9 │ GW_Lane5_AA9               GW_Lane5_AA9               AA        vir_S   ⋯\n  10 │ GW_Lane5_TL10              GW_Lane5_TL10              TL        vir\n  11 │ GW_Lane5_TL11              GW_Lane5_TL11              TL        vir\n  ⋮  │             ⋮                          ⋮                 ⋮          ⋮   ⋱\n  57 │ GW_Armando_plate1_JF11G01  GW_Armando_plate1_JF11G01  ST        plumb\n  58 │ GW_Armando_plate1_JF12G02  GW_Armando_plate1_JF12G02  ST        plumb   ⋯\n  59 │ GW_Armando_plate1_JF13G01  GW_Armando_plate1_JF13G01  ST        plumb\n  60 │ GW_Armando_plate1_JF15G03  GW_Armando_plate1_JF15G03  DV        plumb\n  61 │ GW_Armando_plate1_JF20G01  GW_Armando_plate1_JF20G01  MB        plumb\n  62 │ GW_Armando_plate1_JF22G01  GW_Armando_plate1_JF22G01  MB        plumb   ⋯\n  63 │ GW_Armando_plate1_JF23G01  GW_Armando_plate1_JF23G01  VB        plumb\n  64 │ GW_Armando_plate1_JF23G02  GW_Armando_plate1_JF23G02  VB        plumb\n  65 │ GW_Armando_plate1_JF26G01  GW_Armando_plate1_JF26G01  ST        plumb\n  66 │ GW_Armando_plate1_JF27G01  GW_Armando_plate1_JF27G01  ST        plumb   ⋯\n                                                  39 columns and 45 rows omitted)\n\n\n\n\n\nNow show a GBI plot like above, but with heterozygotes:\n\nclusterNamesWithHets = [\"vir\",\n                \"nit\",\n                \"lud\",\n                \"ludHet\",\n                \"lud_troch\",\n                \"troch\",\n                \"obs\",\n                \"obs_plumb\",\n                \"plumb\",\n                \"vir_plumb\"]\n\nclusterColorsWithHets = [\"blue\",\n                \"grey\",\n                \"green\",\n                \"green\",\n                \"seagreen\",\n                \"yellow\",\n                \"orange\",\n                \"darkorange1\",\n                \"red\",\n                \"purple\"]\n\nludHet = (PCAmodelAll.metadata.PC1 .&lt; -4) .&\n            (0.5 .&lt; PCAmodelAll.metadata.PC3 .&lt; 7) .&\n            .!indSelection_lowIndHetStan\nlud_troch = (-4 .&lt; PCAmodelAll.metadata.PC1 .&lt; 0) .&\n            (-4 .&lt; PCAmodelAll.metadata.PC2 .&lt; -1) .&\n            .!indSelection_lowIndHetStan\nobs_plumb = (3 .&lt; PCAmodelAll.metadata.PC1 .&lt; 5) .&\n            (0 .&lt; PCAmodelAll.metadata.PC2 .&lt; 1) .&\n            .!indSelection_lowIndHetStan\nvir_plumb = (-3 .&lt; PCAmodelAll.metadata.PC1 .&lt; 0) .&\n            (2.5 .&lt; PCAmodelAll.metadata.PC2 .&lt; 5) .&\n            .!indSelection_lowIndHetStan\n\nclusterArray = [vir nit lud ludHet lud_troch troch obs obs_plumb plumb vir_plumb]\n\nsum(clusterArray, dims=1)\n\nif sum(sum(clusterArray, dims=1)) == size(PCAmodelAll.metadata, 1)\n    println(\"Good news: Individuals included in a group matches total number of individuals\")\nelse \n    println(\"Warning: Individuals included in a group ($(sum(sum(clusterArray, dims=1)))) do NOT match total number of individuals ($(size(PCAmodelAll.metadata, 1)))\")\nend\n\n\n# check which individuals left out:\n\nsum(clusterArray, dims=2)\n\nPCAmodelAll.metadata.ind[vec(sum(clusterArray, dims=2) .== 0)]\nPCAmodelAll.metadata.PC1[vec(sum(clusterArray, dims=2) .== 0)]\nPCAmodelAll.metadata.PC2[vec(sum(clusterArray, dims=2) .== 0)]\nindSelection_lowIndHetStan[vec(sum(clusterArray, dims=2) .== 0)]\n\n# create vectors that indicate the groups and plot order for this analysis:\nclusterMembershipWithHets = fill(\"none\", nrow(PCAmodelAll.metadata))\nplotOrderWithHets = fill(-9, nrow(PCAmodelAll.metadata))\nfor i in eachindex(clusterArray[1,:])\n    clusterMembershipWithHets[clusterArray[:,i]] .= clusterNamesWithHets[i]\n    plotOrderWithHets[clusterArray[:,i]] .= i\nend\n\n# Add column to main metadata object containing the cluster membership for this highHet region:\ncommand = \"ind_with_metadata_included.\" * chr * \"_cluster = clusterMembershipWithHets\"\neval(Meta.parse(command)) # this executes the command constructed above\n\n# in metadata, replace `Fst_group` column with cluster info (needed for the function below):\nPCAmodelAll.metadata.Fst_group = clusterMembershipWithHets\nPCAmodelAll.metadata.plot_order = plotOrderWithHets\n\n# limit the number of individuals per group to plot\nnumIndsToPlotWithHets = fill(15, length(clusterNamesWithHets))\n\ngenosForGBI, indMetadataforGBI = limitIndsToPlot(clusterNamesWithHets, numIndsToPlotWithHets, \n                                            genos_selectedSNPs, PCAmodelAll.metadata;\n                                            sortByMissing = true)\n\nplotGenotypeByIndividual(regionInfo, pos_selectedSNPs,\n                genosForGBI, indMetadataforGBI, freqs_selectedSNPs, clusterNamesWithHets, clusterColorsWithHets;\n                missingFractionAllowed = missingFractionAllowed,\n                indColorLeftProvided = false,\n                indColorRightProvided = true)\n\nGood news: Individuals included in a group matches total number of individuals\n\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\n\n(Scene (768px, 960px):\n  0 Plots\n  2 Child Scenes:\n    ├ Scene (768px, 960px)\n    └ Scene (768px, 960px), Union{Missing, Int16}[0 0 … 0 0; 0 0 … 0 0; … ; 1 1 … 0 0; 1 1 … 0 0], [5852400, 5876520, 5876593, 5882337, 5882559, 5893275, 5901011, 5923576, 5923618, 5932214  …  6525018, 6533933, 6538226, 6559702, 6559912, 6582488, 6582518, 6594141, 6611772, 6618858], 91×42 DataFrame\n Row │ ind                        ID                         location  group   ⋯\n     │ String                     String                     String7   String1 ⋯\n─────┼──────────────────────────────────────────────────────────────────────────\n   1 │ GW_Armando_plate1_AB1      GW_Armando_plate1_AB1      AB        vir     ⋯\n   2 │ GW_Armando_plate1_JF12G04  GW_Armando_plate1_JF12G04  ST_vi     vir\n   3 │ GW_Armando_plate1_JF16G01  GW_Armando_plate1_JF16G01  DV_vi     plumb_v\n   4 │ GW_Armando_plate2_JE31G01  GW_Armando_plate2_JE31G01  VB_vi     vir_mis\n   5 │ GW_Armando_plate2_JF03G01  GW_Armando_plate2_JF03G01  ST_vi     vir_mis ⋯\n   6 │ GW_Armando_plate2_JF30G01  GW_Armando_plate2_JF30G01  ST_vi     vir_mis\n   7 │ GW_Lane5_AA3               GW_Lane5_AA3               AA        vir_S\n   8 │ GW_Lane5_AA5               GW_Lane5_AA5               AA        vir_S\n   9 │ GW_Lane5_AA9               GW_Lane5_AA9               AA        vir_S   ⋯\n  10 │ GW_Lane5_TL10              GW_Lane5_TL10              TL        vir\n  11 │ GW_Lane5_TL11              GW_Lane5_TL11              TL        vir\n  ⋮  │             ⋮                          ⋮                 ⋮          ⋮   ⋱\n  82 │ GW_Armando_plate1_JF23G02  GW_Armando_plate1_JF23G02  VB        plumb\n  83 │ GW_Armando_plate1_JF26G01  GW_Armando_plate1_JF26G01  ST        plumb   ⋯\n  84 │ GW_Armando_plate1_JF27G01  GW_Armando_plate1_JF27G01  ST        plumb\n  85 │ GW_Armando_plate1_JF12G01  GW_Armando_plate1_JF12G01  ST        plumb\n  86 │ GW_Armando_plate1_JF24G02  GW_Armando_plate1_JF24G02  VB        plumb\n  87 │ GW_Armando_plate2_JF14G02  GW_Armando_plate2_JF14G02  DV        plumb   ⋯\n  88 │ GW_Armando_plate1_JF10G03  GW_Armando_plate1_JF10G03  ST        plumb_v\n  89 │ GW_Armando_plate2_JF15G01  GW_Armando_plate2_JF15G01  DV        plumb\n  90 │ GW_Armando_plate2_JF24G03  GW_Armando_plate2_JF24G03  ST        plumb\n  91 │ GW_Armando_plate2_JF26G02  GW_Armando_plate2_JF26G02  ST        plumb   ⋯\n                                                  39 columns and 70 rows omitted)\n\n\n\n\n\nshow GBI plot according to original groups and plot order\n\nPCAmodelAll.metadata.plot_order = PCAmodelAll.metadata.original_plot_order\n\ngenosForGBI, indMetadataforGBI = limitIndsToPlot(clusterNamesWithHets, numIndsToPlotWithHets, \n                                            genos_selectedSNPs, PCAmodelAll.metadata;\n                                            sortByMissing = true)\n\nplotGenotypeByIndividual(regionInfo, pos_selectedSNPs,\n                genosForGBI, indMetadataforGBI, freqs_selectedSNPs, clusterNamesWithHets, clusterColorsWithHets;\n                missingFractionAllowed = missingFractionAllowed,\n                indColorLeftProvided = false,\n                indColorRightProvided = true)\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\n\n(Scene (768px, 960px):\n  0 Plots\n  2 Child Scenes:\n    ├ Scene (768px, 960px)\n    └ Scene (768px, 960px), Union{Missing, Int16}[0 0 … 0 0; 0 0 … 0 0; … ; 1 1 … 0 0; 1 1 … 0 0], [5852400, 5876520, 5876593, 5882337, 5882559, 5893275, 5901011, 5923576, 5923618, 5932214  …  6525018, 6533933, 6538226, 6559702, 6559912, 6582488, 6582518, 6594141, 6611772, 6618858], 91×42 DataFrame\n Row │ ind                        ID                         location  group   ⋯\n     │ String                     String                     String7   String1 ⋯\n─────┼──────────────────────────────────────────────────────────────────────────\n   1 │ GW_Armando_plate1_JF12G04  GW_Armando_plate1_JF12G04  ST_vi     vir     ⋯\n   2 │ GW_Armando_plate2_JF03G01  GW_Armando_plate2_JF03G01  ST_vi     vir_mis\n   3 │ GW_Armando_plate2_JF30G01  GW_Armando_plate2_JF30G01  ST_vi     vir_mis\n   4 │ GW_Armando_plate1_JF16G01  GW_Armando_plate1_JF16G01  DV_vi     plumb_v\n   5 │ GW_Armando_plate2_JF16G02  GW_Armando_plate2_JF16G02  DV_vi     plumb_v ⋯\n   6 │ GW_Armando_plate2_JE31G01  GW_Armando_plate2_JE31G01  VB_vi     vir_mis\n   7 │ GW_Armando_plate1_AB1      GW_Armando_plate1_AB1      AB        vir\n   8 │ GW_Lane5_TL10              GW_Lane5_TL10              TL        vir\n   9 │ GW_Lane5_TL11              GW_Lane5_TL11              TL        vir     ⋯\n  10 │ GW_Lane5_TL9               GW_Lane5_TL9               TL        vir\n  11 │ GW_Armando_plate1_TL3      GW_Armando_plate1_TL3      TL        vir\n  ⋮  │             ⋮                          ⋮                 ⋮          ⋮   ⋱\n  82 │ GW_Armando_plate1_JF12G01  GW_Armando_plate1_JF12G01  ST        plumb\n  83 │ GW_Armando_plate2_JF24G03  GW_Armando_plate2_JF24G03  ST        plumb   ⋯\n  84 │ GW_Armando_plate2_JF26G02  GW_Armando_plate2_JF26G02  ST        plumb\n  85 │ GW_Armando_plate1_JF15G03  GW_Armando_plate1_JF15G03  DV        plumb\n  86 │ GW_Armando_plate2_JF14G02  GW_Armando_plate2_JF14G02  DV        plumb\n  87 │ GW_Armando_plate2_JF15G01  GW_Armando_plate2_JF15G01  DV        plumb   ⋯\n  88 │ GW_Armando_plate1_JF23G01  GW_Armando_plate1_JF23G01  VB        plumb\n  89 │ GW_Armando_plate1_JF23G02  GW_Armando_plate1_JF23G02  VB        plumb\n  90 │ GW_Armando_plate1_JF24G02  GW_Armando_plate1_JF24G02  VB        plumb\n  91 │ GW_Armando_plate1_JF10G03  GW_Armando_plate1_JF10G03  ST        plumb_v ⋯\n                                                  39 columns and 70 rows omitted)\n\n\n\n\n\nshow same but with all individuals\n\nPCAmodelAll.metadata.plot_order = PCAmodelAll.metadata.original_plot_order\n\n# Set no limit (or high limit anyway) on the number of individuals per group to plot\nnumIndsToPlotWithHets = fill(1000, length(clusterNamesWithHets))\n\ngenosForGBI, indMetadataforGBI = limitIndsToPlot(clusterNamesWithHets, numIndsToPlotWithHets, \n                                            genos_selectedSNPs, PCAmodelAll.metadata;\n                                            sortByMissing = true)\n\nplotGenotypeByIndividual(regionInfo, pos_selectedSNPs,\n                genosForGBI, indMetadataforGBI, freqs_selectedSNPs, clusterNamesWithHets, clusterColorsWithHets;\n                missingFractionAllowed = missingFractionAllowed,\n                indColorLeftProvided = false,\n                indColorRightProvided = true)\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\n\n(Scene (768px, 960px):\n  0 Plots\n  2 Child Scenes:\n    ├ Scene (768px, 960px)\n    └ Scene (768px, 960px), Union{Missing, Int16}[0 0 … 0 0; 0 0 … 0 0; … ; 2 2 … 0 0; 1 1 … 0 0], [5852400, 5876520, 5876593, 5882337, 5882559, 5893275, 5901011, 5923576, 5923618, 5932214  …  6525018, 6533933, 6538226, 6559702, 6559912, 6582488, 6582518, 6594141, 6611772, 6618858], 257×42 DataFrame\n Row │ ind                        ID                         location  group   ⋯\n     │ String                     String                     String7   String1 ⋯\n─────┼──────────────────────────────────────────────────────────────────────────\n   1 │ GW_Armando_plate1_JF12G04  GW_Armando_plate1_JF12G04  ST_vi     vir     ⋯\n   2 │ GW_Armando_plate2_JF03G01  GW_Armando_plate2_JF03G01  ST_vi     vir_mis\n   3 │ GW_Armando_plate2_JF30G01  GW_Armando_plate2_JF30G01  ST_vi     vir_mis\n   4 │ GW_Lane5_STvi1             GW_Lane5_STvi1             ST_vi     vir\n   5 │ GW_Lane5_STvi3             GW_Lane5_STvi3             ST_vi     vir     ⋯\n   6 │ GW_Lane5_STvi2             GW_Lane5_STvi2             ST_vi     vir\n   7 │ GW_Armando_plate1_JF16G01  GW_Armando_plate1_JF16G01  DV_vi     plumb_v\n   8 │ GW_Armando_plate2_JF16G02  GW_Armando_plate2_JF16G02  DV_vi     plumb_v\n   9 │ GW_Armando_plate2_JE31G01  GW_Armando_plate2_JE31G01  VB_vi     vir_mis ⋯\n  10 │ GW_Armando_plate2_JF03G02  GW_Armando_plate2_JF03G02  VB_vi     vir_mis\n  11 │ GW_Lane5_YK4               GW_Lane5_YK4               YK        vir\n  ⋮  │             ⋮                          ⋮                 ⋮          ⋮   ⋱\n 248 │ GW_Armando_plate2_JF25G01  GW_Armando_plate2_JF25G01  VB        plumb\n 249 │ GW_Armando_plate1_JF24G02  GW_Armando_plate1_JF24G02  VB        plumb   ⋯\n 250 │ GW_Armando_plate1_JG02G02  GW_Armando_plate1_JG02G02  PR        plumb\n 251 │ GW_Armando_plate2_JG01G01  GW_Armando_plate2_JG01G01  PR        plumb\n 252 │ GW_Armando_plate2_JG02G01  GW_Armando_plate2_JG02G01  PR        plumb\n 253 │ GW_Armando_plate1_JG02G04  GW_Armando_plate1_JG02G04  PR        plumb   ⋯\n 254 │ GW_Armando_plate2_JG02G03  GW_Armando_plate2_JG02G03  PR        plumb\n 255 │ GW_Lane5_SL1               GW_Lane5_SL1               SL        plumb\n 256 │ GW_Lane5_SL2               GW_Lane5_SL2               SL        plumb\n 257 │ GW_Armando_plate1_JF10G03  GW_Armando_plate1_JF10G03  ST        plumb_v ⋯\n                                                 39 columns and 236 rows omitted)\n\n\n\n\n\nShow just the west area (without nitidus)\n\nclusterNamesWithHetsWest = [\"vir\",\n                \"lud\",\n                \"ludHet\",\n                \"lud_troch\",\n                \"troch\"]\n\nclusterColorsWithHetsWest = [\"blue\",\n                \"green\",\n                \"green\",\n                \"seagreen\",\n                \"yellow\"]\n\n# limit the SNPs to those with variants greater than 50% in \n# at least one pop, and less than 50% in at least one pop.\n# (So for each column in `freqs`, the maximum should be &gt; 0.5 \n# and the minimum should be &lt; 0.5)\n# Calculate allele freqs and sample sizes\nfreqs, sampleSizes = getFreqsAndSampleSizes(genos_selectedSNPs, clusterMembershipWithHets, clusterNamesWithHetsWest)\nprintln(\"Calculated population allele frequencies and sample sizes\")\nselectedSNPs = (vec(maximum(freqs, dims=1)) .&gt; 0.5) .& (vec(minimum(freqs, dims=1)) .&lt; 0.5)\ngenos_selectedSNPs2 = genos_selectedSNPs[:, selectedSNPs]\npos_selectedSNPs2 = pos_selectedSNPs[selectedSNPs, :]\nfreqs_selectedSNPs2 = freqs[:, selectedSNPs]\n\nnumIndsToPlotWithHets = fill(100, length(clusterNamesWithHetsWest))\n\ngenosForGBI, indMetadataforGBI = limitIndsToPlot(clusterNamesWithHetsWest, numIndsToPlotWithHets, \n                                            genos_selectedSNPs2, PCAmodelAll.metadata;\n                                            sortByMissing = true)\n\nplotGenotypeByIndividual(regionInfo, pos_selectedSNPs2,\n                genosForGBI, indMetadataforGBI, freqs_selectedSNPs2, clusterNamesWithHetsWest, clusterColorsWithHetsWest;\n                missingFractionAllowed = missingFractionAllowed,\n                indColorLeftProvided = false,\n                indColorRightProvided = true)\n\nCalculated population allele frequencies and sample sizes\n\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\n\n(Scene (768px, 960px):\n  0 Plots\n  2 Child Scenes:\n    ├ Scene (768px, 960px)\n    └ Scene (768px, 960px), Union{Missing, Int16}[0 0 … 0 0; 0 0 … 0 0; … ; 2 2 … 2 2; 2 2 … 2 2], [5852400, 5876593, 5882559, 5901011, 5923576, 5923618, 5945810, 5966423, 5970604, 5986806  …  6459128, 6459167, 6465882, 6465908, 6472163, 6472190, 6538226, 6582488, 6594141, 6611772], 177×42 DataFrame\n Row │ ind                        ID                         location  group   ⋯\n     │ String                     String                     String7   String1 ⋯\n─────┼──────────────────────────────────────────────────────────────────────────\n   1 │ GW_Armando_plate1_JF12G04  GW_Armando_plate1_JF12G04  ST_vi     vir     ⋯\n   2 │ GW_Armando_plate2_JF03G01  GW_Armando_plate2_JF03G01  ST_vi     vir_mis\n   3 │ GW_Armando_plate2_JF30G01  GW_Armando_plate2_JF30G01  ST_vi     vir_mis\n   4 │ GW_Lane5_STvi1             GW_Lane5_STvi1             ST_vi     vir\n   5 │ GW_Lane5_STvi3             GW_Lane5_STvi3             ST_vi     vir     ⋯\n   6 │ GW_Lane5_STvi2             GW_Lane5_STvi2             ST_vi     vir\n   7 │ GW_Armando_plate1_JF16G01  GW_Armando_plate1_JF16G01  DV_vi     plumb_v\n   8 │ GW_Armando_plate2_JF16G02  GW_Armando_plate2_JF16G02  DV_vi     plumb_v\n   9 │ GW_Armando_plate2_JE31G01  GW_Armando_plate2_JE31G01  VB_vi     vir_mis ⋯\n  10 │ GW_Armando_plate2_JF03G02  GW_Armando_plate2_JF03G02  VB_vi     vir_mis\n  11 │ GW_Lane5_YK11              GW_Lane5_YK11              YK        vir\n  ⋮  │             ⋮                          ⋮                 ⋮          ⋮   ⋱\n 168 │ GW_Lane5_LN18              GW_Lane5_LN18              LN        troch_L\n 169 │ GW_Lane5_LN19              GW_Lane5_LN19              LN        troch_L ⋯\n 170 │ GW_Lane5_LN20              GW_Lane5_LN20              LN        troch_L\n 171 │ GW_Lane5_LN3               GW_Lane5_LN3               LN        troch_L\n 172 │ GW_Lane5_LN4               GW_Lane5_LN4               LN        troch_L\n 173 │ GW_Lane5_LN6               GW_Lane5_LN6               LN        troch_L ⋯\n 174 │ GW_Lane5_LN7               GW_Lane5_LN7               LN        troch_L\n 175 │ GW_Lane5_LN8               GW_Lane5_LN8               LN        troch_L\n 176 │ GW_Lane5_LN10              GW_Lane5_LN10              LN        troch_L\n 177 │ GW_Lane5_LN12              GW_Lane5_LN12              LN        troch_L ⋯\n                                                 39 columns and 156 rows omitted)\n\n\n\n\n\nShow just the east area\n\nclusterNamesWithHetsEast = [\"troch\",\n                            \"obs\",\n                            \"obs_plumb\",\n                            \"plumb\"]\n\nclusterColorsWithHetsEast = [\"yellow\",\n                            \"orange\",\n                            \"darkorange1\",\n                            \"red\"]\n\n# limit the SNPs to those with variants greater than 50% in \n# at least one pop, and less than 50% in at least one pop.\n# (So for each column in `freqs`, the maximum should be &gt; 0.5 \n# and the minimum should be &lt; 0.5)\n# Calculate allele freqs and sample sizes\nfreqs, sampleSizes = getFreqsAndSampleSizes(genos_selectedSNPs, clusterMembershipWithHets, clusterNamesWithHetsEast)\nprintln(\"Calculated population allele frequencies and sample sizes\")\nselectedSNPs = (vec(maximum(freqs, dims=1)) .&gt; 0.5) .& (vec(minimum(freqs, dims=1)) .&lt; 0.5)\ngenos_selectedSNPs2 = genos_selectedSNPs[:, selectedSNPs]\npos_selectedSNPs2 = pos_selectedSNPs[selectedSNPs, :]\nfreqs_selectedSNPs2 = freqs[:, selectedSNPs]\n\nnumIndsToPlotWithHetsEast = fill(100, length(clusterNamesWithHetsEast))\n\ngenosForGBI, indMetadataforGBI = limitIndsToPlot(clusterNamesWithHetsEast, numIndsToPlotWithHetsEast, \n                                            genos_selectedSNPs2, PCAmodelAll.metadata;\n                                            sortByMissing = true)\n\nplotGenotypeByIndividual(regionInfo, pos_selectedSNPs2,\n                genosForGBI, indMetadataforGBI, freqs_selectedSNPs2, clusterNamesWithHetsEast, clusterColorsWithHetsEast;\n                missingFractionAllowed = missingFractionAllowed,\n                indColorLeftProvided = false,\n                indColorRightProvided = true)\n\nCalculated population allele frequencies and sample sizes\n\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\n\n(Scene (768px, 960px):\n  0 Plots\n  2 Child Scenes:\n    ├ Scene (768px, 960px)\n    └ Scene (768px, 960px), Union{Missing, Int16}[0 0 … 0 1; 0 0 … 2 0; … ; 2 2 … 0 2; 2 2 … 2 2], [5876520, 5882337, 5893275, 5923576, 5923618, 5932416, 5945810, 5966423, 5989088, 6012800  …  6433886, 6433927, 6498576, 6525018, 6533933, 6559702, 6559912, 6582488, 6582518, 6611772], 139×42 DataFrame\n Row │ ind                        ID                         location  group   ⋯\n     │ String                     String                     String7   String1 ⋯\n─────┼──────────────────────────────────────────────────────────────────────────\n   1 │ GW_Armando_plate1_TTGW70   GW_Armando_plate1_TTGW70   SA        lud_Sat ⋯\n   2 │ GW_Armando_plate1_TTGW72   GW_Armando_plate1_TTGW72   SA        lud_Sat\n   3 │ GW_Armando_plate1_TTGW78   GW_Armando_plate1_TTGW78   SA        lud_Sat\n   4 │ GW_Armando_plate2_TTGW73   GW_Armando_plate2_TTGW73   SA        lud_Sat\n   5 │ GW_Armando_plate2_TTGW75   GW_Armando_plate2_TTGW75   SA        lud_Sat ⋯\n   6 │ GW_Armando_plate2_TTGW80   GW_Armando_plate2_TTGW80   SA        lud_Sat\n   7 │ GW_Armando_plate1_TTGW11   GW_Armando_plate1_TTGW11   SU        lud_Suk\n   8 │ GW_Armando_plate2_TTGW09   GW_Armando_plate2_TTGW09   SU        lud_Suk\n   9 │ GW_Liz_GBS_Liz10045        GW_Liz_GBS_Liz10045        ML        lud     ⋯\n  10 │ GW_Liz_GBS_Liz10094        GW_Liz_GBS_Liz10094        ML        lud\n  11 │ GW_Liz_GBS_Liz5163         GW_Liz_GBS_Liz5163         ML        lud_chi\n  ⋮  │             ⋮                          ⋮                 ⋮            ⋮ ⋱\n 130 │ GW_Armando_plate1_JF23G02  GW_Armando_plate1_JF23G02  VB        plumb\n 131 │ GW_Armando_plate2_JF24G01  GW_Armando_plate2_JF24G01  VB        plumb   ⋯\n 132 │ GW_Armando_plate2_JF25G01  GW_Armando_plate2_JF25G01  VB        plumb\n 133 │ GW_Armando_plate1_JG02G02  GW_Armando_plate1_JG02G02  PR        plumb\n 134 │ GW_Armando_plate2_JG01G01  GW_Armando_plate2_JG01G01  PR        plumb\n 135 │ GW_Armando_plate2_JG02G01  GW_Armando_plate2_JG02G01  PR        plumb   ⋯\n 136 │ GW_Armando_plate2_JG02G03  GW_Armando_plate2_JG02G03  PR        plumb\n 137 │ GW_Armando_plate1_JG02G04  GW_Armando_plate1_JG02G04  PR        plumb\n 138 │ GW_Lane5_SL1               GW_Lane5_SL1               SL        plumb\n 139 │ GW_Lane5_SL2               GW_Lane5_SL2               SL        plumb   ⋯\n                                                 39 columns and 118 rows omitted)\n\n\n\n\n\nShow just the northern area\n\nclusterNamesWithHetsNorth = [\"vir\",\n                            \"vir_plumb\",\n                            \"plumb\"]\n\nclusterColorsWithHetsNorth = [\"blue\",\n                            \"purple\",\n                            \"red\"]\n\n# limit the SNPs to those with variants greater than 50% in \n# at least one pop, and less than 50% in at least one pop.\n# (So for each column in `freqs`, the maximum should be &gt; 0.5 \n# and the minimum should be &lt; 0.5)\n# Calculate allele freqs and sample sizes\nfreqs, sampleSizes = getFreqsAndSampleSizes(genos_selectedSNPs, clusterMembershipWithHets, clusterNamesWithHetsNorth)\nprintln(\"Calculated population allele frequencies and sample sizes\")\nselectedSNPs = (vec(maximum(freqs, dims=1)) .&gt; 0.5) .& (vec(minimum(freqs, dims=1)) .&lt; 0.5)\ngenos_selectedSNPs2 = genos_selectedSNPs[:, selectedSNPs]\npos_selectedSNPs2 = pos_selectedSNPs[selectedSNPs, :]\nfreqs_selectedSNPs2 = freqs[:, selectedSNPs]\n\nnumIndsToPlotWithHets = fill(100, length(clusterNamesWithHetsNorth))\n\ngenosForGBI, indMetadataforGBI = limitIndsToPlot(clusterNamesWithHetsNorth, numIndsToPlotWithHets, \n                                            genos_selectedSNPs2, PCAmodelAll.metadata;\n                                            sortByMissing = true)\n\nplotGenotypeByIndividual(regionInfo, pos_selectedSNPs2,\n                genosForGBI, indMetadataforGBI, freqs_selectedSNPs2, clusterNamesWithHetsNorth, clusterColorsWithHetsNorth;\n                missingFractionAllowed = missingFractionAllowed,\n                indColorLeftProvided = false,\n                indColorRightProvided = true)\n\nCalculated population allele frequencies and sample sizes\n\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\n\n(Scene (768px, 960px):\n  0 Plots\n  2 Child Scenes:\n    ├ Scene (768px, 960px)\n    └ Scene (768px, 960px), Union{Missing, Int16}[0 0 … 0 0; 0 0 … 0 0; … ; 2 2 … 2 2; 1 1 … 1 2], [5852400, 5876520, 5876593, 5882337, 5882559, 5893275, 5901011, 5970604, 5986806, 5994647  …  6459167, 6465882, 6465908, 6472163, 6472190, 6533933, 6538226, 6559702, 6559912, 6594141], 111×42 DataFrame\n Row │ ind                        ID                         location  group   ⋯\n     │ String                     String                     String7   String1 ⋯\n─────┼──────────────────────────────────────────────────────────────────────────\n   1 │ GW_Armando_plate1_JF12G04  GW_Armando_plate1_JF12G04  ST_vi     vir     ⋯\n   2 │ GW_Armando_plate2_JF03G01  GW_Armando_plate2_JF03G01  ST_vi     vir_mis\n   3 │ GW_Armando_plate2_JF30G01  GW_Armando_plate2_JF30G01  ST_vi     vir_mis\n   4 │ GW_Lane5_STvi1             GW_Lane5_STvi1             ST_vi     vir\n   5 │ GW_Lane5_STvi3             GW_Lane5_STvi3             ST_vi     vir     ⋯\n   6 │ GW_Lane5_STvi2             GW_Lane5_STvi2             ST_vi     vir\n   7 │ GW_Armando_plate1_JF16G01  GW_Armando_plate1_JF16G01  DV_vi     plumb_v\n   8 │ GW_Armando_plate2_JF16G02  GW_Armando_plate2_JF16G02  DV_vi     plumb_v\n   9 │ GW_Armando_plate2_JE31G01  GW_Armando_plate2_JE31G01  VB_vi     vir_mis ⋯\n  10 │ GW_Armando_plate2_JF03G02  GW_Armando_plate2_JF03G02  VB_vi     vir_mis\n  11 │ GW_Lane5_YK7               GW_Lane5_YK7               YK        vir\n  ⋮  │             ⋮                          ⋮                 ⋮          ⋮   ⋱\n 102 │ GW_Armando_plate2_JF24G01  GW_Armando_plate2_JF24G01  VB        plumb\n 103 │ GW_Armando_plate2_JF25G01  GW_Armando_plate2_JF25G01  VB        plumb   ⋯\n 104 │ GW_Armando_plate1_JG02G02  GW_Armando_plate1_JG02G02  PR        plumb\n 105 │ GW_Armando_plate2_JG01G01  GW_Armando_plate2_JG01G01  PR        plumb\n 106 │ GW_Armando_plate2_JG02G01  GW_Armando_plate2_JG02G01  PR        plumb\n 107 │ GW_Armando_plate1_JG02G04  GW_Armando_plate1_JG02G04  PR        plumb   ⋯\n 108 │ GW_Armando_plate2_JG02G03  GW_Armando_plate2_JG02G03  PR        plumb\n 109 │ GW_Lane5_SL1               GW_Lane5_SL1               SL        plumb\n 110 │ GW_Lane5_SL2               GW_Lane5_SL2               SL        plumb\n 111 │ GW_Armando_plate1_JF10G03  GW_Armando_plate1_JF10G03  ST        plumb_v ⋯\n                                                  39 columns and 90 rows omitted)",
    "crumbs": [
      "Home",
      "Greenish Warbler heterozygosity variance analysis"
    ]
  },
  {
    "objectID": "GW_Heterozygosity_Variance.html#try-chr-27",
    "href": "GW_Heterozygosity_Variance.html#try-chr-27",
    "title": "Greenish Warbler heterozygosity variance analysis",
    "section": "Try chr 27",
    "text": "Try chr 27\n\n# choose scaffold\nchr = \"gw27\"\n\npositionMin, positionMax, regionText, \n    windowedIndHetStanRegion, meanAcrossRegionIndHetStan,\n    genos_highViSHetRegion, pos_highViSHetRegion, regionInfo = \n    getWindowedIndHetStanRegion(genosOnly_included, \n                            pos_SNP_filtered, \n                            highViSHetRegions, chr;\n                            windowSize = 500)\n\n# inspect values for mean IndHetStan per individual for that high ViSHet region\nplot(meanAcrossRegionIndHetStan)\n\n# Add column to metadata containing the regionIndHetStan for this highHet region:\ncommand = \"ind_with_metadata_included.\" * chr * \"_regionIndHetStan = meanAcrossRegionIndHetStan\"\neval(Meta.parse(command)) # this executes the command constructed above\nind_with_metadata_included.regionIndHetStan = meanAcrossRegionIndHetStan\n\n#names(ind_with_metadata_included)\n\n# check whether missing data related to heterozygosity (good news: not really)\nplot(ind_with_metadata_included.numMissings, meanAcrossRegionIndHetStan)\n\n# PCA of all individuals:\n\ngenos_highViSHetRegion_imputed = Impute.svd(Matrix{Union{Missing, Float32}}(genos_highViSHetRegion))\n\nflipPC1 = true\nflipPC2 = true\n\nPCAmodelAll = plotPCA(genos_highViSHetRegion_imputed, ind_with_metadata_included, \n            groups_to_plot_PCA, group_colors_PCA; \n            sampleSet = \"greenish warblers\", regionText = regionText,\n            flip1 = flipPC1, flip2 = flipPC2,\n            lineOpacity = 0.7, fillOpacity = 0.6,\n            symbolSize = 14, showTitle = true,\n            xLabelText = string(\"Region PC1\"), yLabelText = string(\"Region PC2\"),\n            showPlot = false)\n\ndisplay(PCAmodelAll.PCAfig)\n\n# Add PC values to metadata for individuals included in PCA above:\nif flipPC1\n    PCAmodelAll.metadata.PC1 = -1 .* PCAmodelAll.values[1,:]\nelse \n    PCAmodelAll.metadata.PC1 = PCAmodelAll.values[1,:]\nend\nif flipPC2\n    PCAmodelAll.metadata.PC2 = -1 .* PCAmodelAll.values[2,:]\nelse\n    PCAmodelAll.metadata.PC2 = PCAmodelAll.values[2,:]\nend\nPCAmodelAll.metadata.PC3 = PCAmodelAll.values[3,:]\n\n# For the next bit to work with above, make sure that all individuals in the above `plotPCA` command\n# are included in the `groups_to_plot_PCA`\n\n# choose inds with low IndHet in high ViSHet region:\nindSelection_lowIndHetStan = (meanAcrossRegionIndHetStan .&lt; 1.4) \n\n#Plot only the lowIndHetStan individuals:\n\nf = CairoMakie.Figure();\nax = Axis(f[1, 1],\n    title = \"PC1 vs. PC2, only low heterozygosity\",\n    xlabel = \"Region PC1\", xlabelsize = 24,\n    ylabel = \"Region PC2\", ylabelsize = 24,\n    autolimitaspect = 1)\nhidedecorations!(ax, label = false, ticklabels = false, ticks = false) # hide background lattice\nfor i in eachindex(groups_to_plot_PCA) \n    selection = (PCAmodelAll.metadata.Fst_group .== groups_to_plot_PCA[i]) .& indSelection_lowIndHetStan\n    CairoMakie.scatter!(ax, PCAmodelAll.metadata.PC1[selection], PCAmodelAll.metadata.PC2[selection], marker = :diamond, color = (group_colors_PCA[i], 0.6), markersize = 14, strokewidth=0.5, strokecolor = (\"black\", 0.7))\nend\ndisplay(f)\n\nGood news: 1 region on that scaffold\n\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\nCairoMakie.Screen{IMAGE}",
    "crumbs": [
      "Home",
      "Greenish Warbler heterozygosity variance analysis"
    ]
  },
  {
    "objectID": "GW_Heterozygosity_Variance.html#tried-chr-1-but-some-unclean-distinguishing-of-ludlowi-clusters-no-wide-sharing-of-plumb",
    "href": "GW_Heterozygosity_Variance.html#tried-chr-1-but-some-unclean-distinguishing-of-ludlowi-clusters-no-wide-sharing-of-plumb",
    "title": "Greenish Warbler heterozygosity variance analysis",
    "section": "Tried chr 1 but some unclean distinguishing of ludlowi clusters (no wide sharing of plumb)",
    "text": "Tried chr 1 but some unclean distinguishing of ludlowi clusters (no wide sharing of plumb)",
    "crumbs": [
      "Home",
      "Greenish Warbler heterozygosity variance analysis"
    ]
  },
  {
    "objectID": "GW_Heterozygosity_Variance.html#included-chr-1a",
    "href": "GW_Heterozygosity_Variance.html#included-chr-1a",
    "title": "Greenish Warbler heterozygosity variance analysis",
    "section": "Included chr 1A",
    "text": "Included chr 1A",
    "crumbs": [
      "Home",
      "Greenish Warbler heterozygosity variance analysis"
    ]
  },
  {
    "objectID": "GW_Heterozygosity_Variance.html#tried-chr-2-but-some-unclean-distinguishing-of-ludlowi-clusters-with-some-sharing-of-plumb",
    "href": "GW_Heterozygosity_Variance.html#tried-chr-2-but-some-unclean-distinguishing-of-ludlowi-clusters-with-some-sharing-of-plumb",
    "title": "Greenish Warbler heterozygosity variance analysis",
    "section": "Tried chr 2 but some unclean distinguishing of ludlowi clusters (with some sharing of plumb)",
    "text": "Tried chr 2 but some unclean distinguishing of ludlowi clusters (with some sharing of plumb)",
    "crumbs": [
      "Home",
      "Greenish Warbler heterozygosity variance analysis"
    ]
  },
  {
    "objectID": "GW_Heterozygosity_Variance.html#included-chr-3",
    "href": "GW_Heterozygosity_Variance.html#included-chr-3",
    "title": "Greenish Warbler heterozygosity variance analysis",
    "section": "Included chr 3",
    "text": "Included chr 3",
    "crumbs": [
      "Home",
      "Greenish Warbler heterozygosity variance analysis"
    ]
  },
  {
    "objectID": "GW_Heterozygosity_Variance.html#tried-chr-4-but-not-clean-separation-of-high-vs.-low-indhet",
    "href": "GW_Heterozygosity_Variance.html#tried-chr-4-but-not-clean-separation-of-high-vs.-low-indhet",
    "title": "Greenish Warbler heterozygosity variance analysis",
    "section": "Tried chr 4 but not clean separation of high vs. low IndHet",
    "text": "Tried chr 4 but not clean separation of high vs. low IndHet",
    "crumbs": [
      "Home",
      "Greenish Warbler heterozygosity variance analysis"
    ]
  },
  {
    "objectID": "GW_Heterozygosity_Variance.html#included-chr-4a",
    "href": "GW_Heterozygosity_Variance.html#included-chr-4a",
    "title": "Greenish Warbler heterozygosity variance analysis",
    "section": "Included chr 4A",
    "text": "Included chr 4A",
    "crumbs": [
      "Home",
      "Greenish Warbler heterozygosity variance analysis"
    ]
  },
  {
    "objectID": "GW_Heterozygosity_Variance.html#tried-chr-5-but-not-clean-separation-of-high-vs.-low-indhet",
    "href": "GW_Heterozygosity_Variance.html#tried-chr-5-but-not-clean-separation-of-high-vs.-low-indhet",
    "title": "Greenish Warbler heterozygosity variance analysis",
    "section": "Tried chr 5 but not clean separation of high vs. low IndHet",
    "text": "Tried chr 5 but not clean separation of high vs. low IndHet",
    "crumbs": [
      "Home",
      "Greenish Warbler heterozygosity variance analysis"
    ]
  },
  {
    "objectID": "GW_Heterozygosity_Variance.html#tried-chr-6-but-not-clean-separation-of-high-vs.-low-indhet",
    "href": "GW_Heterozygosity_Variance.html#tried-chr-6-but-not-clean-separation-of-high-vs.-low-indhet",
    "title": "Greenish Warbler heterozygosity variance analysis",
    "section": "Tried chr 6 but not clean separation of high vs. low IndHet",
    "text": "Tried chr 6 but not clean separation of high vs. low IndHet",
    "crumbs": [
      "Home",
      "Greenish Warbler heterozygosity variance analysis"
    ]
  },
  {
    "objectID": "GW_Heterozygosity_Variance.html#tried-chr-7-but-not-clean-separation-of-high-vs.-low-indhet-recomb-in-ludlowi",
    "href": "GW_Heterozygosity_Variance.html#tried-chr-7-but-not-clean-separation-of-high-vs.-low-indhet-recomb-in-ludlowi",
    "title": "Greenish Warbler heterozygosity variance analysis",
    "section": "Tried chr 7 but not clean separation of high vs. low IndHet, recomb in ludlowi",
    "text": "Tried chr 7 but not clean separation of high vs. low IndHet, recomb in ludlowi",
    "crumbs": [
      "Home",
      "Greenish Warbler heterozygosity variance analysis"
    ]
  },
  {
    "objectID": "GW_Heterozygosity_Variance.html#tried-chr-8-but-not-clean-separation-of-high-vs.-low-indhet-recomb-in-ludlowi",
    "href": "GW_Heterozygosity_Variance.html#tried-chr-8-but-not-clean-separation-of-high-vs.-low-indhet-recomb-in-ludlowi",
    "title": "Greenish Warbler heterozygosity variance analysis",
    "section": "Tried chr 8 but not clean separation of high vs. low IndHet, recomb in ludlowi",
    "text": "Tried chr 8 but not clean separation of high vs. low IndHet, recomb in ludlowi",
    "crumbs": [
      "Home",
      "Greenish Warbler heterozygosity variance analysis"
    ]
  },
  {
    "objectID": "GW_Heterozygosity_Variance.html#tried-chr-9-but-not-clean-separation-of-high-vs.-low-indhet",
    "href": "GW_Heterozygosity_Variance.html#tried-chr-9-but-not-clean-separation-of-high-vs.-low-indhet",
    "title": "Greenish Warbler heterozygosity variance analysis",
    "section": "Tried chr 9 but not clean separation of high vs. low IndHet",
    "text": "Tried chr 9 but not clean separation of high vs. low IndHet",
    "crumbs": [
      "Home",
      "Greenish Warbler heterozygosity variance analysis"
    ]
  },
  {
    "objectID": "GW_Heterozygosity_Variance.html#tried-chr-10-but-not-clean-separation-of-high-vs.-low-indhet",
    "href": "GW_Heterozygosity_Variance.html#tried-chr-10-but-not-clean-separation-of-high-vs.-low-indhet",
    "title": "Greenish Warbler heterozygosity variance analysis",
    "section": "Tried chr 10 but not clean separation of high vs. low IndHet",
    "text": "Tried chr 10 but not clean separation of high vs. low IndHet",
    "crumbs": [
      "Home",
      "Greenish Warbler heterozygosity variance analysis"
    ]
  },
  {
    "objectID": "GW_Heterozygosity_Variance.html#tried-chr-11-and-has-potential-and-shows-an-obs-with-two-plumb-types-but-ludlowi-not-cleanly-distinguished-into-types",
    "href": "GW_Heterozygosity_Variance.html#tried-chr-11-and-has-potential-and-shows-an-obs-with-two-plumb-types-but-ludlowi-not-cleanly-distinguished-into-types",
    "title": "Greenish Warbler heterozygosity variance analysis",
    "section": "Tried chr 11 and has potential, and shows an obs with two plumb types, but ludlowi not cleanly distinguished into types",
    "text": "Tried chr 11 and has potential, and shows an obs with two plumb types, but ludlowi not cleanly distinguished into types",
    "crumbs": [
      "Home",
      "Greenish Warbler heterozygosity variance analysis"
    ]
  },
  {
    "objectID": "GW_Heterozygosity_Variance.html#tried-chr-12-but-not-a-very-clear-separation-of-high-vs.-low-indhet-shows-a-lot-of-sharing-of-plumb-haps-in-ludlowi",
    "href": "GW_Heterozygosity_Variance.html#tried-chr-12-but-not-a-very-clear-separation-of-high-vs.-low-indhet-shows-a-lot-of-sharing-of-plumb-haps-in-ludlowi",
    "title": "Greenish Warbler heterozygosity variance analysis",
    "section": "Tried chr 12 but not a very clear separation of high vs. low IndHet (shows a lot of sharing of plumb haps in ludlowi)",
    "text": "Tried chr 12 but not a very clear separation of high vs. low IndHet (shows a lot of sharing of plumb haps in ludlowi)",
    "crumbs": [
      "Home",
      "Greenish Warbler heterozygosity variance analysis"
    ]
  },
  {
    "objectID": "GW_Heterozygosity_Variance.html#tried-chr-14-but-not-clean-separation-of-high-vs.-low-indhet-recomb-in-ludlowi",
    "href": "GW_Heterozygosity_Variance.html#tried-chr-14-but-not-clean-separation-of-high-vs.-low-indhet-recomb-in-ludlowi",
    "title": "Greenish Warbler heterozygosity variance analysis",
    "section": "Tried chr 14 but not clean separation of high vs. low IndHet, recomb in ludlowi",
    "text": "Tried chr 14 but not clean separation of high vs. low IndHet, recomb in ludlowi",
    "crumbs": [
      "Home",
      "Greenish Warbler heterozygosity variance analysis"
    ]
  },
  {
    "objectID": "GW_Heterozygosity_Variance.html#included-chr-15",
    "href": "GW_Heterozygosity_Variance.html#included-chr-15",
    "title": "Greenish Warbler heterozygosity variance analysis",
    "section": "Included chr 15",
    "text": "Included chr 15",
    "crumbs": [
      "Home",
      "Greenish Warbler heterozygosity variance analysis"
    ]
  },
  {
    "objectID": "GW_Heterozygosity_Variance.html#no-chr-16",
    "href": "GW_Heterozygosity_Variance.html#no-chr-16",
    "title": "Greenish Warbler heterozygosity variance analysis",
    "section": "No chr 16",
    "text": "No chr 16",
    "crumbs": [
      "Home",
      "Greenish Warbler heterozygosity variance analysis"
    ]
  },
  {
    "objectID": "GW_Heterozygosity_Variance.html#tried-chr-23-but-not-a-very-clear-separation-of-high-vs.-low-indhet",
    "href": "GW_Heterozygosity_Variance.html#tried-chr-23-but-not-a-very-clear-separation-of-high-vs.-low-indhet",
    "title": "Greenish Warbler heterozygosity variance analysis",
    "section": "Tried chr 23 but not a very clear separation of high vs. low IndHet",
    "text": "Tried chr 23 but not a very clear separation of high vs. low IndHet",
    "crumbs": [
      "Home",
      "Greenish Warbler heterozygosity variance analysis"
    ]
  },
  {
    "objectID": "GW_Heterozygosity_Variance.html#included-chr-17-chr-18-chr-19-chr-20",
    "href": "GW_Heterozygosity_Variance.html#included-chr-17-chr-18-chr-19-chr-20",
    "title": "Greenish Warbler heterozygosity variance analysis",
    "section": "Included chr 17, chr 18, chr 19, chr 20",
    "text": "Included chr 17, chr 18, chr 19, chr 20",
    "crumbs": [
      "Home",
      "Greenish Warbler heterozygosity variance analysis"
    ]
  },
  {
    "objectID": "GW_Heterozygosity_Variance.html#tried-chr-21-but-not-a-very-clear-separation-of-high-vs.-low-indhet",
    "href": "GW_Heterozygosity_Variance.html#tried-chr-21-but-not-a-very-clear-separation-of-high-vs.-low-indhet",
    "title": "Greenish Warbler heterozygosity variance analysis",
    "section": "Tried chr 21 but not a very clear separation of high vs. low IndHet",
    "text": "Tried chr 21 but not a very clear separation of high vs. low IndHet",
    "crumbs": [
      "Home",
      "Greenish Warbler heterozygosity variance analysis"
    ]
  },
  {
    "objectID": "GW_Heterozygosity_Variance.html#tried-chr-22-but-not-a-very-clear-separation-of-high-vs.-low-indhet.-lud-is-all-over-the-place.",
    "href": "GW_Heterozygosity_Variance.html#tried-chr-22-but-not-a-very-clear-separation-of-high-vs.-low-indhet.-lud-is-all-over-the-place.",
    "title": "Greenish Warbler heterozygosity variance analysis",
    "section": "Tried chr 22 but not a very clear separation of high vs. low IndHet. Lud is all over the place.",
    "text": "Tried chr 22 but not a very clear separation of high vs. low IndHet. Lud is all over the place.",
    "crumbs": [
      "Home",
      "Greenish Warbler heterozygosity variance analysis"
    ]
  },
  {
    "objectID": "GW_Heterozygosity_Variance.html#tried-chr-23-and-almost-included-but-a-few-inds-would-be-tough-to-categorize.-similar-pattern-as-some-others.-not-a-very-clear-separation-of-high-vs.-low-indhet.",
    "href": "GW_Heterozygosity_Variance.html#tried-chr-23-and-almost-included-but-a-few-inds-would-be-tough-to-categorize.-similar-pattern-as-some-others.-not-a-very-clear-separation-of-high-vs.-low-indhet.",
    "title": "Greenish Warbler heterozygosity variance analysis",
    "section": "Tried chr 23 and almost included, but a few inds would be tough to categorize. Similar pattern as some others. Not a very clear separation of high vs. low IndHet.",
    "text": "Tried chr 23 and almost included, but a few inds would be tough to categorize. Similar pattern as some others. Not a very clear separation of high vs. low IndHet.",
    "crumbs": [
      "Home",
      "Greenish Warbler heterozygosity variance analysis"
    ]
  },
  {
    "objectID": "GW_Heterozygosity_Variance.html#tried-chr-24-but-not-a-very-clear-separation-of-high-vs.-low-indhet.",
    "href": "GW_Heterozygosity_Variance.html#tried-chr-24-but-not-a-very-clear-separation-of-high-vs.-low-indhet.",
    "title": "Greenish Warbler heterozygosity variance analysis",
    "section": "Tried chr 24 but not a very clear separation of high vs. low IndHet.",
    "text": "Tried chr 24 but not a very clear separation of high vs. low IndHet.",
    "crumbs": [
      "Home",
      "Greenish Warbler heterozygosity variance analysis"
    ]
  },
  {
    "objectID": "GW_Heterozygosity_Variance.html#tried-chr-25-but-not-a-very-clear-separation-of-high-vs.-low-indhet-and-hard-to-categorize-a-lot-of-inds.",
    "href": "GW_Heterozygosity_Variance.html#tried-chr-25-but-not-a-very-clear-separation-of-high-vs.-low-indhet-and-hard-to-categorize-a-lot-of-inds.",
    "title": "Greenish Warbler heterozygosity variance analysis",
    "section": "Tried chr 25 but not a very clear separation of high vs. low IndHet, and hard to categorize a lot of inds.",
    "text": "Tried chr 25 but not a very clear separation of high vs. low IndHet, and hard to categorize a lot of inds.",
    "crumbs": [
      "Home",
      "Greenish Warbler heterozygosity variance analysis"
    ]
  },
  {
    "objectID": "GW_Heterozygosity_Variance.html#included-chr-26",
    "href": "GW_Heterozygosity_Variance.html#included-chr-26",
    "title": "Greenish Warbler heterozygosity variance analysis",
    "section": "Included chr 26",
    "text": "Included chr 26",
    "crumbs": [
      "Home",
      "Greenish Warbler heterozygosity variance analysis"
    ]
  },
  {
    "objectID": "GW_Heterozygosity_Variance.html#tried-chr-27-but-not-a-very-clear-separation-of-high-vs.-low-indhet.",
    "href": "GW_Heterozygosity_Variance.html#tried-chr-27-but-not-a-very-clear-separation-of-high-vs.-low-indhet.",
    "title": "Greenish Warbler heterozygosity variance analysis",
    "section": "Tried chr 27 but not a very clear separation of high vs. low IndHet.",
    "text": "Tried chr 27 but not a very clear separation of high vs. low IndHet.",
    "crumbs": [
      "Home",
      "Greenish Warbler heterozygosity variance analysis"
    ]
  },
  {
    "objectID": "GW_Heterozygosity_Variance.html#included-chr-28",
    "href": "GW_Heterozygosity_Variance.html#included-chr-28",
    "title": "Greenish Warbler heterozygosity variance analysis",
    "section": "Included chr 28",
    "text": "Included chr 28",
    "crumbs": [
      "Home",
      "Greenish Warbler heterozygosity variance analysis"
    ]
  },
  {
    "objectID": "GW_Heterozygosity_Variance.html#included-chr-z",
    "href": "GW_Heterozygosity_Variance.html#included-chr-z",
    "title": "Greenish Warbler heterozygosity variance analysis",
    "section": "Included chr Z",
    "text": "Included chr Z",
    "crumbs": [
      "Home",
      "Greenish Warbler heterozygosity variance analysis"
    ]
  },
  {
    "objectID": "GW_Heterozygosity_Variance.html#make-a-summary-plot-for-the-cluster-types-at-different-chromosome-haploblocks-west-without-nitidus",
    "href": "GW_Heterozygosity_Variance.html#make-a-summary-plot-for-the-cluster-types-at-different-chromosome-haploblocks-west-without-nitidus",
    "title": "Greenish Warbler heterozygosity variance analysis",
    "section": "Make a summary plot for the cluster types at different chromosome haploblocks (west without nitidus)",
    "text": "Make a summary plot for the cluster types at different chromosome haploblocks (west without nitidus)\nWill modify the plotGenotypeByIndividual() function, but need to construct a genotype data structure based on the groups (determined above) for each haploblock.\nFor west side (without nitidus):\n\n#= # For debugging function:\n\nindMetadata = ind_with_metadata_included\nplotGroups = plotGroupsForSummary\nplotGroupColors = groupColorsForSummary\nregionNames = HaploblockRegions\nindFontSize = 10\nfigureSize = (1200, 1200)\nplotTitle = nothing\nindColorLeftProvided = false\nindColorRightProvided = false =#\n\n\"\"\"\n    plotHaploblockSummary(genosSummary, indMetadata,\n                            plotGroups, plotGroupColors;\n                            regionNames,\n                            indFontSize=10, figureSize=(1200, 1200),\n                            plotTitle = nothing,\n                            indColorLeftProvided = false,\n                            indColorRightProvided = false)\n\nConstruct a genotype-by-individual plot, with option to filter out SNPs with too much missing data. \n\nUnder the default setting, alleles are colored (dark purple vs. light purple) according to whichever allele is designated as `group1`. \n\n​# Arguments\n\n- `genosSummary`: Matrix containing summary genotype data (individuals in rows, loci in columns).\n- `indMetadata`: Matrix of metadata for individuals; must contain `Fst_group` and `plot_order` columns.\n- `plotGroups`: Vector of group names to include in plot.\n- `plotGroupColors`: Vector of plotting colors corresponding to the groups.\n- `regionNames`: Optional; Names of the genotyped regions.\n- `indFontSize`: Optional; the font size of the individual ID labels.\n- `figureSize`: Optional; the size of the figure; default is `(1200, 1200)`.  \n- `plotTitle`: Optional; default will make a title. For no title, set to `\"\"`.\n- `indColorLeftProvided`: Optional; Default is `false`. Set to `true` if there is a column labeled `indColorLeft` in the metadata providing color of each individual for plotting on left side.\n- `indColorRightProvided`: Optional; same as above but for right side (requires `indColorRight` column in metadata).\n\n# Notes\nReturns a tuple containing:\n- the figure\n- the plotted genotypes\n- the sorted metadata matrix for the plotted individuals\n\"\"\"\nfunction plotHaploblockSummary(genosSummary, indMetadata,\n                                plotGroups, plotGroupColors;\n                                regionNames = nothing,        \n                                indFontSize=10, figureSize=(1200, 1200),\n                                plotTitle = nothing,\n                                indColorLeftProvided = false,\n                                indColorRightProvided = false)\n    \n    # if the genoData has missing values, then convert to -1:\n    genosSummary[ismissing.(genosSummary)] .= -1\n\n    numRegions = size(genosSummary, 2)\n\n    genosSummary_subset = genosSummary[indMetadata.Fst_group .∈ Ref(plotGroups), :]\n    indMetadata_subset = indMetadata[indMetadata.Fst_group .∈ Ref(plotGroups), :]\n\n    # Choose sorting order by plot_order column in input metadata file\n\n    sorted_genosSummary_subset = genosSummary_subset[sortperm(indMetadata_subset.plot_order, rev=false), :]\n    numInds = size(sorted_genosSummary_subset, 1)\n    sorted_indMetadata_subset = indMetadata_subset[sortperm(indMetadata_subset.plot_order, rev=false), :]\n\n    # Set up the plot window:\n    f = CairoMakie.Figure(size=figureSize)\n\n    if isnothing(plotTitle)\n        plotTitle = \"Summary of $numRegions haploblock genotypes for $numInds individuals\"\n    end \n\n    # Set up the main Axis: \n    ax = Axis(f[1, 1],\n        title = plotTitle,\n        titlesize=30,\n        limits=(0.5 - 0.09 * (numRegions), 0.5 + 1.09 * (numRegions),\n            0.5 - 0.3 * numInds, 0.5 + numInds)\n    )\n    hidedecorations!(ax) # hide background lattice and axis labels\n    hidespines!(ax) # hide box around plot\n\n    genotypeColors = [\"#3f007d\", \"#807dba\", \"#dadaeb\", \"grey50\"]  # purple shades from colorbrewer\n\n    # plot evenly spaced by SNP order along chromosome:\n    # make top part of fig (genotypes for individuals)\n    labelCushion = numRegions / 100\n    label_x_left = 0.5 - labelCushion\n    label_x_right = 0.5 + numRegions + labelCushion\n    colorBoxCushion = 0.07 * numRegions\n    groupColorBox_x_left = 0.5 - colorBoxCushion\n    groupColorBox_x_right = 0.5 + numRegions + colorBoxCushion\n    boxWidth = 0.005 * numRegions * 2\n    groupColorBox_x_left = [-boxWidth, -boxWidth, boxWidth, boxWidth, -boxWidth] .+ groupColorBox_x_left\n    groupColorBox_x_right = [-boxWidth, -boxWidth, boxWidth, boxWidth, -boxWidth] .+ groupColorBox_x_right\n    groupColorBox_y = [0.4, -0.4, -0.4, 0.4, 0.4]\n\n    for i in 1:numInds\n        y = numInds + 1 - i  # y is location for plotting; this reverses order of plot top-bottom\n        labelText = last(split(sorted_indMetadata_subset.ID[i], \"_\"))  # this gets the last part of the sample ID (usually the main ID part)\n        # put sample label on left side:\n        CairoMakie.text!(label_x_left, y; text=labelText, align=(:right, :center), fontsize=indFontSize)\n        # put sample label on left side:\n        CairoMakie.text!(label_x_right, y; text=labelText, align=(:left, :center), fontsize=indFontSize)\n        if indColorLeftProvided\n            boxColorLeft = sorted_indMetadata_subset.indColorLeft[i]\n        else\n            boxColorLeft = plotGroupColors[findfirst(plotGroups .== sorted_indMetadata_subset.Fst_group[i])]\n        end\n        if indColorRightProvided\n            boxColorRight = sorted_indMetadata_subset.indColorRight[i]\n        else\n            boxColorRight = plotGroupColors[findfirst(plotGroups .== sorted_indMetadata_subset.Fst_group[i])]\n        end\n        CairoMakie.poly!(Point2f.(groupColorBox_x_left, (y .+ groupColorBox_y)), color=boxColorLeft)\n        CairoMakie.poly!(Point2f.(groupColorBox_x_right, (y .+ groupColorBox_y)), color=boxColorRight)\n    end\n\n    # generate my own plotting symbol (a rectangle)\n    box_x = [-0.45, -0.45, 0.45, 0.45, -0.45]\n    #box_x = [-0.5, -0.5, 0.5, 0.5, -0.5]\n    box_y = [0.4, -0.4, -0.4, 0.4, 0.4]\n    # generate triangles for plotting heterozygotes\n    triangle1_x = [-0.45, -0.45, 0.45, -0.45]\n    #triangle1_x = [-0.5, -0.5, 0.5, -0.5]\n    triangle1_y = [0.4, -0.4, 0.4, 0.4]\n    triangle2_x = [-0.45, 0.45, 0.45, -0.45]\n    #triangle2_x = [-0.5, 0.5, 0.5, -0.5]\n    triangle2_y = [-0.4, -0.4, 0.4, -0.4]\n    # cycle through individuals, graphing each type of genotype:\n    for i in 1:numInds\n        y = numInds + 1 - i  # y is location for plotting; this reverses order of plot top-bottom\n        #CairoMakie.lines!([0.5, numRegions + 0.5], [y, y], color=\"grey40\") # for lines across the individual rows\n        genotypes = sorted_genosSummary_subset[i, :]\n        hom_ref_locs = findall(genotypes .== 0)\n        if length(hom_ref_locs) &gt; 0\n            for j in eachindex(hom_ref_locs)\n                CairoMakie.poly!(Point2f.((hom_ref_locs[j] .+ box_x), (y .+ box_y)), color=genotypeColors[1])\n            end\n        end\n        het_locs = findall(genotypes .== 1)\n        if length(het_locs) &gt; 0\n            for j in eachindex(het_locs)\n                CairoMakie.poly!(Point2f.((het_locs[j] .+ triangle1_x), (y .+ triangle1_y)), color=genotypeColors[1])\n                CairoMakie.poly!(Point2f.((het_locs[j] .+ triangle2_x), (y .+ triangle2_y)), color=genotypeColors[3])\n            end\n        end\n        hom_alt_locs = findall(genotypes .== 2)\n        if length(hom_alt_locs) &gt; 0\n            for j in eachindex(hom_alt_locs)\n                CairoMakie.poly!(Point2f.((hom_alt_locs[j] .+ box_x), (y .+ box_y)), color=genotypeColors[3])\n            end\n        end\n    end\n\n    if isnothing(regionNames)\n        regionNames = string.(1:numRegions)\n    end\n\n    # make labels on lower part\n    y_label = 0.5 - 0.025numInds\n    for i in 1:numRegions\n        CairoMakie.text!(i, y_label; text = regionNames[i], align=(:center, :center), fontsize=30)\n    end\n\n    display(f)\n\n    return f, sorted_genosSummary_subset, sorted_indMetadata_subset\nend\n\n# Set up a data structure to store the key to converting, for each haploblock region, \n# the cluster names to genotype integers. This is a dictiionary of dictionaries:\nregionHaplotypeCode_west = Dict{String, Dict{String, Int}}(\n    \"gw1A\" =&gt; Dict(\"virLud\"=&gt;0, \"virLud_troch\"=&gt;1, \"troch\"=&gt;2),\n    \"gw3\" =&gt; Dict(\"virLud\"=&gt;0, \"virLudHet\"=&gt;0, \"virLud_trochObs\"=&gt;1, \"trochObs\"=&gt;2, \"trochObsHet\"=&gt;2),\n    \"gw13\" =&gt; Dict(\"virLud\"=&gt;0, \"virLud_troch\"=&gt;1, \"troch\"=&gt;2),\n    \"gw15\" =&gt; Dict(\"virLud\"=&gt;0, \"virLud_troch\"=&gt;1, \"troch\"=&gt;2),\n    \"gw18\" =&gt; Dict(\"virLud\"=&gt;0, \"virLud_troch\"=&gt;1, \"troch\"=&gt;2),\n    \"gw19\" =&gt; Dict(\"virLud\"=&gt;0, \"virLudHet\"=&gt;0, \"virLud_trochObs\"=&gt;1, \"trochObs\"=&gt;2, \"trochObsHet\"=&gt;2),\n    \"gw26\" =&gt; Dict(\"virLud\"=&gt;0, \"virLud_troch\"=&gt;1, \"troch\"=&gt;2),\n    \"gw28\" =&gt; Dict(\"virLud\"=&gt;0, \"virLud_troch\"=&gt;1, \"troch\"=&gt;2),\n    \"gwZ\" =&gt; Dict(\"vir\"=&gt;0, \"lud\"=&gt;0, \"lud_troch\"=&gt;1, \"troch\"=&gt;2)\n)\n\nhaploblockRegions = [\"gw1A\", \"gw3\", \"gw13\", \"gw15\", \"gw18\", \"gw19\", \"gw26\", \"gw28\", \"gwZ\"]\nnumHaploblockRegions = length(haploblockRegions)\nnumInds = size(ind_with_metadata_included, 1)\n# create genotype object and fill with missing (-1) genotypes\ngenosSummary = fill(-1, (numInds, numHaploblockRegions)) \n# fill object with appropriate genotypes\nfor i in 1:numHaploblockRegions\n    region = haploblockRegions[i]\n    for (key, value) in regionHaplotypeCode_west[region]\n        command = \"\"\"genosSummary[ind_with_metadata_included.$(region)_cluster .== \"$(key)\", $i] .= \"\"\" * string(value)\n        eval(Meta.parse(command)) # this executes the command constructed above\n    end\nend\n\n# Must say I am pleased with the cleverness of above. Concise datastructure and code that does a lot. :) \n\nplotGroupsForSummaryWest = [\"vir\",\"vir_S\",\"lud_PK\", \"lud_KS\", \"lud_central\", \"lud_Sath\", \"lud_ML\",\"troch_west\",\"troch_LN\"]\ngroupColorsForSummaryWest = [\"blue\",\"turquoise1\",\"seagreen4\",\"seagreen3\",\"seagreen2\",\"olivedrab3\",\"olivedrab2\",\"olivedrab1\",\"yellow\"] \n\nplotHaploblockSummary(genosSummary, ind_with_metadata_included,\n                            plotGroupsForSummaryWest, groupColorsForSummaryWest;\n                            regionNames = haploblockRegions,\n                            indFontSize = 8, figureSize = (1200, 1600),\n                            plotTitle = nothing,\n                            indColorLeftProvided = false,\n                            indColorRightProvided = false)\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\n\n(Scene (768px, 960px):\n  0 Plots\n  1 Child Scene:\n    └ Scene (768px, 960px), [0 0 … 0 0; 0 0 … 0 0; … ; 2 2 … 2 2; 2 2 … 2 2], 177×38 DataFrame\n Row │ ind                        ID                         location  group   ⋯\n     │ String                     String                     String7   String1 ⋯\n─────┼──────────────────────────────────────────────────────────────────────────\n   1 │ GW_Armando_plate1_JF12G04  GW_Armando_plate1_JF12G04  ST_vi     vir     ⋯\n   2 │ GW_Armando_plate2_JF03G01  GW_Armando_plate2_JF03G01  ST_vi     vir_mis\n   3 │ GW_Armando_plate2_JF30G01  GW_Armando_plate2_JF30G01  ST_vi     vir_mis\n   4 │ GW_Lane5_STvi1             GW_Lane5_STvi1             ST_vi     vir\n   5 │ GW_Lane5_STvi2             GW_Lane5_STvi2             ST_vi     vir     ⋯\n   6 │ GW_Lane5_STvi3             GW_Lane5_STvi3             ST_vi     vir\n   7 │ GW_Armando_plate1_JF16G01  GW_Armando_plate1_JF16G01  DV_vi     plumb_v\n   8 │ GW_Armando_plate2_JF16G02  GW_Armando_plate2_JF16G02  DV_vi     plumb_v\n   9 │ GW_Armando_plate2_JE31G01  GW_Armando_plate2_JE31G01  VB_vi     vir_mis ⋯\n  10 │ GW_Armando_plate2_JF03G02  GW_Armando_plate2_JF03G02  VB_vi     vir_mis\n  11 │ GW_Lane5_YK11              GW_Lane5_YK11              YK        vir\n  ⋮  │             ⋮                          ⋮                 ⋮          ⋮   ⋱\n 168 │ GW_Lane5_LN14              GW_Lane5_LN14              LN        troch_L\n 169 │ GW_Lane5_LN16              GW_Lane5_LN16              LN        troch_L ⋯\n 170 │ GW_Lane5_LN18              GW_Lane5_LN18              LN        troch_L\n 171 │ GW_Lane5_LN19              GW_Lane5_LN19              LN        troch_L\n 172 │ GW_Lane5_LN20              GW_Lane5_LN20              LN        troch_L\n 173 │ GW_Lane5_LN3               GW_Lane5_LN3               LN        troch_L ⋯\n 174 │ GW_Lane5_LN4               GW_Lane5_LN4               LN        troch_L\n 175 │ GW_Lane5_LN6               GW_Lane5_LN6               LN        troch_L\n 176 │ GW_Lane5_LN7               GW_Lane5_LN7               LN        troch_L\n 177 │ GW_Lane5_LN8               GW_Lane5_LN8               LN        troch_L ⋯\n                                                 35 columns and 156 rows omitted)",
    "crumbs": [
      "Home",
      "Greenish Warbler heterozygosity variance analysis"
    ]
  },
  {
    "objectID": "GW_Heterozygosity_Variance.html#make-a-summary-plot-for-the-east-side",
    "href": "GW_Heterozygosity_Variance.html#make-a-summary-plot-for-the-east-side",
    "title": "Greenish Warbler heterozygosity variance analysis",
    "section": "Make a summary plot for the east side",
    "text": "Make a summary plot for the east side\n\n# Set up a data structure to store the key to converting, for each haploblock region, \n# the cluster names to genotype integers. This is a dictiionary of dictionaries:\nregionHaplotypeCode_east = Dict{String, Dict{String, Int}}(\n    \"gw1A\" =&gt; Dict(\"obs\"=&gt;0, \"plumb\"=&gt;2),\n    \"gw3\" =&gt; Dict(\"trochObs\"=&gt;0, \"trochObsHet\"=&gt;0, \"plumb\"=&gt;2, \"plumbHet\"=&gt;2),\n    \"gw13\" =&gt; Dict(\"obs\"=&gt;0, \"plumb\"=&gt;2, \"plumbHet\"=&gt;2),\n    \"gw15\" =&gt; Dict(\"obs\"=&gt;0, \"plumb\"=&gt;2),\n    \"gw18\" =&gt; Dict(\"obs\"=&gt;0, \"obs_plumb\"=&gt;1, \"plumb\"=&gt;2),\n    \"gw19\" =&gt; Dict(\"trochObs\"=&gt;0, \"trochObs_plumb\"=&gt;1, \"plumb\"=&gt;2),\n    \"gw26\" =&gt; Dict(\"obs\"=&gt;0, \"obs_plumb\"=&gt;1, \"plumb\"=&gt;2),\n    \"gw28\" =&gt; Dict(\"obs\"=&gt;0, \"obsHet\"=&gt;0, \"obs_plumb\"=&gt;1, \"plumb\"=&gt;2),\n    \"gwZ\" =&gt; Dict(\"obs\"=&gt;0, \"plumb\"=&gt;2)\n)\n\nhaploblockRegions = [\"gw1A\", \"gw3\", \"gw13\", \"gw15\", \"gw18\", \"gw19\", \"gw26\", \"gw28\", \"gwZ\"]\nnumHaploblockRegions = length(haploblockRegions)\nnumInds = size(ind_with_metadata_included, 1)\n# create genotype object and fill with missing (-1) genotypes\ngenosSummary = fill(-1, (numInds, numHaploblockRegions)) \n# fill object with appropriate genotypes\nfor i in 1:numHaploblockRegions\n    region = haploblockRegions[i]\n    for (key, value) in regionHaplotypeCode_east[region]\n        command = \"\"\"genosSummary[ind_with_metadata_included.$(region)_cluster .== \"$(key)\", $i] .= \"\"\" * string(value)\n        eval(Meta.parse(command)) # this executes the command constructed above\n    end\nend\n\n# Must say I am pleased with the cleverness of above. Concise datastructure and code that does a lot. :) \n\nplotGroupsForSummaryEast = [\"obs\",\"plumb_BJ\",\"plumb\"]\ngroupColorsForSummaryEast = [\"orange\",\"pink\",\"red\"] \n\nplotHaploblockSummary(genosSummary, ind_with_metadata_included,\n                            plotGroupsForSummaryEast, groupColorsForSummaryEast;\n                            regionNames = haploblockRegions,\n                            indFontSize = 8, figureSize = (1200, 1600),\n                            plotTitle = nothing,\n                            indColorLeftProvided = false,\n                            indColorRightProvided = false)\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\n\n(Scene (768px, 960px):\n  0 Plots\n  1 Child Scene:\n    └ Scene (768px, 960px), [0 0 … 0 0; 0 0 … 0 0; … ; 2 2 … 2 2; 2 2 … 2 2], 76×38 DataFrame\n Row │ ind                        ID                         location  group   ⋯\n     │ String                     String                     String7   String1 ⋯\n─────┼──────────────────────────────────────────────────────────────────────────\n   1 │ GW_Lane5_DA2               GW_Lane5_DA2               XN        obs     ⋯\n   2 │ GW_Lane5_DA3               GW_Lane5_DA3               XN        obs\n   3 │ GW_Lane5_DA4               GW_Lane5_DA4               XN        obs\n   4 │ GW_Lane5_DA7               GW_Lane5_DA7               XN        obs\n   5 │ GW_Armando_plate1_RF20G01  GW_Armando_plate1_RF20G01  BJ        obs_plu ⋯\n   6 │ GW_Armando_plate1_RF29G02  GW_Armando_plate1_RF29G02  BJ        obs_plu\n   7 │ GW_Armando_plate2_RF29G01  GW_Armando_plate2_RF29G01  BJ        obs_plu\n   8 │ GW_Lane5_BK2               GW_Lane5_BK2               BK        plumb\n   9 │ GW_Lane5_BK3               GW_Lane5_BK3               BK        plumb   ⋯\n  10 │ GW_Lane5_AN1               GW_Lane5_AN1               AN        plumb\n  11 │ GW_Lane5_AN2               GW_Lane5_AN2               AN        plumb\n  ⋮  │             ⋮                          ⋮                 ⋮          ⋮   ⋱\n  67 │ GW_Armando_plate1_JF24G02  GW_Armando_plate1_JF24G02  VB        plumb\n  68 │ GW_Armando_plate2_JF24G01  GW_Armando_plate2_JF24G01  VB        plumb   ⋯\n  69 │ GW_Armando_plate2_JF25G01  GW_Armando_plate2_JF25G01  VB        plumb\n  70 │ GW_Armando_plate1_JG02G02  GW_Armando_plate1_JG02G02  PR        plumb\n  71 │ GW_Armando_plate1_JG02G04  GW_Armando_plate1_JG02G04  PR        plumb\n  72 │ GW_Armando_plate2_JG01G01  GW_Armando_plate2_JG01G01  PR        plumb   ⋯\n  73 │ GW_Armando_plate2_JG02G01  GW_Armando_plate2_JG02G01  PR        plumb\n  74 │ GW_Armando_plate2_JG02G03  GW_Armando_plate2_JG02G03  PR        plumb\n  75 │ GW_Lane5_SL1               GW_Lane5_SL1               SL        plumb\n  76 │ GW_Lane5_SL2               GW_Lane5_SL2               SL        plumb   ⋯\n                                                  35 columns and 55 rows omitted)",
    "crumbs": [
      "Home",
      "Greenish Warbler heterozygosity variance analysis"
    ]
  },
  {
    "objectID": "GW_Heterozygosity_Variance.html#make-a-summary-plot-for-the-north-side",
    "href": "GW_Heterozygosity_Variance.html#make-a-summary-plot-for-the-north-side",
    "title": "Greenish Warbler heterozygosity variance analysis",
    "section": "Make a summary plot for the north side",
    "text": "Make a summary plot for the north side\n\n# Set up a data structure to store the code to converting, for each haploblock region, \n# the cluster names to genotype integers. This is a dictiionary of dictionaries:\nregionHaplotypeCode_north = Dict{String, Dict{String, Int}}(\n    \"gw1A\" =&gt; Dict(\"virLud\"=&gt;0, \"vir_plumb\"=&gt;1, \"plumb\"=&gt;2),\n    \"gw3\" =&gt; Dict(\"virLud\"=&gt;0, \"virLudHet\"=&gt;0, \"vir_plumb\"=&gt;1, \"plumb\"=&gt;2, \"plumbHet\"=&gt;2),\n    \"gw13\" =&gt; Dict(\"virLud\"=&gt;0, \"vir_plumb\"=&gt;1, \"plumb\"=&gt;2, \"plumbHet\"=&gt;2),\n    \"gw15\" =&gt; Dict(\"virLud\"=&gt;0, \"vir_plumb\"=&gt;1, \"plumb\"=&gt;2),\n    \"gw18\" =&gt; Dict(\"virLud\"=&gt;0, \"vir_plumb\"=&gt;1, \"plumb\"=&gt;2),\n    \"gw19\" =&gt; Dict(\"virLud\"=&gt;0, \"virLudHet\"=&gt;0, \"vir_plumb\"=&gt;1, \"plumb\"=&gt;2),\n    \"gw26\" =&gt; Dict(\"virLud\"=&gt;0, \"vir_plumb\"=&gt;1, \"plumb\"=&gt;2),\n    \"gw28\" =&gt; Dict(\"virLud\"=&gt;0, \"vir_plumb\"=&gt;1, \"plumb\"=&gt;2),\n    \"gwZ\" =&gt; Dict(\"vir\"=&gt;0, \"plumb\"=&gt;2)\n)\n\nhaploblockRegions = [\"gw1A\", \"gw3\", \"gw13\", \"gw15\", \"gw18\", \"gw19\", \"gw26\", \"gw28\", \"gwZ\"]\nnumHaploblockRegions = length(haploblockRegions)\nnumInds = size(ind_with_metadata_included, 1)\n# create genotype object and fill with missing (-1) genotypes\ngenosSummary = fill(-1, (numInds, numHaploblockRegions)) \n# fill object with appropriate genotypes\nfor i in 1:numHaploblockRegions\n    region = haploblockRegions[i]\n    for (key, value) in regionHaplotypeCode_north[region]\n        command = \"\"\"genosSummary[ind_with_metadata_included.$(region)_cluster .== \"$(key)\", $i] .= \"\"\" * string(value)\n        eval(Meta.parse(command)) # this executes the command constructed above\n    end\nend\n\nplotGroupsForSummaryNorth = [\"vir\",\"plumb_vir\",\"plumb\"]\ngroupColorsForSummaryNorth = [\"blue\",\"purple\",\"red\"] \n\nplotHaploblockSummary(genosSummary, ind_with_metadata_included,\n                            plotGroupsForSummaryNorth, groupColorsForSummaryNorth;\n                            regionNames = haploblockRegions,\n                            indFontSize = 8, figureSize = (1200, 1600),\n                            plotTitle = nothing,\n                            indColorLeftProvided = false,\n                            indColorRightProvided = false)\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\n\n(Scene (768px, 960px):\n  0 Plots\n  1 Child Scene:\n    └ Scene (768px, 960px), [0 0 … 0 0; 0 0 … 0 0; … ; 2 2 … 2 2; 1 2 … 1 2], 100×38 DataFrame\n Row │ ind                        ID                         location  group   ⋯\n     │ String                     String                     String7   String1 ⋯\n─────┼──────────────────────────────────────────────────────────────────────────\n   1 │ GW_Armando_plate1_JF12G04  GW_Armando_plate1_JF12G04  ST_vi     vir     ⋯\n   2 │ GW_Armando_plate2_JF03G01  GW_Armando_plate2_JF03G01  ST_vi     vir_mis\n   3 │ GW_Armando_plate2_JF30G01  GW_Armando_plate2_JF30G01  ST_vi     vir_mis\n   4 │ GW_Lane5_STvi1             GW_Lane5_STvi1             ST_vi     vir\n   5 │ GW_Lane5_STvi2             GW_Lane5_STvi2             ST_vi     vir     ⋯\n   6 │ GW_Lane5_STvi3             GW_Lane5_STvi3             ST_vi     vir\n   7 │ GW_Armando_plate1_JF16G01  GW_Armando_plate1_JF16G01  DV_vi     plumb_v\n   8 │ GW_Armando_plate2_JF16G02  GW_Armando_plate2_JF16G02  DV_vi     plumb_v\n   9 │ GW_Armando_plate2_JE31G01  GW_Armando_plate2_JE31G01  VB_vi     vir_mis ⋯\n  10 │ GW_Armando_plate2_JF03G02  GW_Armando_plate2_JF03G02  VB_vi     vir_mis\n  11 │ GW_Lane5_YK11              GW_Lane5_YK11              YK        vir\n  ⋮  │             ⋮                          ⋮                 ⋮          ⋮   ⋱\n  91 │ GW_Armando_plate2_JF24G01  GW_Armando_plate2_JF24G01  VB        plumb\n  92 │ GW_Armando_plate2_JF25G01  GW_Armando_plate2_JF25G01  VB        plumb   ⋯\n  93 │ GW_Armando_plate1_JG02G02  GW_Armando_plate1_JG02G02  PR        plumb\n  94 │ GW_Armando_plate1_JG02G04  GW_Armando_plate1_JG02G04  PR        plumb\n  95 │ GW_Armando_plate2_JG01G01  GW_Armando_plate2_JG01G01  PR        plumb\n  96 │ GW_Armando_plate2_JG02G01  GW_Armando_plate2_JG02G01  PR        plumb   ⋯\n  97 │ GW_Armando_plate2_JG02G03  GW_Armando_plate2_JG02G03  PR        plumb\n  98 │ GW_Lane5_SL1               GW_Lane5_SL1               SL        plumb\n  99 │ GW_Lane5_SL2               GW_Lane5_SL2               SL        plumb\n 100 │ GW_Armando_plate1_JF10G03  GW_Armando_plate1_JF10G03  ST        plumb_v ⋯\n                                                  35 columns and 79 rows omitted)",
    "crumbs": [
      "Home",
      "Greenish Warbler heterozygosity variance analysis"
    ]
  },
  {
    "objectID": "GW_Heterozygosity_Variance.html#make-a-summary-plot-for-the-whole-ring",
    "href": "GW_Heterozygosity_Variance.html#make-a-summary-plot-for-the-whole-ring",
    "title": "Greenish Warbler heterozygosity variance analysis",
    "section": "Make a summary plot for the whole ring",
    "text": "Make a summary plot for the whole ring\n\n# Set up a code converting integers to colors. \n# These will be used for all chromosome regions below.\n\nintegerToColorCodes = Dict{Int, String}(\n    1 =&gt; \"blue\", # vir\n    2 =&gt; \"turquoise1\", # vir south\n    3 =&gt; \"grey\", # nit\n    4 =&gt; \"green\", # lud\n    5 =&gt; \"yellow\", # troch\n    6 =&gt; \"orange\", # obs\n    7 =&gt; \"red\", # plumb\n)\n\n# Set up a data structure to store the code to converting, for each haploblock region, \n# the cluster names to genotype integers corresponding to colors above. This is a dictionary of dictionaries.\n# Each genotype will be encoded with a tuple representing the alleles.\nregionHaplotypeCode_all = Dict{String, Dict{String, Tuple{Int, Int}}}(\n    \"gw1A\" =&gt; Dict(\"virLud\"=&gt;(1,1), \n                    \"nit\"=&gt;(3,3),\n                    \"virLud_troch\"=&gt;(1,5), \n                    \"troch\"=&gt;(5,5),\n                    \"obs\"=&gt;(6,6),\n                    \"plumb\"=&gt;(7,7),\n                    \"vir_plumb\"=&gt;(1,7)),\n    \"gw3\" =&gt; Dict(\"virLud\"=&gt;(1,1), \n                    \"virLudHet\"=&gt;(1,1),\n                    \"nit\"=&gt;(3,3),\n                    \"virLud_trochObs\"=&gt;(1,5),\n                    \"trochObs\"=&gt;(5,5),\n                    \"trochObsHet\"=&gt;(5,5),\n                    \"plumb\"=&gt;(7,7),\n                    \"plumbHet\"=&gt;(7,7),\n                    \"vir_plumb\"=&gt;(1,7)),\n    \"gw4A\" =&gt; Dict(\"virLud\"=&gt;(1,1),\n                    \"virLudHet\"=&gt;(1,1),\n                    \"nit\"=&gt;(3,3),\n                    \"virLud_troch\"=&gt;(1,5),\n                    \"troch\"=&gt;(5,5),\n                    \"trochHet\"=&gt;(5,5),\n                    \"troch_obsPlumb\"=&gt;(5,7),\n                    \"obsPlumb\"=&gt;(7,7),\n                    \"obsPlumbHet\"=&gt;(7,7),\n                    \"virLud_obsPlumb\"=&gt;(1,7)),\n    \"gw13\" =&gt; Dict(\"vir\"=&gt;(1,1),\n                    \"vir_lud\"=&gt;(1,4),\n                    \"nit\"=&gt;(3,3),\n                    \"lud\"=&gt;(4,4),\n                    \"lud_troch\"=&gt;(4,5),\n                    \"troch\"=&gt;(5,5),\n                    \"obs\"=&gt;(6,6),\n                    \"plumb\"=&gt;(7,7),\n                    \"plumbHet\"=&gt;(7,7),\n                    \"vir_plumb\"=&gt;(1,7)),      \n    \"gw15\" =&gt; Dict(\"virLud\"=&gt;(1,1),\n                    \"nit\"=&gt;(3,3),\n                    \"virLud_troch\"=&gt;(1,5),\n                    \"troch\"=&gt;(5,5),\n                    \"obs\"=&gt;(6,6),\n                    \"plumb\"=&gt;(7,7),\n                    \"vir_plumb\"=&gt;(1,7)),\n    \"gw17\" =&gt; Dict(\"virLud\"=&gt;(1,1),\n                    \"nit\"=&gt;(3,3),\n                    \"virLud_troch\"=&gt;(1,5),\n                    \"troch\"=&gt;(5,5),\n                    \"virLud_obs\"=&gt;(1,6),\n                    \"obs\"=&gt;(6,6),\n                    \"troch_plumb\"=&gt;(5,7),\n                    \"plumb\"=&gt;(7,7),\n                    \"vir_plumb\"=&gt;(1,7)),\n    \"gw18\" =&gt; Dict(\"virLud\"=&gt;(1,1),\n                    \"nit\"=&gt;(3,3),\n                    \"virLud_troch\"=&gt;(1,5),\n                    \"troch\"=&gt;(5,5),\n                    \"obs\"=&gt;(6,6),\n                    \"obs_plumb\"=&gt;(6,7),\n                    \"plumb\"=&gt;(7,7),\n                    \"vir_plumb\"=&gt;(1,7)),\n    \"gw19\" =&gt; Dict(\"virLud\"=&gt;(1,1),\n                    \"virLudHet\"=&gt;(1,1),\n                    \"nit\"=&gt;(3,3),\n                    \"virLud_trochObs\"=&gt;(1,5),\n                    \"trochObs\"=&gt;(5,5),\n                    \"trochObsHet\"=&gt;(5,5),\n                    \"trochObs_plumb\"=&gt;(5,7),\n                    \"plumb\"=&gt;(7,7),\n                    \"vir_plumb\"=&gt;(1,7)),\n    \"gw20\" =&gt; Dict(\"vir\"=&gt;(1,1),\n                \"nit\"=&gt;(3,3),\n                \"lud\"=&gt;(4,4),\n                \"ludHet\"=&gt;(4,4),\n                \"lud_troch\"=&gt;(4,5),\n                \"troch\"=&gt;(5,5),\n                \"obs\"=&gt;(6,6),\n                \"obs_plumb\"=&gt;(6,7),\n                \"plumb\"=&gt;(7,7),\n                \"vir_plumb\"=&gt;(1,7)),\n    \"gw26\" =&gt; Dict(\"virLud\"=&gt;(1,1),\n                    \"nit\"=&gt;(3,3),\n                    \"virLud_troch\"=&gt;(1,5),\n                    \"troch\"=&gt;(5,5),\n                    \"obs\"=&gt;(6,6),\n                    \"obs_plumb\"=&gt;(6,7),\n                    \"plumb\"=&gt;(7,7),\n                    \"vir_plumb\"=&gt;(1,7)),\n    \"gw28\" =&gt; Dict(\"virLud\"=&gt;(1,1),\n                    \"virLud_nit\"=&gt;(1,3),\n                    \"nit\"=&gt;(3,3),\n                    \"virLud_troch\"=&gt;(1,5),\n                    \"troch\"=&gt;(5,5),\n                    \"obs\"=&gt;(6,6),\n                    \"obsHet\"=&gt;(6,6),\n                    \"obs_plumb\"=&gt;(6,7),\n                    \"plumb\"=&gt;(7,7),\n                    \"vir_plumb\"=&gt;(1,7)),\n    \"gwZ\" =&gt; Dict(\"vir\"=&gt;(1,1),\n                    \"vir_lud\"=&gt;(1,4),\n                    \"nit\"=&gt;(3,3),\n                    \"lud\"=&gt;(4,4),\n                    \"lud_troch\"=&gt;(4,5),\n                    \"troch\"=&gt;(5,5),\n                    \"obs\"=&gt;(6,6),\n                    \"plumb\"=&gt;(7,7))\n)\n\nhaploblockRegions = [\"gwZ\", \"gw1A\", \"gw3\", \"gw4A\", \"gw13\", \"gw15\", \"gw17\", \"gw18\", \"gw19\", \"gw20\",\"gw26\", \"gw28\"]\n\nnumHaploblockRegions = length(haploblockRegions)\nnumInds = size(ind_with_metadata_included, 1)\n# create genotype object and fill with missing (-1) genotypes\ngenosSummary = fill((-9, -9), numInds, numHaploblockRegions)\n# fill object with appropriate genotypes\nfor i in 1:numHaploblockRegions\n    region = haploblockRegions[i]\n    for (key, value) in regionHaplotypeCode_all[region]\n        command = \"\"\"genosSummary[ind_with_metadata_included.$(region)_cluster .== \"$(key)\", $i] .= ($(string(value)),)\"\"\"  # the construction at the end \"protects\" the tuple within a tuple, so it broadcasts correctly to each element on the left\n        eval(Meta.parse(command)) # this executes the command constructed above\n    end\nend\n\nplotGroupsForSummary_all = [\"vir\",\"vir_S\",\"nit\", \"lud_PK\", \"lud_KS\", \"lud_central\", \"lud_Sath\", \"lud_ML\",\"troch_west\",\"troch_LN\",\"troch_EM\",\"obs\",\"plumb_BJ\",\"plumb\",\"plumb_vir\"]\ngroupColorsForSummary_all = [\"blue\",\"turquoise1\",\"grey\",\"seagreen4\",\"seagreen3\",\"seagreen2\",\"olivedrab3\",\"olivedrab2\",\"olivedrab1\",\"yellow\",\"gold\",\"orange\",\"pink\",\"red\",\"purple\"] \n\n\n\"\"\"\n    plotHaploblockSummary(integerToColorCodes::Dict{Int, String},\n                            genosSummary::Matrix{Tuple{Int64, Int64}},\n                            indMetadata,\n                            plotGroups, plotGroupColors;\n                            regionNames,\n                            indFontSize=10, figureSize=(1200, 1200),\n                            plotTitle = nothing,\n                            indColorLeftProvided = false,\n                            indColorRightProvided = false)\n\nConstruct a genotype-by-individual plot, with option to filter out SNPs with too much missing data. \n\nIn this version, more than two haplotype alleles can be plotted, using colors provided according to the first argument.\n\n​# Arguments\n\n- `integerToColorCodes`: The code matching integer haploblock types to colors.\n- `genosSummary`: Matrix containing summary genotype data (individuals in rows, loci in columns), with each genotype represented by a tuple of 2 integers.\n- `indMetadata`: Matrix of metadata for individuals; must contain `Fst_group` and `plot_order` columns.\n- `plotGroups`: Vector of group names to include in plot.\n- `plotGroupColors`: Vector of plotting colors corresponding to the groups.\n- `regionNames`: Optional; Names of the genotyped regions.\n- `indFontSize`: Optional; the font size of the individual ID labels.\n- `figureSize`: Optional; the size of the figure; default is `(1200, 1200)`.  \n- `plotTitle`: Optional; default will make a title. For no title, set to `\"\"`.\n- `indColorLeftProvided`: Optional; Default is `false`. Set to `true` if there is a column labeled `indColorLeft` in the metadata providing color of each individual for plotting on left side.\n- `indColorRightProvided`: Optional; same as above but for right side (requires `indColorRight` column in metadata).\n\n# Notes\nReturns a tuple containing:\n- the figure\n- the plotted genotypes\n- the sorted metadata matrix for the plotted individuals\n\"\"\"\nfunction plotHaploblockSummary(integerToColorCodes::Dict{Int, String},\n                                genosSummary::Matrix{Tuple{Int64, Int64}}, \n                                indMetadata,\n                                plotGroups, plotGroupColors;\n                                regionNames = nothing,        \n                                indFontSize=10, figureSize=(1200, 1200),\n                                plotTitle = nothing,\n                                indColorLeftProvided = false,\n                                indColorRightProvided = false)\n\n    numRegions = size(genosSummary, 2)\n\n    genosSummary_subset = genosSummary[indMetadata.Fst_group .∈ Ref(plotGroups), :]\n    indMetadata_subset = indMetadata[indMetadata.Fst_group .∈ Ref(plotGroups), :]\n\n    # Choose sorting order by plot_order column in input metadata file\n\n    sorted_genosSummary_subset = genosSummary_subset[sortperm(indMetadata_subset.plot_order, rev=false), :]\n    numInds = size(sorted_genosSummary_subset, 1)\n    sorted_indMetadata_subset = indMetadata_subset[sortperm(indMetadata_subset.plot_order, rev=false), :]\n\n    # Set up the plot window:\n    f = CairoMakie.Figure(size=figureSize)\n\n    if isnothing(plotTitle)\n        plotTitle = \"Summary of $numRegions haploblock genotypes for $numInds individuals\"\n    end \n\n    # Set up the main Axis: \n    ax = Axis(f[1, 1],\n        title = plotTitle,\n        titlesize=30,\n        limits=(0.5 - 0.09 * (numRegions), 0.5 + 1.09 * (numRegions),\n            0.5 - 0.3 * numInds, 0.5 + numInds)\n    )\n    hidedecorations!(ax) # hide background lattice and axis labels\n    hidespines!(ax) # hide box around plot\n\n    genotypeColors = [\"#3f007d\", \"#807dba\", \"#dadaeb\", \"grey50\"]  # purple shades from colorbrewer\n\n    # plot evenly spaced by SNP order along chromosome:\n    # make top part of fig (genotypes for individuals)\n    labelCushion = numRegions / 100\n    label_x_left = 0.5 - labelCushion\n    label_x_right = 0.5 + numRegions + labelCushion\n    colorBoxCushion = 0.07 * numRegions\n    groupColorBox_x_left = 0.5 - colorBoxCushion\n    groupColorBox_x_right = 0.5 + numRegions + colorBoxCushion\n    boxWidth = 0.005 * numRegions * 2\n    groupColorBox_x_left = [-boxWidth, -boxWidth, boxWidth, boxWidth, -boxWidth] .+ groupColorBox_x_left\n    groupColorBox_x_right = [-boxWidth, -boxWidth, boxWidth, boxWidth, -boxWidth] .+ groupColorBox_x_right\n    groupColorBox_y = [0.4, -0.4, -0.4, 0.4, 0.4]\n\n    for i in 1:numInds\n        y = numInds + 1 - i  # y is location for plotting; this reverses order of plot top-bottom\n        labelText = last(split(sorted_indMetadata_subset.ID[i], \"_\"))  # this gets the last part of the sample ID (usually the main ID part)\n        # put sample label on left side:\n        CairoMakie.text!(label_x_left, y; text=labelText, align=(:right, :center), fontsize=indFontSize)\n        # put sample label on left side:\n        CairoMakie.text!(label_x_right, y; text=labelText, align=(:left, :center), fontsize=indFontSize)\n        if indColorLeftProvided\n            boxColorLeft = sorted_indMetadata_subset.indColorLeft[i]\n        else\n            boxColorLeft = plotGroupColors[findfirst(plotGroups .== sorted_indMetadata_subset.Fst_group[i])]\n        end\n        if indColorRightProvided\n            boxColorRight = sorted_indMetadata_subset.indColorRight[i]\n        else\n            boxColorRight = plotGroupColors[findfirst(plotGroups .== sorted_indMetadata_subset.Fst_group[i])]\n        end\n        CairoMakie.poly!(Point2f.(groupColorBox_x_left, (y .+ groupColorBox_y)), color=boxColorLeft)\n        CairoMakie.poly!(Point2f.(groupColorBox_x_right, (y .+ groupColorBox_y)), color=boxColorRight)\n    end\n\n    # generate my own plotting symbol (a rectangle)\n    box_x = [-0.45, -0.45, 0.45, 0.45, -0.45]\n    #box_x = [-0.5, -0.5, 0.5, 0.5, -0.5]\n    box_y = [0.4, -0.4, -0.4, 0.4, 0.4]\n    # generate triangles for plotting heterozygotes\n    triangle1_x = [-0.45, -0.45, 0.45, -0.45]\n    #triangle1_x = [-0.5, -0.5, 0.5, -0.5]\n    triangle1_y = [0.4, -0.4, 0.4, 0.4]\n    triangle2_x = [-0.45, 0.45, 0.45, -0.45]\n    #triangle2_x = [-0.5, 0.5, 0.5, -0.5]\n    triangle2_y = [-0.4, -0.4, 0.4, -0.4]\n    # cycle through individuals, graphing each type of genotype:\n    for i in 1:numInds\n        y = numInds + 1 - i  # y is location for plotting; this reverses order of plot top-bottom\n        #CairoMakie.lines!([0.5, numRegions + 0.5], [y, y], color=\"grey40\") # for lines across the individual rows\n        # cycle through regions for this individual\n        for j in 1:numRegions\n            genotype = sorted_genosSummary_subset[i, j]\n            if genotype[1] == genotype[2]  # homozygous\n                CairoMakie.poly!(Point2f.((j .+ box_x), (y .+ box_y)), color=integerToColorCodes[genotype[1]])\n            else # heterozygous\n                CairoMakie.poly!(Point2f.((j .+ triangle1_x), (y .+ triangle1_y)), color=integerToColorCodes[genotype[1]])\n                CairoMakie.poly!(Point2f.((j .+ triangle2_x), (y .+ triangle2_y)), color=integerToColorCodes[genotype[2]])\n            end\n        end\n    end\n\n    if isnothing(regionNames)\n        regionNames = string.(1:numRegions)\n    end\n\n    # make labels on lower part\n    y_label = 0.5 - 0.025numInds\n    for i in 1:numRegions\n        CairoMakie.text!(i, y_label; text = regionNames[i], align=(:center, :center), fontsize=24)\n    end\n\n    display(f)\n\n    return f, sorted_genosSummary_subset, sorted_indMetadata_subset\nend\n\n\nplotHaploblockSummary(integerToColorCodes,\n                            genosSummary, \n                            ind_with_metadata_included,\n                            plotGroupsForSummary_all, groupColorsForSummary_all;\n                            regionNames = haploblockRegions,\n                            indFontSize = 8, figureSize = (1000, 2000),\n                            plotTitle = nothing,\n                            indColorLeftProvided = false,\n                            indColorRightProvided = false)\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\n\n(Scene (768px, 960px):\n  0 Plots\n  1 Child Scene:\n    └ Scene (768px, 960px), [(1, 1) (1, 1) … (1, 1) (1, 1); (1, 1) (1, 1) … (1, 1) (1, 1); … ; (7, 7) (7, 7) … (7, 7) (7, 7); (7, 7) (1, 7) … (1, 7) (1, 7)], 257×38 DataFrame\n Row │ ind                        ID                         location  group   ⋯\n     │ String                     String                     String7   String1 ⋯\n─────┼──────────────────────────────────────────────────────────────────────────\n   1 │ GW_Armando_plate1_JF12G04  GW_Armando_plate1_JF12G04  ST_vi     vir     ⋯\n   2 │ GW_Armando_plate2_JF03G01  GW_Armando_plate2_JF03G01  ST_vi     vir_mis\n   3 │ GW_Armando_plate2_JF30G01  GW_Armando_plate2_JF30G01  ST_vi     vir_mis\n   4 │ GW_Lane5_STvi1             GW_Lane5_STvi1             ST_vi     vir\n   5 │ GW_Lane5_STvi2             GW_Lane5_STvi2             ST_vi     vir     ⋯\n   6 │ GW_Lane5_STvi3             GW_Lane5_STvi3             ST_vi     vir\n   7 │ GW_Armando_plate1_JF16G01  GW_Armando_plate1_JF16G01  DV_vi     plumb_v\n   8 │ GW_Armando_plate2_JF16G02  GW_Armando_plate2_JF16G02  DV_vi     plumb_v\n   9 │ GW_Armando_plate2_JE31G01  GW_Armando_plate2_JE31G01  VB_vi     vir_mis ⋯\n  10 │ GW_Armando_plate2_JF03G02  GW_Armando_plate2_JF03G02  VB_vi     vir_mis\n  11 │ GW_Lane5_YK11              GW_Lane5_YK11              YK        vir\n  ⋮  │             ⋮                          ⋮                 ⋮          ⋮   ⋱\n 248 │ GW_Armando_plate2_JF24G01  GW_Armando_plate2_JF24G01  VB        plumb\n 249 │ GW_Armando_plate2_JF25G01  GW_Armando_plate2_JF25G01  VB        plumb   ⋯\n 250 │ GW_Armando_plate1_JG02G02  GW_Armando_plate1_JG02G02  PR        plumb\n 251 │ GW_Armando_plate1_JG02G04  GW_Armando_plate1_JG02G04  PR        plumb\n 252 │ GW_Armando_plate2_JG01G01  GW_Armando_plate2_JG01G01  PR        plumb\n 253 │ GW_Armando_plate2_JG02G01  GW_Armando_plate2_JG02G01  PR        plumb   ⋯\n 254 │ GW_Armando_plate2_JG02G03  GW_Armando_plate2_JG02G03  PR        plumb\n 255 │ GW_Lane5_SL1               GW_Lane5_SL1               SL        plumb\n 256 │ GW_Lane5_SL2               GW_Lane5_SL2               SL        plumb\n 257 │ GW_Armando_plate1_JF10G03  GW_Armando_plate1_JF10G03  ST        plumb_v ⋯\n                                                 35 columns and 236 rows omitted)",
    "crumbs": [
      "Home",
      "Greenish Warbler heterozygosity variance analysis"
    ]
  },
  {
    "objectID": "GW_Heterozygosity_Variance.html#produce-fst-plot-across-genome",
    "href": "GW_Heterozygosity_Variance.html#produce-fst-plot-across-genome",
    "title": "Greenish Warbler heterozygosity variance analysis",
    "section": "Produce Fst plot across genome",
    "text": "Produce Fst plot across genome\n\nCalculate allele freqs and sample sizes (use column Fst_group)\n\ngroups = [\"vir\",\"troch_LN\",\"plumb\",\"plumb_vir\"]\nfreqs, sampleSizes = getFreqsAndSampleSizes(genosOnly_included, ind_with_metadata_included.Fst_group, groups)\nprintln(\"Calculated population allele frequencies and sample sizes\")\n\nCalculated population allele frequencies and sample sizes\n\n\n\n\ncalculate Fst for each SNP\n\nFst, FstNumerator, FstDenominator, pairwiseNamesFst = getFst(freqs, sampleSizes, groups; among=true)  # set among to FALSE if no among Fst wanted (some things won't work without it) \nprintln(\"Calculated Fst values\")\n\nCalculated Fst values\n\n\n\n\nMake list of main scaffolds to include in Fst plot across genome:\n\nscaffolds_for_Fst = \"gw\" .* string.(vcat(1, \"1A\", 2:4, \"4A\", 5:15, 17:28, \"Z\"))\n\n30-element Vector{String}:\n \"gw1\"\n \"gw1A\"\n \"gw2\"\n \"gw3\"\n \"gw4\"\n \"gw4A\"\n \"gw5\"\n \"gw6\"\n \"gw7\"\n \"gw8\"\n \"gw9\"\n \"gw10\"\n \"gw11\"\n ⋮\n \"gw18\"\n \"gw19\"\n \"gw20\"\n \"gw21\"\n \"gw22\"\n \"gw23\"\n \"gw24\"\n \"gw25\"\n \"gw26\"\n \"gw27\"\n \"gw28\"\n \"gwZ\"\n\n\n\n\ncalculate windowed Fst\nThis is calculated according to Weir&Cockerham1984 (with sample size and pop number correction), calculated as windowed numerator over windowed denominator, in whole windows starting on left side of chromosome.\n\nwindowSize = 500\n\n# calculate windowed Fst across all scaffolds:\n\nwindowed_pos_all = DataFrame(chrom = String[], mean_position = Float64[])\nwindowed_Fst_all = Array{Float32, 2}(undef, size(FstNumerator, 1), 0)\nfor chrom in scaffolds_for_Fst\n    regionText = string(\"chr\", chrom)\n    loci_selection = (pos_SNP_filtered.chrom .== chrom)\n    pos_region = pos_SNP_filtered[loci_selection, :]\n    FstNumerator_region = FstNumerator[:, loci_selection]\n    FstDenominator_region = FstDenominator[:, loci_selection]\n    windowedPos, windowedFst = getWindowedFst(FstNumerator_region, FstDenominator_region, pos_region, windowSize)\n    windowed_pos_chrom = DataFrame(chrom = repeat([chrom], length(windowedPos)), mean_position = windowedPos)\n    windowed_pos_all = vcat(windowed_pos_all, windowed_pos_chrom)\n    windowed_Fst_all = hcat(windowed_Fst_all, windowedFst)\nend\n\n# The below is just a test plot, showing nothing useful really (as it overlaps all chromosomes onto one x axis):\n#plot(windowed_pos_all.mean_position, windowed_Fst_all[1,:])\n\nThe above has produced windowed Fst values across the whole genome, for each population comparison. These are stored in windowed_Fst_all and the location info is stored in windowed_pos_all.\nNow make a plot of windowed Fst across all scaffolds:\n\nscaffolds_to_plot = scaffolds_for_Fst\n\ngroupsToPlotFst = [\"vir_troch_LN\", \"troch_LN_plumb\", \"vir_plumb\"]\ngroupColorsFst = [\"green3\", \"orange\", \"purple\"]\n \nfigHandle_GenomeFst3 = plotGenomeFst(scaffolds_to_plot, \n                                    windowed_Fst_all,\n                                    pairwiseNamesFst,\n                                    windowed_pos_all,\n                                    groupsToPlotFst,\n                                    groupColorsFst;\n                                    lineTransparency = 0.8,\n                                    fillTransparency = 0.2,\n                                    figureSize=(1200, 1200))\n\n[[\"gw1\", \"gw4A\", \"gw6\"], [\"gw1A\", \"gw4\", \"gw9\"], [\"gw2\", \"gw8\"], [\"gw3\", \"gw5\"], [\"gw7\", \"gw10\", \"gw11\", \"gw12\", \"gw13\", \"gw14\"], [\"gw15\", \"gw17\", \"gw18\", \"gw19\", \"gw20\", \"gw21\", \"gw22\", \"gw23\", \"gw24\", \"gw25\"], [\"gw26\", \"gw27\", \"gw28\", \"gwZ\"]]\n\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNow do one with just the vir_plumb connection\n\ngroupsToPlotFst = [\"vir_plumb\"]\ngroupColorsFst = [\"purple\"]\n\nfigHandle_GenomeFst1 = plotGenomeFst(scaffolds_to_plot, \n                                    windowed_Fst_all,\n                                    pairwiseNamesFst,\n                                    windowed_pos_all,\n                                    groupsToPlotFst,\n                                    groupColorsFst;\n                                    lineTransparency = 0.8,\n                                    fillTransparency = 0.2,\n                                    figureSize=(1200, 800))\n\nif true  # set to true to save plot\n    filename = string(\"FigureS33_GenomeFst_fromJulia.png\")\n    save(filename, figHandle_GenomeFst1, px_per_unit = 2.0)\n    println(\"Saved \", filename)\nend \n\n[[\"gw1\", \"gw4A\", \"gw6\"], [\"gw1A\", \"gw4\", \"gw9\"], [\"gw2\", \"gw8\"], [\"gw3\", \"gw5\"], [\"gw7\", \"gw10\", \"gw11\", \"gw12\", \"gw13\", \"gw14\"], [\"gw15\", \"gw17\", \"gw18\", \"gw19\", \"gw20\", \"gw21\", \"gw22\", \"gw23\", \"gw24\", \"gw25\"], [\"gw26\", \"gw27\", \"gw28\", \"gwZ\"]]\n\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\nSaved FigureS33_GenomeFst_fromJulia.png",
    "crumbs": [
      "Home",
      "Greenish Warbler heterozygosity variance analysis"
    ]
  },
  {
    "objectID": "GW_Heterozygosity_Variance.html#plot-vishet-vs.-fst",
    "href": "GW_Heterozygosity_Variance.html#plot-vishet-vs.-fst",
    "title": "Greenish Warbler heterozygosity variance analysis",
    "section": "Plot ViSHet vs. Fst",
    "text": "Plot ViSHet vs. Fst\n\ngroupsToCompareUsingFst = \"vir_plumb\"\nFstRow = findfirst(pairwiseNamesFst .== groupsToCompareUsingFst)\nwindowedFstValues = windowed_Fst_all[FstRow, :]\n#plot(windowedFstValues, windowed_ViSHet_all)\n\nfillOpacity = 0.3\nlineOpacity = 0.8\n\nf = Figure()\nax = Axis(f[1, 1],\n    xlabel = \"windowed Fst\", xlabelsize = 24,\n    ylabel = \"windowed VisHet\", ylabelsize = 24)\n# hidedecorations!(ax, label = false, ticklabels = false, ticks = false) # hide background lattice\nplot!(ax, windowedFstValues, windowed_ViSHet_all,\n    marker = :circle, color = (\"black\", fillOpacity), markersize = 8, strokewidth=0.5, strokecolor = (\"black\", lineOpacity))\n\ndisplay(f)\n\nif true  # set to true to save plot\n    filename = string(\"FigureS34_windowedFstvViSHet_fromJulia.png\")\n    save(filename, f, px_per_unit = 2.0)\n    println(\"Saved \", filename)\nend \n\n# to see histograms of each distribution:\n# hist(windowedFstValues)\n# hist(windowed_ViSHet_all)\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\nSaved FigureS34_windowedFstvViSHet_fromJulia.png",
    "crumbs": [
      "Home",
      "Greenish Warbler heterozygosity variance analysis"
    ]
  },
  {
    "objectID": "GW_Heterozygosity_Variance.html#examine-chromosome-4a-large-haploblock-region-lhbr-with-invariant-sites-included",
    "href": "GW_Heterozygosity_Variance.html#examine-chromosome-4a-large-haploblock-region-lhbr-with-invariant-sites-included",
    "title": "Greenish Warbler heterozygosity variance analysis",
    "section": "Examine chromosome 4A Large HaploBlock Region (LHBR) with invariant sites included",
    "text": "Examine chromosome 4A Large HaploBlock Region (LHBR) with invariant sites included\nBefore running below, I need to change format of 012NA file to # Before running below, changed 012NA file back into 012minus1 file, using commands like below, so can be read as integer:\ncat /Users/darrenirwin/GW_data_from_cedar_Feb2024/GW2022_cedar/infoSites_vcfs/GW2022_all4plates.genotypes.allSites.chrgw4A.infoSites.max2allele_noindel.maxmiss60.MQ20.lowHet.tab.012NA | sed 's/NA/-1/g' &gt; /Users/darrenirwin/GW_data_from_cedar_Feb2024/GW2022_cedar/infoSites_vcfs/GW2022_all4plates.genotypes.allSites.chrgw4A.infoSites.max2allele_noindel.maxmiss60.MQ20.lowHet.tab.012minus1\n\nbaseName = \"/Users/darrenirwin/GW_data_from_cedar_Feb2024/GW2022_cedar/infoSites_vcfs/GW2022_all4plates.genotypes.allSites.chrgw4A.infoSites.max2allele_noindel.maxmiss60.MQ20.lowHet.tab\"\n# load metadata\ncd(dataDirectory)\nmetadata_chr4A = DataFrame(CSV.File(metadataFile)) # the CSV.File function interprets the correct delimiter\nnum_metadata_cols_chr4A = ncol(metadata_chr4A)\nnum_individuals_chr4A = nrow(metadata_chr4A) \n# read in individual names for this dataset\nindividuals_file_name_chr4A = string(baseName, \".012.indv\")\nind_chr4A = DataFrame(CSV.File(individuals_file_name_chr4A; header=[\"ind\"], types=[String])) \nindNum_chr4A = size(ind_chr4A, 1) # number of individuals\nif num_individuals_chr4A != indNum_chr4A\n    println(\"WARNING: number of rows in metadata file different than number of individuals in .indv file\")\nend\n# read in position data for this dataset\nposition_file_name_chr4A = string(baseName, \".012.pos\")\npos_chr4A = DataFrame(CSV.File(position_file_name_chr4A; header=[\"chrom\", \"position\"], types=[String, Int]))\n# read in genotype data\ngenotype_file_name_chr4A = string(baseName, \".012minus1\") \n@time if 1 &lt;= indNum_chr4A &lt;= 127   \n    geno_chr4A = readdlm(genotype_file_name_chr4A, '\\t', Int8, '\\n'); # this has been sped up dramatically, by first converting \"NA\" to -1\nelseif 128 &lt;= indNum_chr4A &lt;= 32767\n    geno_chr4A = readdlm(genotype_file_name_chr4A, '\\t', Int16, '\\n'); # this needed for first column, which is number of individual; Int16 not much slower on import than Int8\nelse\n    print(\"Error: Number of individuals in .indv appears outside of range from 1 to 32767\")\nend\nloci_count_chr4A = size(geno_chr4A, 2) - 1   # because the first column is not a SNP (just a count from zero)\nprint(string(\"Read in genotypic data at \", loci_count_chr4A,\" loci for \", indNum_chr4A, \" individuals. \\n\"))\n\n 24.663466 seconds (340.61 M allocations: 9.785 GiB, 38.59% gc time, 2.65% compilation time)\nRead in genotypic data at 364640 loci for 310 individuals. \n\n\n\nCheck that individuals are same in genotype data and metadata\n\nind_with_metadata_chr4A = hcat(ind_chr4A, metadata_chr4A)\nprintln(ind_with_metadata_chr4A)\nprintln()  # prints a line break \nif isequal(ind_with_metadata_chr4A.ind, ind_with_metadata_chr4A.ID)\n    println(\"GOOD NEWS: names of individuals in metadata file and genotype ind file match perfectly.\")\nelse\n    println(\"WARNING: names of individuals in metadata file and genotype ind file do not completely match.\")\nend\n\n310×6 DataFrame\n Row │ ind                             ID                              location  group           Fst_group       plot_order \n     │ String                          String31                        String7   String15        String15        Float64    \n─────┼──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────\n   1 │ GW_Armando_plate1_AB1           GW_Armando_plate1_AB1           AB        vir             vir                 20.01\n   2 │ GW_Armando_plate1_JF07G02       GW_Armando_plate1_JF07G02       ST        plumb           plumb              108.0\n   3 │ GW_Armando_plate1_JF07G03       GW_Armando_plate1_JF07G03       ST        plumb           plumb              109.0\n   4 │ GW_Armando_plate1_JF07G04       GW_Armando_plate1_JF07G04       ST        plumb           plumb              110.0\n   5 │ GW_Armando_plate1_JF08G02       GW_Armando_plate1_JF08G02       ST        plumb           plumb              111.0\n   6 │ GW_Armando_plate1_JF09G01       GW_Armando_plate1_JF09G01       ST        plumb           plumb              112.0\n   7 │ GW_Armando_plate1_JF09G02       GW_Armando_plate1_JF09G02       ST        plumb           plumb              113.0\n   8 │ GW_Armando_plate1_JF10G03       GW_Armando_plate1_JF10G03       ST        plumb_vir       plumb_vir          170.0\n   9 │ GW_Armando_plate1_JF11G01       GW_Armando_plate1_JF11G01       ST        plumb           plumb              114.0\n  10 │ GW_Armando_plate1_JF12G01       GW_Armando_plate1_JF12G01       ST        plumb           plumb              115.0\n  11 │ GW_Armando_plate1_JF12G02       GW_Armando_plate1_JF12G02       ST        plumb           plumb              116.0\n  12 │ GW_Armando_plate1_JF12G04       GW_Armando_plate1_JF12G04       ST_vi     vir             vir                 24.001\n  13 │ GW_Armando_plate1_JF13G01       GW_Armando_plate1_JF13G01       ST        plumb           plumb              117.0\n  14 │ GW_Armando_plate1_JF15G03       GW_Armando_plate1_JF15G03       DV        plumb           plumb              103.0\n  15 │ GW_Armando_plate1_JF16G01       GW_Armando_plate1_JF16G01       DV_vi     plumb_vir       vir                 24.041\n  16 │ GW_Armando_plate1_JF20G01       GW_Armando_plate1_JF20G01       MB        plumb           plumb               94.0\n  17 │ GW_Armando_plate1_JF22G01       GW_Armando_plate1_JF22G01       MB        plumb           plumb               95.0\n  18 │ GW_Armando_plate1_JF23G01       GW_Armando_plate1_JF23G01       VB        plumb           plumb               98.0\n  19 │ GW_Armando_plate1_JF23G02       GW_Armando_plate1_JF23G02       VB        plumb           plumb               99.0\n  20 │ GW_Armando_plate1_JF24G02       GW_Armando_plate1_JF24G02       VB        plumb           plumb              100.0\n  21 │ GW_Armando_plate1_JF26G01       GW_Armando_plate1_JF26G01       ST        plumb           plumb              118.0\n  22 │ GW_Armando_plate1_JF27G01       GW_Armando_plate1_JF27G01       ST        plumb           plumb              119.0\n  23 │ GW_Armando_plate1_JF29G01       GW_Armando_plate1_JF29G01       ST        plumb           plumb              120.0\n  24 │ GW_Armando_plate1_JF29G02       GW_Armando_plate1_JF29G02       ST        plumb           plumb              121.0\n  25 │ GW_Armando_plate1_JF29G03       GW_Armando_plate1_JF29G03       ST        plumb           plumb              122.0\n  26 │ GW_Armando_plate1_JG02G02       GW_Armando_plate1_JG02G02       PR        plumb           plumb              145.0\n  27 │ GW_Armando_plate1_JG02G04       GW_Armando_plate1_JG02G04       PR        plumb           plumb              146.0\n  28 │ GW_Armando_plate1_JG08G01       GW_Armando_plate1_JG08G01       ST        plumb           plumb              123.0\n  29 │ GW_Armando_plate1_JG08G02       GW_Armando_plate1_JG08G02       ST        plumb           plumb              124.0\n  30 │ GW_Armando_plate1_JG10G01       GW_Armando_plate1_JG10G01       ST        plumb           plumb              125.0\n  31 │ GW_Armando_plate1_JG12G01       GW_Armando_plate1_JG12G01       ST        plumb           plumb              126.0\n  32 │ GW_Armando_plate1_JG17G01       GW_Armando_plate1_JG17G01       ST        plumb_vir       plumb              127.0\n  33 │ GW_Armando_plate1_NO_BC_TTGW05  GW_Armando_plate1_NO_BC_TTGW05  blank     blank           blank              -99.0\n  34 │ GW_Armando_plate1_NO_DNA        GW_Armando_plate1_NO_DNA        blank     blank           blank              -99.0\n  35 │ GW_Armando_plate1_RF20G01       GW_Armando_plate1_RF20G01       BJ        obs_plumb       plumb_BJ            77.501\n  36 │ GW_Armando_plate1_RF29G02       GW_Armando_plate1_RF29G02       BJ        obs_plumb       plumb_BJ            77.502\n  37 │ GW_Armando_plate1_TL3           GW_Armando_plate1_TL3           TL        vir             vir                 11.01\n  38 │ GW_Armando_plate1_TTGW01        GW_Armando_plate1_TTGW01        MN        troch_MN        troch_west          53.0\n  39 │ GW_Armando_plate1_TTGW05_rep1   GW_Armando_plate1_TTGW05_rep1   MN_rep    troch_MN_rep    troch_west_rep      53.0\n  40 │ GW_Armando_plate1_TTGW05_rep2   GW_Armando_plate1_TTGW05_rep2   MN        troch_MN        troch_west          53.0\n  41 │ GW_Armando_plate1_TTGW06        GW_Armando_plate1_TTGW06        SU        lud_Sukhto      lud_central         47.0\n  42 │ GW_Armando_plate1_TTGW07        GW_Armando_plate1_TTGW07        SU        lud_Sukhto      lud_central         47.0\n  43 │ GW_Armando_plate1_TTGW10        GW_Armando_plate1_TTGW10        SU        lud_Sukhto      lud_central         47.0\n  44 │ GW_Armando_plate1_TTGW11        GW_Armando_plate1_TTGW11        SU        lud_Sukhto      lud_central         47.0\n  45 │ GW_Armando_plate1_TTGW13        GW_Armando_plate1_TTGW13        TH        lud_Thallighar  lud_central         43.0\n  46 │ GW_Armando_plate1_TTGW17        GW_Armando_plate1_TTGW17        TH        lud_Thallighar  lud_central         43.0\n  47 │ GW_Armando_plate1_TTGW19        GW_Armando_plate1_TTGW19        TH        lud_Thallighar  lud_central         43.0\n  48 │ GW_Armando_plate1_TTGW21        GW_Armando_plate1_TTGW21        SR        lud_Sural       lud_central         45.0\n  49 │ GW_Armando_plate1_TTGW22        GW_Armando_plate1_TTGW22        SR        lud_Sural       lud_central         45.0\n  50 │ GW_Armando_plate1_TTGW23        GW_Armando_plate1_TTGW23        SR        lud_Sural       lud_central         45.0\n  51 │ GW_Armando_plate1_TTGW29        GW_Armando_plate1_TTGW29        SR        lud_Sural       lud_central         45.0\n  52 │ GW_Armando_plate1_TTGW52        GW_Armando_plate1_TTGW52        NG        lud_Nainaghar   lud_central         49.0\n  53 │ GW_Armando_plate1_TTGW53        GW_Armando_plate1_TTGW53        NG        lud_Nainaghar   lud_central         49.0\n  54 │ GW_Armando_plate1_TTGW55        GW_Armando_plate1_TTGW55        NG        lud_Nainaghar   lud_central         49.0\n  55 │ GW_Armando_plate1_TTGW57        GW_Armando_plate1_TTGW57        NG        lud_Nainaghar   lud_central         49.0\n  56 │ GW_Armando_plate1_TTGW58        GW_Armando_plate1_TTGW58        NG        lud_Nainaghar   lud_central         49.0\n  57 │ GW_Armando_plate1_TTGW59        GW_Armando_plate1_TTGW59        NG        lud_Nainaghar   lud_central         49.0\n  58 │ GW_Armando_plate1_TTGW63        GW_Armando_plate1_TTGW63        SP        lud_Spiti       troch_west          55.0\n  59 │ GW_Armando_plate1_TTGW64        GW_Armando_plate1_TTGW64        SP        lud_Spiti       troch_west          55.0\n  60 │ GW_Armando_plate1_TTGW65        GW_Armando_plate1_TTGW65        SP        lud_Spiti       troch_west          55.0\n  61 │ GW_Armando_plate1_TTGW66        GW_Armando_plate1_TTGW66        SP        lud_Spiti       troch_west          55.0\n  62 │ GW_Armando_plate1_TTGW68        GW_Armando_plate1_TTGW68        SP        lud_Spiti       troch_west          55.0\n  63 │ GW_Armando_plate1_TTGW70        GW_Armando_plate1_TTGW70        SA        lud_Sathrundi   lud_Sath            41.0\n  64 │ GW_Armando_plate1_TTGW71        GW_Armando_plate1_TTGW71        SA        lud_Sathrundi   lud_Sath            41.0\n  65 │ GW_Armando_plate1_TTGW72        GW_Armando_plate1_TTGW72        SA        lud_Sathrundi   lud_Sath            41.0\n  66 │ GW_Armando_plate1_TTGW74        GW_Armando_plate1_TTGW74        SA        lud_Sathrundi   lud_Sath            41.0\n  67 │ GW_Armando_plate1_TTGW78        GW_Armando_plate1_TTGW78        SA        lud_Sathrundi   lud_Sath            41.0\n  68 │ GW_Armando_plate1_TTGW_15_05    GW_Armando_plate1_TTGW_15_05    SR        lud_Sural       lud_central         45.0\n  69 │ GW_Armando_plate1_TTGW_15_07    GW_Armando_plate1_TTGW_15_07    SR        lud_Sural       lud_central         45.0\n  70 │ GW_Armando_plate1_TTGW_15_08    GW_Armando_plate1_TTGW_15_08    SR        lud_Sural       lud_central         45.0\n  71 │ GW_Armando_plate1_TTGW_15_09    GW_Armando_plate1_TTGW_15_09    SR        lud_Sural       lud_central         45.0\n  72 │ GW_Armando_plate1_UY1           GW_Armando_plate1_UY1           UY        plumb           plumb               87.0\n  73 │ GW_Armando_plate2_IL2           GW_Armando_plate2_IL2           IL_rep    plumb_rep       plumb_rep           84.0\n  74 │ GW_Armando_plate2_JE31G01       GW_Armando_plate2_JE31G01       VB_vi     vir_misID       vir                 24.002\n  75 │ GW_Armando_plate2_JF03G01       GW_Armando_plate2_JF03G01       ST_vi     vir_misID       vir                 24.003\n  76 │ GW_Armando_plate2_JF03G02       GW_Armando_plate2_JF03G02       VB_vi     vir_misID       vir                 24.004\n  77 │ GW_Armando_plate2_JF07G01       GW_Armando_plate2_JF07G01       ST        plumb           plumb              128.0\n  78 │ GW_Armando_plate2_JF08G04       GW_Armando_plate2_JF08G04       ST        plumb           plumb              129.0\n  79 │ GW_Armando_plate2_JF10G02       GW_Armando_plate2_JF10G02       ST        plumb           plumb              130.0\n  80 │ GW_Armando_plate2_JF11G02       GW_Armando_plate2_JF11G02       ST        plumb           plumb              131.0\n  81 │ GW_Armando_plate2_JF12G03       GW_Armando_plate2_JF12G03       ST        plumb           plumb              132.0\n  82 │ GW_Armando_plate2_JF12G05       GW_Armando_plate2_JF12G05       ST        plumb           plumb              133.0\n  83 │ GW_Armando_plate2_JF13G02       GW_Armando_plate2_JF13G02       ST        plumb           plumb              134.0\n  84 │ GW_Armando_plate2_JF14G01       GW_Armando_plate2_JF14G01       DV        plumb           plumb              104.0\n  85 │ GW_Armando_plate2_JF14G02       GW_Armando_plate2_JF14G02       DV        plumb           plumb              105.0\n  86 │ GW_Armando_plate2_JF15G01       GW_Armando_plate2_JF15G01       DV        plumb           plumb              106.0\n  87 │ GW_Armando_plate2_JF15G02       GW_Armando_plate2_JF15G02       DV        plumb           plumb              107.0\n  88 │ GW_Armando_plate2_JF16G02       GW_Armando_plate2_JF16G02       DV_vi     plumb_vir       vir                 24.042\n  89 │ GW_Armando_plate2_JF19G01       GW_Armando_plate2_JF19G01       MB        plumb           plumb               96.0\n  90 │ GW_Armando_plate2_JF20G02       GW_Armando_plate2_JF20G02       MB        plumb           plumb               97.0\n  91 │ GW_Armando_plate2_JF24G01       GW_Armando_plate2_JF24G01       VB        plumb           plumb              101.0\n  92 │ GW_Armando_plate2_JF24G03       GW_Armando_plate2_JF24G03       ST        plumb           plumb              135.0\n  93 │ GW_Armando_plate2_JF25G01       GW_Armando_plate2_JF25G01       VB        plumb           plumb              102.0\n  94 │ GW_Armando_plate2_JF26G02       GW_Armando_plate2_JF26G02       ST        plumb           plumb              136.0\n  95 │ GW_Armando_plate2_JF27G02       GW_Armando_plate2_JF27G02       ST        plumb           plumb              137.0\n  96 │ GW_Armando_plate2_JF30G01       GW_Armando_plate2_JF30G01       ST_vi     vir_misID       vir                 24.005\n  97 │ GW_Armando_plate2_JG01G01       GW_Armando_plate2_JG01G01       PR        plumb           plumb              147.0\n  98 │ GW_Armando_plate2_JG02G01       GW_Armando_plate2_JG02G01       PR        plumb           plumb              148.0\n  99 │ GW_Armando_plate2_JG02G03       GW_Armando_plate2_JG02G03       PR        plumb           plumb              149.0\n 100 │ GW_Armando_plate2_JG10G02       GW_Armando_plate2_JG10G02       ST        plumb           plumb              138.0\n 101 │ GW_Armando_plate2_JG10G03       GW_Armando_plate2_JG10G03       ST        plumb           plumb              139.0\n 102 │ GW_Armando_plate2_JG12G02       GW_Armando_plate2_JG12G02       ST        plumb           plumb              140.0\n 103 │ GW_Armando_plate2_JG12G03       GW_Armando_plate2_JG12G03       ST        plumb           plumb              141.0\n 104 │ GW_Armando_plate2_LN11          GW_Armando_plate2_LN11          LN_rep    troch_LN_rep    troch_LN_rep        65.01\n 105 │ GW_Armando_plate2_LN2           GW_Armando_plate2_LN2           LN        troch_LN        troch_LN            58.01\n 106 │ GW_Armando_plate2_NO_BC_TTGW05  GW_Armando_plate2_NO_BC_TTGW05  blank     blank           blank              -99.0\n 107 │ GW_Armando_plate2_NO_DNA        GW_Armando_plate2_NO_DNA        blank     blank           blank              -99.0\n 108 │ GW_Armando_plate2_RF29G01       GW_Armando_plate2_RF29G01       BJ        obs_plumb       plumb_BJ            77.503\n 109 │ GW_Armando_plate2_TTGW02        GW_Armando_plate2_TTGW02        MN        troch_MN        troch_west          53.0\n 110 │ GW_Armando_plate2_TTGW03        GW_Armando_plate2_TTGW03        MN        troch_MN        troch_west          53.0\n 111 │ GW_Armando_plate2_TTGW05_rep3   GW_Armando_plate2_TTGW05_rep3   MN_rep    troch_MN_rep    troch_west_rep      53.0\n 112 │ GW_Armando_plate2_TTGW05_rep4   GW_Armando_plate2_TTGW05_rep4   MN_rep    troch_MN_rep    troch_west_rep      53.0\n 113 │ GW_Armando_plate2_TTGW08        GW_Armando_plate2_TTGW08        SU        lud_Sukhto      lud_central         47.0\n 114 │ GW_Armando_plate2_TTGW09        GW_Armando_plate2_TTGW09        SU        lud_Sukhto      lud_central         47.0\n 115 │ GW_Armando_plate2_TTGW12        GW_Armando_plate2_TTGW12        TH        lud_Thallighar  lud_central         43.0\n 116 │ GW_Armando_plate2_TTGW14        GW_Armando_plate2_TTGW14        TH        lud_Thallighar  lud_central         43.0\n 117 │ GW_Armando_plate2_TTGW15        GW_Armando_plate2_TTGW15        TH        lud_Thallighar  lud_central         43.0\n 118 │ GW_Armando_plate2_TTGW16        GW_Armando_plate2_TTGW16        TH        lud_Thallighar  lud_central         43.0\n 119 │ GW_Armando_plate2_TTGW18        GW_Armando_plate2_TTGW18        TH        lud_Thallighar  lud_central         43.0\n 120 │ GW_Armando_plate2_TTGW20        GW_Armando_plate2_TTGW20        SR        lud_Sural       lud_central         45.0\n 121 │ GW_Armando_plate2_TTGW24        GW_Armando_plate2_TTGW24        SR        lud_Sural       lud_central         45.0\n 122 │ GW_Armando_plate2_TTGW25        GW_Armando_plate2_TTGW25        SR        lud_Sural       lud_central         45.0\n 123 │ GW_Armando_plate2_TTGW27        GW_Armando_plate2_TTGW27        SR        lud_Sural       lud_central         45.0\n 124 │ GW_Armando_plate2_TTGW28        GW_Armando_plate2_TTGW28        SR        lud_Sural       lud_central         45.0\n 125 │ GW_Armando_plate2_TTGW50        GW_Armando_plate2_TTGW50        NG        lud_Nainaghar   lud_central         49.0\n 126 │ GW_Armando_plate2_TTGW51        GW_Armando_plate2_TTGW51        NG        lud_Nainaghar   lud_central         49.0\n 127 │ GW_Armando_plate2_TTGW54        GW_Armando_plate2_TTGW54        NG        lud_Nainaghar   lud_central         49.0\n 128 │ GW_Armando_plate2_TTGW56        GW_Armando_plate2_TTGW56        NG        lud_Nainaghar   lud_central         49.0\n 129 │ GW_Armando_plate2_TTGW60        GW_Armando_plate2_TTGW60        SP        lud_Spiti       troch_west          55.0\n 130 │ GW_Armando_plate2_TTGW61        GW_Armando_plate2_TTGW61        SP        lud_Spiti       troch_west          55.0\n 131 │ GW_Armando_plate2_TTGW62        GW_Armando_plate2_TTGW62        SP        lud_Spiti       troch_west          55.0\n 132 │ GW_Armando_plate2_TTGW67        GW_Armando_plate2_TTGW67        SP        lud_Spiti       troch_west          55.0\n 133 │ GW_Armando_plate2_TTGW69        GW_Armando_plate2_TTGW69        SP        lud_Spiti       troch_west          55.0\n 134 │ GW_Armando_plate2_TTGW73        GW_Armando_plate2_TTGW73        SA        lud_Sathrundi   lud_Sath            41.0\n 135 │ GW_Armando_plate2_TTGW75        GW_Armando_plate2_TTGW75        SA        lud_Sathrundi   lud_Sath            41.0\n 136 │ GW_Armando_plate2_TTGW77        GW_Armando_plate2_TTGW77        SA        lud_Sathrundi   lud_Sath            41.0\n 137 │ GW_Armando_plate2_TTGW79        GW_Armando_plate2_TTGW79        SA        lud_Sathrundi   lud_Sath            41.0\n 138 │ GW_Armando_plate2_TTGW80        GW_Armando_plate2_TTGW80        SA        lud_Sathrundi   lud_Sath            41.0\n 139 │ GW_Armando_plate2_TTGW_15_01    GW_Armando_plate2_TTGW_15_01    SR        lud_Sural       lud_central         45.0\n 140 │ GW_Armando_plate2_TTGW_15_02    GW_Armando_plate2_TTGW_15_02    SR        lud_Sural       lud_central         45.0\n 141 │ GW_Armando_plate2_TTGW_15_03    GW_Armando_plate2_TTGW_15_03    SR        lud_Sural       lud_central         45.0\n 142 │ GW_Armando_plate2_TTGW_15_04    GW_Armando_plate2_TTGW_15_04    SR        lud_Sural       lud_central         45.0\n 143 │ GW_Armando_plate2_TTGW_15_06    GW_Armando_plate2_TTGW_15_06    SR        lud_Sural       lud_central         45.0\n 144 │ GW_Armando_plate2_TTGW_15_10    GW_Armando_plate2_TTGW_15_10    SR        lud_Sural       lud_central         45.0\n 145 │ GW_Lane5_AA1                    GW_Lane5_AA1                    AA        vir_S           vir_S               25.0\n 146 │ GW_Lane5_AA10                   GW_Lane5_AA10                   AA        vir_S           vir_S               33.0\n 147 │ GW_Lane5_AA11                   GW_Lane5_AA11                   AA        vir_S           vir_S               34.0\n 148 │ GW_Lane5_AA3                    GW_Lane5_AA3                    AA        vir_S           vir_S               26.0\n 149 │ GW_Lane5_AA4                    GW_Lane5_AA4                    AA        vir_S           vir_S               27.0\n 150 │ GW_Lane5_AA5                    GW_Lane5_AA5                    AA        vir_S           vir_S               28.0\n 151 │ GW_Lane5_AA6                    GW_Lane5_AA6                    AA        vir_S           vir_S               29.0\n 152 │ GW_Lane5_AA7                    GW_Lane5_AA7                    AA        vir_S           vir_S               30.0\n 153 │ GW_Lane5_AA8                    GW_Lane5_AA8                    AA        vir_S           vir_S               31.0\n 154 │ GW_Lane5_AA9                    GW_Lane5_AA9                    AA        vir_S           vir_S               32.0\n 155 │ GW_Lane5_AB1                    GW_Lane5_AB1                    AB_rep    vir_rep         vir_rep             20.0\n 156 │ GW_Lane5_AB2                    GW_Lane5_AB2                    AB        vir             vir                 21.0\n 157 │ GW_Lane5_AN1                    GW_Lane5_AN1                    AN        plumb           plumb               80.0\n 158 │ GW_Lane5_AN2                    GW_Lane5_AN2                    AN        plumb           plumb               81.0\n 159 │ GW_Lane5_BK2                    GW_Lane5_BK2                    BK        plumb           plumb               78.0\n 160 │ GW_Lane5_BK3                    GW_Lane5_BK3                    BK        plumb           plumb               79.0\n 161 │ GW_Lane5_DA2                    GW_Lane5_DA2                    XN        obs             obs                 73.0\n 162 │ GW_Lane5_DA3                    GW_Lane5_DA3                    XN        obs             obs                 74.0\n 163 │ GW_Lane5_DA4                    GW_Lane5_DA4                    XN        obs             obs                 75.0\n 164 │ GW_Lane5_DA6                    GW_Lane5_DA6                    XN        obs             low_reads           76.0\n 165 │ GW_Lane5_DA7                    GW_Lane5_DA7                    XN        obs             obs                 77.0\n 166 │ GW_Lane5_EM1                    GW_Lane5_EM1                    EM        troch_EM        troch_EM            72.0\n 167 │ GW_Lane5_IL1                    GW_Lane5_IL1                    IL        plumb           plumb               82.0\n 168 │ GW_Lane5_IL2                    GW_Lane5_IL2                    IL_rep    plumb_rep       plumb_rep           85.0\n 169 │ GW_Lane5_IL4                    GW_Lane5_IL4                    IL        plumb           plumb               83.0\n 170 │ GW_Lane5_KS1                    GW_Lane5_KS1                    OV        lud_KS          lud_KS              40.0\n 171 │ GW_Lane5_KS2                    GW_Lane5_KS2                    OV        lud_KS          lud_KS              40.0\n 172 │ GW_Lane5_LN1                    GW_Lane5_LN1                    LN        troch_LN        troch_LN            57.0\n 173 │ GW_Lane5_LN10                   GW_Lane5_LN10                   LN        troch_LN        troch_LN            64.0\n 174 │ GW_Lane5_LN11                   GW_Lane5_LN11                   LN        troch_LN        troch_LN            65.0\n 175 │ GW_Lane5_LN12                   GW_Lane5_LN12                   LN        troch_LN        troch_LN            66.0\n 176 │ GW_Lane5_LN14                   GW_Lane5_LN14                   LN        troch_LN        troch_LN            67.0\n 177 │ GW_Lane5_LN16                   GW_Lane5_LN16                   LN        troch_LN        troch_LN            68.0\n 178 │ GW_Lane5_LN18                   GW_Lane5_LN18                   LN        troch_LN        troch_LN            69.0\n 179 │ GW_Lane5_LN19                   GW_Lane5_LN19                   LN        troch_LN        troch_LN            70.0\n 180 │ GW_Lane5_LN2                    GW_Lane5_LN2                    LN_rep    troch_LN_rep    troch_LN_rep        58.0\n 181 │ GW_Lane5_LN20                   GW_Lane5_LN20                   LN        troch_LN        troch_LN            71.0\n 182 │ GW_Lane5_LN3                    GW_Lane5_LN3                    LN        troch_LN        troch_LN            59.0\n 183 │ GW_Lane5_LN4                    GW_Lane5_LN4                    LN        troch_LN        troch_LN            60.0\n 184 │ GW_Lane5_LN6                    GW_Lane5_LN6                    LN        troch_LN        troch_LN            61.0\n 185 │ GW_Lane5_LN7                    GW_Lane5_LN7                    LN        troch_LN        troch_LN            62.0\n 186 │ GW_Lane5_LN8                    GW_Lane5_LN8                    LN        troch_LN        troch_LN            63.0\n 187 │ GW_Lane5_MN1                    GW_Lane5_MN1                    MN        troch_MN        troch_west          51.0\n 188 │ GW_Lane5_MN12                   GW_Lane5_MN12                   MN        troch_MN        troch_west          56.0\n 189 │ GW_Lane5_MN3                    GW_Lane5_MN3                    MN        troch_MN        troch_west          52.0\n 190 │ GW_Lane5_MN5                    GW_Lane5_MN5                    MN        troch_MN        troch_west          53.0\n 191 │ GW_Lane5_MN8                    GW_Lane5_MN8                    MN        troch_MN        troch_west          54.0\n 192 │ GW_Lane5_MN9                    GW_Lane5_MN9                    MN        troch_MN        troch_west          55.0\n 193 │ GW_Lane5_NA1                    GW_Lane5_NA1                    NR        lud_PK          lud_PK              39.2\n 194 │ GW_Lane5_NA3-3ul                GW_Lane5_NA3-3ul                NR        lud_PK          lud_PK              39.2\n 195 │ GW_Lane5_PT11                   GW_Lane5_PT11                   KL        lud_KL          lud_central         42.0\n 196 │ GW_Lane5_PT12                   GW_Lane5_PT12                   KL        lud_KL          lud_central         42.0\n 197 │ GW_Lane5_PT2                    GW_Lane5_PT2                    ML        lud_ML          lud_ML              51.0\n 198 │ GW_Lane5_PT3                    GW_Lane5_PT3                    PA        lud_PA          lud_central         46.0\n 199 │ GW_Lane5_PT4                    GW_Lane5_PT4                    PA        lud_PA          lud_central         46.0\n 200 │ GW_Lane5_PT6                    GW_Lane5_PT6                    KL        lud_KL          lud_central         42.0\n 201 │ GW_Lane5_SH1                    GW_Lane5_SH1                    SH        lud_PK          lud_PK              39.1\n 202 │ GW_Lane5_SH2                    GW_Lane5_SH2                    SH        lud_PK          lud_PK              39.1\n 203 │ GW_Lane5_SH4                    GW_Lane5_SH4                    SH        lud_PK          lud_PK              39.1\n 204 │ GW_Lane5_SH5                    GW_Lane5_SH5                    SH        lud_PK          lud_PK              39.1\n 205 │ GW_Lane5_SL1                    GW_Lane5_SL1                    SL        plumb           plumb              150.0\n 206 │ GW_Lane5_SL2                    GW_Lane5_SL2                    SL        plumb           plumb              151.0\n 207 │ GW_Lane5_ST1                    GW_Lane5_ST1                    ST        plumb           plumb              142.0\n 208 │ GW_Lane5_ST12                   GW_Lane5_ST12                   ST        plumb           plumb              144.0\n 209 │ GW_Lane5_ST3                    GW_Lane5_ST3                    ST        plumb           plumb              143.0\n 210 │ GW_Lane5_STvi1                  GW_Lane5_STvi1                  ST_vi     vir             vir                 22.0\n 211 │ GW_Lane5_STvi2                  GW_Lane5_STvi2                  ST_vi     vir             vir                 23.0\n 212 │ GW_Lane5_STvi3                  GW_Lane5_STvi3                  ST_vi     vir             vir                 24.0\n 213 │ GW_Lane5_TA1                    GW_Lane5_TA1                    TA        plumb           plumb               86.0\n 214 │ GW_Lane5_TL1                    GW_Lane5_TL1                    TL        vir             vir                  9.0\n 215 │ GW_Lane5_TL10                   GW_Lane5_TL10                   TL        vir             vir                 17.0\n 216 │ GW_Lane5_TL11                   GW_Lane5_TL11                   TL        vir             vir                 18.0\n 217 │ GW_Lane5_TL12                   GW_Lane5_TL12                   TL        vir             vir                 19.0\n 218 │ GW_Lane5_TL2                    GW_Lane5_TL2                    TL        vir             vir                 10.0\n 219 │ GW_Lane5_TL3                    GW_Lane5_TL3                    TL_rep    vir_rep         vir_rep             11.0\n 220 │ GW_Lane5_TL4                    GW_Lane5_TL4                    TL        vir             vir                 12.0\n 221 │ GW_Lane5_TL5                    GW_Lane5_TL5                    TL        vir             vir                 13.0\n 222 │ GW_Lane5_TL7                    GW_Lane5_TL7                    TL        vir             vir                 14.0\n 223 │ GW_Lane5_TL8                    GW_Lane5_TL8                    TL        vir             vir                 15.0\n 224 │ GW_Lane5_TL9                    GW_Lane5_TL9                    TL        vir             vir                 16.0\n 225 │ GW_Lane5_TU1                    GW_Lane5_TU1                    TU        nit             nit                 35.0\n 226 │ GW_Lane5_TU2                    GW_Lane5_TU2                    TU        nit             nit                 36.0\n 227 │ GW_Lane5_UY1                    GW_Lane5_UY1                    UY_rep    plumb_rep       plumb_rep           93.0\n 228 │ GW_Lane5_UY2                    GW_Lane5_UY2                    UY        plumb           plumb               88.0\n 229 │ GW_Lane5_UY3                    GW_Lane5_UY3                    UY        plumb           plumb               89.0\n 230 │ GW_Lane5_UY4                    GW_Lane5_UY4                    UY        plumb           plumb               90.0\n 231 │ GW_Lane5_UY5                    GW_Lane5_UY5                    UY        plumb           plumb               91.0\n 232 │ GW_Lane5_UY6                    GW_Lane5_UY6                    UY        plumb           plumb               92.0\n 233 │ GW_Lane5_YK1                    GW_Lane5_YK1                    YK        vir             vir                  1.0\n 234 │ GW_Lane5_YK11                   GW_Lane5_YK11                   YK        vir             vir                  8.0\n 235 │ GW_Lane5_YK3                    GW_Lane5_YK3                    YK        vir             vir                  2.0\n 236 │ GW_Lane5_YK4                    GW_Lane5_YK4                    YK        vir             vir                  3.0\n 237 │ GW_Lane5_YK5                    GW_Lane5_YK5                    YK        vir             vir                  4.0\n 238 │ GW_Lane5_YK6                    GW_Lane5_YK6                    YK        vir             vir                  5.0\n 239 │ GW_Lane5_YK7                    GW_Lane5_YK7                    YK        vir             vir                  6.0\n 240 │ GW_Lane5_YK9                    GW_Lane5_YK9                    YK        vir             vir                  7.0\n 241 │ GW_Liz_GBS_Liz10045             GW_Liz_GBS_Liz10045             ML        lud             lud_ML              51.01\n 242 │ GW_Liz_GBS_Liz10094             GW_Liz_GBS_Liz10094             ML        lud             lud_ML              51.02\n 243 │ GW_Liz_GBS_Liz5101              GW_Liz_GBS_Liz5101              ML        lud             lud_ML              51.03\n 244 │ GW_Liz_GBS_Liz5101_R            GW_Liz_GBS_Liz5101_R            ML_rep    lud_rep         lud_ML_rep          51.04\n 245 │ GW_Liz_GBS_Liz5118              GW_Liz_GBS_Liz5118              ML        lud             lud_ML              51.05\n 246 │ GW_Liz_GBS_Liz5139              GW_Liz_GBS_Liz5139              ML        lud             lud_ML              51.06\n 247 │ GW_Liz_GBS_Liz5142              GW_Liz_GBS_Liz5142              ML        lud             lud_ML              51.07\n 248 │ GW_Liz_GBS_Liz5144              GW_Liz_GBS_Liz5144              ML        lud             lud_ML              51.08\n 249 │ GW_Liz_GBS_Liz5150              GW_Liz_GBS_Liz5150              ML        lud             lud_ML              51.09\n 250 │ GW_Liz_GBS_Liz5159              GW_Liz_GBS_Liz5159              ML        lud_chick       lud_ML              51.1\n 251 │ GW_Liz_GBS_Liz5162              GW_Liz_GBS_Liz5162              ML        lud_chick       lud_ML              51.11\n 252 │ GW_Liz_GBS_Liz5163              GW_Liz_GBS_Liz5163              ML        lud_chick       lud_ML              51.12\n 253 │ GW_Liz_GBS_Liz5164              GW_Liz_GBS_Liz5164              ML        lud_chick       lud_ML              51.13\n 254 │ GW_Liz_GBS_Liz5165              GW_Liz_GBS_Liz5165              ML        lud             lud_ML              51.14\n 255 │ GW_Liz_GBS_Liz5167              GW_Liz_GBS_Liz5167              ML        lud_chick       lud_ML              51.15\n 256 │ GW_Liz_GBS_Liz5168              GW_Liz_GBS_Liz5168              ML        lud_chick       lud_ML              51.16\n 257 │ GW_Liz_GBS_Liz5169              GW_Liz_GBS_Liz5169              ML        lud_chick       lud_ML              51.17\n 258 │ GW_Liz_GBS_Liz5171              GW_Liz_GBS_Liz5171              ML        lud             lud_ML              51.18\n 259 │ GW_Liz_GBS_Liz5172              GW_Liz_GBS_Liz5172              ML        lud_chick       lud_ML              51.19\n 260 │ GW_Liz_GBS_Liz5173              GW_Liz_GBS_Liz5173              ML        lud_chick       lud_ML              51.2\n 261 │ GW_Liz_GBS_Liz5174              GW_Liz_GBS_Liz5174              ML        lud             lud_ML              51.21\n 262 │ GW_Liz_GBS_Liz5175              GW_Liz_GBS_Liz5175              ML        lud             lud_ML              51.22\n 263 │ GW_Liz_GBS_Liz5176              GW_Liz_GBS_Liz5176              ML        lud             lud_ML              51.23\n 264 │ GW_Liz_GBS_Liz5177              GW_Liz_GBS_Liz5177              ML        lud_chick       lud_ML              51.24\n 265 │ GW_Liz_GBS_Liz5178              GW_Liz_GBS_Liz5178              ML        lud_chick       lud_ML              51.25\n 266 │ GW_Liz_GBS_Liz5179              GW_Liz_GBS_Liz5179              ML        lud_chick       lud_ML              51.26\n 267 │ GW_Liz_GBS_Liz5180              GW_Liz_GBS_Liz5180              ML        lud             lud_ML              51.27\n 268 │ GW_Liz_GBS_Liz5182              GW_Liz_GBS_Liz5182              ML        lud_chick       lud_ML              51.28\n 269 │ GW_Liz_GBS_Liz5184              GW_Liz_GBS_Liz5184              ML        lud_chick       lud_ML              51.29\n 270 │ GW_Liz_GBS_Liz5185              GW_Liz_GBS_Liz5185              ML        lud             lud_ML              51.3\n 271 │ GW_Liz_GBS_Liz5186              GW_Liz_GBS_Liz5186              ML        lud_chick       lud_ML              51.31\n 272 │ GW_Liz_GBS_Liz5187              GW_Liz_GBS_Liz5187              ML        lud_chick       lud_ML              51.32\n 273 │ GW_Liz_GBS_Liz5188              GW_Liz_GBS_Liz5188              ML        lud             lud_ML              51.33\n 274 │ GW_Liz_GBS_Liz5189              GW_Liz_GBS_Liz5189              ML        lud_chick       lud_ML              51.34\n 275 │ GW_Liz_GBS_Liz5190              GW_Liz_GBS_Liz5190              ML        lud_chick       lud_ML              51.35\n 276 │ GW_Liz_GBS_Liz5191              GW_Liz_GBS_Liz5191              ML        lud_chick       lud_ML              51.36\n 277 │ GW_Liz_GBS_Liz5192              GW_Liz_GBS_Liz5192              ML        lud_chick       lud_ML              51.37\n 278 │ GW_Liz_GBS_Liz5193              GW_Liz_GBS_Liz5193              ML        lud_chick       lud_ML              51.38\n 279 │ GW_Liz_GBS_Liz5194              GW_Liz_GBS_Liz5194              ML        lud_chick       lud_ML              51.39\n 280 │ GW_Liz_GBS_Liz5195              GW_Liz_GBS_Liz5195              ML        lud             lud_ML              51.4\n 281 │ GW_Liz_GBS_Liz5197              GW_Liz_GBS_Liz5197              ML        lud             lud_ML              51.41\n 282 │ GW_Liz_GBS_Liz5199              GW_Liz_GBS_Liz5199              ML        lud_chick       lud_ML              51.42\n 283 │ GW_Liz_GBS_Liz6002              GW_Liz_GBS_Liz6002              ML        lud             lud_ML              51.43\n 284 │ GW_Liz_GBS_Liz6006              GW_Liz_GBS_Liz6006              ML        lud             lud_ML              51.44\n 285 │ GW_Liz_GBS_Liz6008              GW_Liz_GBS_Liz6008              ML        lud             lud_ML              51.45\n 286 │ GW_Liz_GBS_Liz6009              GW_Liz_GBS_Liz6009              ML        lud             lud_ML              51.46\n 287 │ GW_Liz_GBS_Liz6010              GW_Liz_GBS_Liz6010              ML        lud             lud_ML              51.47\n 288 │ GW_Liz_GBS_Liz6012              GW_Liz_GBS_Liz6012              ML        lud             lud_ML              51.48\n 289 │ GW_Liz_GBS_Liz6014              GW_Liz_GBS_Liz6014              ML        lud             lud_ML              51.49\n 290 │ GW_Liz_GBS_Liz6055              GW_Liz_GBS_Liz6055              ML        lud             lud_ML              51.5\n 291 │ GW_Liz_GBS_Liz6057              GW_Liz_GBS_Liz6057              ML        lud             lud_ML              51.51\n 292 │ GW_Liz_GBS_Liz6060              GW_Liz_GBS_Liz6060              ML        lud             lud_ML              51.52\n 293 │ GW_Liz_GBS_Liz6062              GW_Liz_GBS_Liz6062              ML        lud             lud_ML              51.53\n 294 │ GW_Liz_GBS_Liz6063              GW_Liz_GBS_Liz6063              ML        lud             lud_ML              51.54\n 295 │ GW_Liz_GBS_Liz6066              GW_Liz_GBS_Liz6066              ML        lud             lud_ML              51.55\n 296 │ GW_Liz_GBS_Liz6072              GW_Liz_GBS_Liz6072              ML        lud             lud_ML              51.56\n 297 │ GW_Liz_GBS_Liz6079              GW_Liz_GBS_Liz6079              ML        lud             lud_ML              51.57\n 298 │ GW_Liz_GBS_Liz6203              GW_Liz_GBS_Liz6203              ML        lud_chick       lud_ML              51.58\n 299 │ GW_Liz_GBS_Liz6204              GW_Liz_GBS_Liz6204              ML        lud_chick       lud_ML              51.59\n 300 │ GW_Liz_GBS_Liz6461              GW_Liz_GBS_Liz6461              ML        lud             lud_ML              51.6\n 301 │ GW_Liz_GBS_Liz6472              GW_Liz_GBS_Liz6472              ML        lud             lud_ML              51.61\n 302 │ GW_Liz_GBS_Liz6478              GW_Liz_GBS_Liz6478              ML        lud             lud_ML              51.62\n 303 │ GW_Liz_GBS_Liz6766              GW_Liz_GBS_Liz6766              ML        lud             lud_ML              51.63\n 304 │ GW_Liz_GBS_Liz6776              GW_Liz_GBS_Liz6776              ML        lud             lud_ML              51.64\n 305 │ GW_Liz_GBS_Liz6794              GW_Liz_GBS_Liz6794              ML        lud             lud_ML              51.65\n 306 │ GW_Liz_GBS_P_fusc               GW_Liz_GBS_P_fusc               fusc      fusc            fusc               201.0\n 307 │ GW_Liz_GBS_P_h_man              GW_Liz_GBS_P_h_man              hmand     hmand           hmand              202.0\n 308 │ GW_Liz_GBS_P_humei              GW_Liz_GBS_P_humei              hume      hume            hume               203.0\n 309 │ GW_Liz_GBS_P_inor               GW_Liz_GBS_P_inor               inor      inor            inor               204.0\n 310 │ GW_Liz_GBS_S_burk               GW_Liz_GBS_S_burk               burk      burk            burk               205.0\n\nGOOD NEWS: names of individuals in metadata file and genotype ind file match perfectly.\n\n\n\n\nPolish a few individual names (to match those in other metadata object above, and make more readable graphs):\n\nind_with_metadata_chr4A.ind = correctNames(ind_with_metadata_chr4A.ind)\n\nind_with_metadata_chr4A.ID = correctNames(ind_with_metadata_chr4A.ID)\n\n310-element Vector{String}:\n \"GW_Armando_plate1_AB1\"\n \"GW_Armando_plate1_JF07G02\"\n \"GW_Armando_plate1_JF07G03\"\n \"GW_Armando_plate1_JF07G04\"\n \"GW_Armando_plate1_JF08G02\"\n \"GW_Armando_plate1_JF09G01\"\n \"GW_Armando_plate1_JF09G02\"\n \"GW_Armando_plate1_JF10G03\"\n \"GW_Armando_plate1_JF11G01\"\n \"GW_Armando_plate1_JF12G01\"\n \"GW_Armando_plate1_JF12G02\"\n \"GW_Armando_plate1_JF12G04\"\n \"GW_Armando_plate1_JF13G01\"\n ⋮\n \"GW_Liz_GBS_Liz6204\"\n \"GW_Liz_GBS_Liz6461\"\n \"GW_Liz_GBS_Liz6472\"\n \"GW_Liz_GBS_Liz6478\"\n \"GW_Liz_GBS_Liz6766\"\n \"GW_Liz_GBS_Liz6776\"\n \"GW_Liz_GBS_Liz6794\"\n \"GW_Liz_GBS_P_fusc\"\n \"GW_Liz_GBS_P_h_man\"\n \"GW_Liz_GBS_P_humei\"\n \"GW_Liz_GBS_P_inor\"\n \"GW_Liz_GBS_S_burk\"\n\n\n\n\nFilter to just the individuals also included in the analysis of LHBRs above\n\nselection = map(in(ind_with_metadata_included.ind), ind_with_metadata_chr4A.ind)\n\nind_with_metadata_chr4A_included = ind_with_metadata_chr4A[selection, :]\n\n# select genotypes of just the included individuals, and ignore first column\ngeno_chr4A_included = geno_chr4A[selection, 2:end]\n\n#\nprintln(ind_with_metadata_included.gw4A_cluster)\n\n[\"virLud\", \"obsPlumb\", \"obsPlumb\", \"obsPlumb\", \"obsPlumb\", \"obsPlumb\", \"obsPlumb\", \"virLud_obsPlumb\", \"obsPlumb\", \"obsPlumb\", \"obsPlumb\", \"virLud\", \"virLud\", \"obsPlumb\", \"virLud\", \"obsPlumb\", \"obsPlumb\", \"obsPlumb\", \"obsPlumb\", \"obsPlumb\", \"virLud_obsPlumb\", \"virLud_obsPlumb\", \"obsPlumb\", \"virLud_obsPlumb\", \"obsPlumb\", \"obsPlumb\", \"obsPlumb\", \"obsPlumb\", \"obsPlumb\", \"obsPlumb\", \"obsPlumb\", \"obsPlumb\", \"virLudHet\", \"troch\", \"virLud_troch\", \"obsPlumb\", \"virLud_troch\", \"troch_obsPlumb\", \"troch_obsPlumb\", \"troch_obsPlumb\", \"virLudHet\", \"virLud_obsPlumb\", \"virLudHet\", \"obsPlumb\", \"virLud_obsPlumb\", \"virLud_troch\", \"virLud_obsPlumb\", \"obsPlumb\", \"troch_obsPlumb\", \"troch_obsPlumb\", \"troch_obsPlumb\", \"troch\", \"troch_obsPlumb\", \"troch\", \"troch\", \"troch\", \"virLud_troch\", \"troch\", \"trochHet\", \"virLud_obsPlumb\", \"obsPlumb\", \"obsPlumb\", \"virLud_obsPlumb\", \"obsPlumb\", \"virLud\", \"virLud\", \"virLud\", \"obsPlumb\", \"obsPlumb\", \"obsPlumb\", \"obsPlumb\", \"obsPlumb\", \"obsPlumb\", \"obsPlumb\", \"obsPlumb\", \"obsPlumb\", \"obsPlumb\", \"obsPlumb\", \"virLud\", \"obsPlumb\", \"obsPlumb\", \"obsPlumb\", \"obsPlumb\", \"obsPlumb\", \"obsPlumb\", \"obsPlumb\", \"virLud\", \"virLud_obsPlumb\", \"obsPlumb\", \"obsPlumbHet\", \"obsPlumb\", \"obsPlumb\", \"obsPlumb\", \"obsPlumb\", \"troch\", \"obsPlumb\", \"troch\", \"troch\", \"troch_obsPlumb\", \"virLud_troch\", \"obsPlumb\", \"obsPlumb\", \"obsPlumb\", \"virLud_obsPlumb\", \"virLud_obsPlumb\", \"obsPlumb\", \"obsPlumb\", \"obsPlumb\", \"obsPlumb\", \"troch_obsPlumb\", \"obsPlumb\", \"virLud_obsPlumb\", \"trochHet\", \"troch\", \"troch\", \"troch_obsPlumb\", \"troch\", \"troch\", \"troch\", \"troch\", \"troch\", \"troch\", \"virLud_obsPlumb\", \"virLud_troch\", \"virLud_obsPlumb\", \"obsPlumb\", \"virLud_obsPlumb\", \"virLud_obsPlumb\", \"virLud\", \"virLud\", \"virLud\", \"virLud\", \"virLud\", \"virLud\", \"virLud\", \"virLud\", \"virLud\", \"obsPlumb\", \"obsPlumb\", \"obsPlumb\", \"obsPlumb\", \"obsPlumb\", \"obsPlumb\", \"obsPlumb\", \"obsPlumb\", \"troch_obsPlumb\", \"obsPlumb\", \"obsPlumb\", \"virLud_obsPlumb\", \"virLud_obsPlumb\", \"troch\", \"troch\", \"troch\", \"trochHet\", \"troch\", \"troch\", \"troch\", \"troch\", \"troch\", \"troch\", \"troch\", \"troch\", \"troch\", \"troch\", \"troch\", \"troch\", \"troch\", \"troch\", \"troch\", \"virLud\", \"obsPlumb\", \"virLud\", \"obsPlumb\", \"troch\", \"obsPlumb\", \"obsPlumb\", \"virLud_obsPlumb\", \"obsPlumb\", \"obsPlumb\", \"obsPlumb\", \"obsPlumb\", \"obsPlumb\", \"obsPlumb\", \"obsPlumb\", \"obsPlumb\", \"obsPlumb\", \"virLud\", \"virLud\", \"virLud\", \"obsPlumb\", \"virLud\", \"virLud\", \"virLud\", \"virLud\", \"virLud\", \"virLud\", \"virLud\", \"virLud\", \"virLud\", \"virLud\", \"nit\", \"nit\", \"obsPlumb\", \"obsPlumb\", \"virLud_obsPlumb\", \"obsPlumb\", \"obsPlumb\", \"virLud\", \"virLud\", \"virLud\", \"virLud\", \"virLud\", \"virLud\", \"virLud\", \"troch_obsPlumb\", \"troch\", \"troch\", \"troch\", \"troch_obsPlumb\", \"troch\", \"troch\", \"troch\", \"troch\", \"troch\", \"troch\", \"troch_obsPlumb\", \"troch\", \"troch\", \"troch_obsPlumb\", \"troch_obsPlumb\", \"troch\", \"troch_obsPlumb\", \"troch\", \"virLud_obsPlumb\", \"troch_obsPlumb\", \"troch_obsPlumb\", \"troch\", \"virLud_troch\", \"troch\", \"troch_obsPlumb\", \"troch\", \"virLud_troch\", \"virLud_troch\", \"troch_obsPlumb\", \"troch\", \"troch\", \"virLud_troch\", \"troch\", \"troch_obsPlumb\", \"troch\", \"troch\", \"troch\", \"trochHet\", \"troch\", \"troch\", \"troch\", \"troch\"]\n\n\n\n\nLook up the chr4A individual membership in homozygous clusters, and calculate pi and Dxy\n\nindClusterMembership_gw4A = ind_with_metadata_included.gw4A_cluster\n\nclusterNames_gw4A = [\"virLud\",\n                \"nit\",\n                \"troch\",\n                \"obsPlumb\"]\n\n# get boundaries of gw4A LHBR:\n\nchr = \"gw4A\"\npositionMin_chr4A_LHBR, positionMax_chr4A_LHBR, regionText, \n    windowedIndHetStanRegion, meanAcrossRegionIndHetStan,\n    genos_highViSHetRegion, pos_highViSHetRegion, regionInfo = \n                        getWindowedIndHetStanRegion(genosOnly_included, \n                                                    pos_SNP_filtered, \n                                                    highViSHetRegions, chr;\n                                                    windowSize = 500)\n\n# select the loci within the gw4A LHBR:\nselection = (positionMin_chr4A_LHBR .&lt;= pos_chr4A.position .&lt;= positionMax_chr4A_LHBR) \n\ngeno_chr4A_included_LHBR = geno_chr4A_included[:, selection]\n\npos_chr4A_LHBR = pos_chr4A[selection, :]\n\n# Calculate allele freqs and sample sizes\nfreqs, sampleSizes = getFreqsAndSampleSizes(geno_chr4A_included_LHBR, indClusterMembership_gw4A, clusterNames_gw4A)\n\n# Calculate per-site pi (within-group nucleotide distance)\nsitePi = getSitePi(freqs, sampleSizes)\n\n# calculate pairwise Dxy per site, using data in \"freqs\" and groups in \"groups\"\nDxy, pairwiseDxyClusterNames = getDxy(freqs, clusterNames_gw4A)\n\nFst, FstNumerator, FstDenominator, pairwiseFstClusterNames = getFst(freqs, sampleSizes, clusterNames_gw4A; among=false)\n\n# Now get averages of pi and Dxy for whole region:\nregionPiTable = DataFrame(cluster = clusterNames_gw4A, pi = getRegionPi(sitePi))\n#= 4×2 DataFrame\n Row │ cluster   pi          \n     │ String    Float64     \n─────┼───────────────────────\n   1 │ virLud    0.000956575\n   2 │ nit       0.000332204\n   3 │ troch     0.000613901\n   4 │ obsPlumb  0.000261819 =#\n\n# average pi (for chr 4A LHBR) among three major groups:\n(0.000956575 + 0.000613901 + 0.000261819) / 3\n# 0.000610765\n\nregionDxyTable = DataFrame(cluster_pair = pairwiseDxyClusterNames, Dxy = getRegionDxy(Dxy))\n#= 6×2 DataFrame\n Row │ cluster_pair     Dxy        \n     │ String           Float64    \n─────┼─────────────────────────────\n   1 │ virLud_nit       0.00325609\n   2 │ virLud_troch     0.0031813\n   3 │ virLud_obsPlumb  0.00241666\n   4 │ nit_troch        0.00286634\n   5 │ nit_obsPlumb     0.00249507\n   6 │ troch_obsPlumb   0.00305931 =#\n\n# average Dxy (for chr 4A LHBR) among three major groups:\n(0.0031813 + 0.00241666 + 0.00305931) / 3\n# 0.0028857566666666674\n\n# Drawing phylogeny (in Illustrator) based on above, between three major groups.\n# Ignoring nit, the most recent connection is between virLud and obsPlumb (0.00241666).\n# For deeper branch length, am using: \n# Calculation for average Dxy between troch and (virLud, obsPlumb):\n(0.0031813 + 0.00305931) / 2\n# 0.003120305\n\nGood news: 1 region on that scaffold\n\n\n0.0031203050000000003\n\n\nWow, that is an amazing difference between pi within the obsPlumb haplotype and Dxy between that and others (roughly 10x).\n\n\nCalculate pi and Dxy outside of the chr 4A LHBR (grouped by the LHBR homozygous groups)\n\n# select the loci outside of the gw4A LHBR:\nselection = .!(positionMin_chr4A_LHBR .&lt;= pos_chr4A.position .&lt;= positionMax_chr4A_LHBR) \n\ngeno_chr4A_included_nonLHBR = geno_chr4A_included[:, selection]\n\npos_chr4A_nonLHBR = pos_chr4A[selection, :]\n\n# Calculate allele freqs and sample sizes\nfreqs, sampleSizes = getFreqsAndSampleSizes(geno_chr4A_included_nonLHBR, indClusterMembership_gw4A, clusterNames_gw4A)\n\n# Calculate per-site pi (within-group nucleotide distance)\nsitePi = getSitePi(freqs, sampleSizes)\n\n# calculate pairwise Dxy per site, using data in \"freqs\" and groups in \"groups\"\nDxy, pairwiseDxyClusterNames = getDxy(freqs, clusterNames_gw4A)\n\nFst, FstNumerator, FstDenominator, pairwiseFstClusterNames = getFst(freqs, sampleSizes, clusterNames_gw4A; among=false)\n\n# Now get averages of pi and Dxy for whole region:\nregionPiTable = DataFrame(cluster = clusterNames_gw4A, pi = getRegionPi(sitePi))\n#= 4×2 DataFrame\n Row │ cluster   pi         \n     │ String    Float64    \n─────┼──────────────────────\n   1 │ virLud    0.0041321\n   2 │ nit       0.00196343\n   3 │ troch     0.00551821\n   4 │ obsPlumb  0.0055897 =#\n\n# average pi (for chr 4A NOT in LHBR) among three major groups:\n(0.0041321 + 0.00551821 + 0.0055897) / 3\n# 0.005080003333333333\n\n#ratio of average pi outside to average pi within chr 4A LHBR:\n0.005080003333333333 / 0.000610765\n# 8.317443424776032\n\n# percent lower that average pi is within compared to outside LHBR:\n100 * (8.317443424776032 - 1) / 8.317443424776032\n# 87.97707481819238\n\n# for obsPlumb haplotype, ratio of pi outside to pi within chr 4A LHBR:\n0.0055897 / 0.000261819\n# 21.349481893980194\n\n# percent lower that pi of obsPlumb haplotype is within vs. outside of HLBR:\n100 * (21.349481893980194 - 1) / 21.349481893980194\n# 95.31604558384171\n\nregionDxyTable = DataFrame(cluster_pair = pairwiseDxyClusterNames, Dxy = getRegionDxy(Dxy))\n#= 6×2 DataFrame\n Row │ cluster_pair     Dxy        \n     │ String           Float64    \n─────┼─────────────────────────────\n   1 │ virLud_nit       0.00440681\n   2 │ virLud_troch     0.0055599\n   3 │ virLud_obsPlumb  0.00556595\n   4 │ nit_troch        0.00520058\n   5 │ nit_obsPlumb     0.00548082\n   6 │ troch_obsPlumb   0.00601295 =#\n\n# average Dxy (for OUTSIDE of chr 4A LHBR) among three major groups:\n(0.0055599 + 0.00556595 + 0.00601295) / 3\n# 0.005712933333333333\n\n#ratio of average Dxy outside to average Dxy within chr 4A LHBR among 3 major groups:\n0.005712933333333333 / 0.0028857566666666674\n# 1.9797002981309344\n\n# percent lower that average Dxy is within compared to outside LHBR:\n100 * (1.9797002981309344 - 1) / 1.9797002981309344\n# 49.487303661866626\n\n# Drawing phylogeny (in Illustrator) based on above, between three major groups.\n# In this case, the virLud_troch is the lower Dxy so am connecting those more recently.\n# For deeper brancha length, using this:\n# Calculation of average distance between obsPlumb and (virLud, troch)\n(0.00556595 + 0.00601295) / 2\n# 0.00578945\n\n0.00578945\n\n\nRemarkable differences between pi and Dxy in the gw4A LHBR, and between LHBR and non-LHBR part of that chromosome!\nDo same with chr 3, which also shows 3 clear haplotype groups, but a very different biogeographic pattern than 4A:",
    "crumbs": [
      "Home",
      "Greenish Warbler heterozygosity variance analysis"
    ]
  },
  {
    "objectID": "GW_Heterozygosity_Variance.html#examine-chromosome-3-large-haploblock-region-lhbr-with-invariant-sites-included",
    "href": "GW_Heterozygosity_Variance.html#examine-chromosome-3-large-haploblock-region-lhbr-with-invariant-sites-included",
    "title": "Greenish Warbler heterozygosity variance analysis",
    "section": "Examine chromosome 3 Large HaploBlock Region (LHBR) with invariant sites included",
    "text": "Examine chromosome 3 Large HaploBlock Region (LHBR) with invariant sites included\nBefore running below, I need to change format of 012NA file to # Before running below, changed 012NA file back into 012minus1 file, using commands like below, so can be read as integer:\ncat /Users/darrenirwin/GW_data_from_cedar_Feb2024/GW2022_cedar/infoSites_vcfs/GW2022_all4plates.genotypes.allSites.chrgw3.infoSites.max2allele_noindel.maxmiss60.MQ20.lowHet.tab.012NA | sed 's/NA/-1/g' &gt; /Users/darrenirwin/GW_data_from_cedar_Feb2024/GW2022_cedar/infoSites_vcfs/GW2022_all4plates.genotypes.allSites.chrgw3.infoSites.max2allele_noindel.maxmiss60.MQ20.lowHet.tab.012minus1\n\nbaseName = \"/Users/darrenirwin/GW_data_from_cedar_Feb2024/GW2022_cedar/infoSites_vcfs/GW2022_all4plates.genotypes.allSites.chrgw3.infoSites.max2allele_noindel.maxmiss60.MQ20.lowHet.tab\"\n# load metadata\ncd(dataDirectory)\nmetadata_chr3 = DataFrame(CSV.File(metadataFile)) # the CSV.File function interprets the correct delimiter\nnum_metadata_cols_chr3 = ncol(metadata_chr3)\nnum_individuals_chr3 = nrow(metadata_chr3) \n# read in individual names for this dataset\nindividuals_file_name_chr3 = string(baseName, \".012.indv\")\nind_chr3 = DataFrame(CSV.File(individuals_file_name_chr3; header=[\"ind\"], types=[String])) \nindNum_chr3 = size(ind_chr3, 1) # number of individuals\nif num_individuals_chr3 != indNum_chr3\n    println(\"WARNING: number of rows in metadata file different than number of individuals in .indv file\")\nend\n# read in position data for this dataset\nposition_file_name_chr3 = string(baseName, \".012.pos\")\npos_chr3 = DataFrame(CSV.File(position_file_name_chr3; header=[\"chrom\", \"position\"], types=[String, Int]))\n# read in genotype data\ngenotype_file_name_chr3 = string(baseName, \".012minus1\") \n@time if 1 &lt;= indNum_chr3 &lt;= 127   \n    geno_chr3 = readdlm(genotype_file_name_chr3, '\\t', Int8, '\\n'); # this has been sped up dramatically, by first converting \"NA\" to -1\nelseif 128 &lt;= indNum_chr3 &lt;= 32767\n    geno_chr3 = readdlm(genotype_file_name_chr3, '\\t', Int16, '\\n'); # this needed for first column, which is number of individual; Int16 not much slower on import than Int8\nelse\n    print(\"Error: Number of individuals in .indv appears outside of range from 1 to 32767\")\nend\nloci_count_chr3 = size(geno_chr3, 2) - 1   # because the first column is not a SNP (just a count from zero)\nprint(string(\"Read in genotypic data at \", loci_count_chr3,\" loci for \", indNum_chr3, \" individuals. \\n\"))\n\n 48.319576 seconds (2.97 M allocations: 15.221 GiB, 2.01% gc time, 0.35% compilation time)\nRead in genotypic data at 1855532 loci for 310 individuals. \n\n\n\nCheck that individuals are same in genotype data and metadata\n\nind_with_metadata_chr3 = hcat(ind_chr3, metadata_chr3)\nprintln(ind_with_metadata_chr3)\nprintln()  # prints a line break \nif isequal(ind_with_metadata_chr3.ind, ind_with_metadata_chr3.ID)\n    println(\"GOOD NEWS: names of individuals in metadata file and genotype ind file match perfectly.\")\nelse\n    println(\"WARNING: names of individuals in metadata file and genotype ind file do not completely match.\")\nend\n\n310×6 DataFrame\n Row │ ind                             ID                              location  group           Fst_group       plot_order \n     │ String                          String31                        String7   String15        String15        Float64    \n─────┼──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────\n   1 │ GW_Armando_plate1_AB1           GW_Armando_plate1_AB1           AB        vir             vir                 20.01\n   2 │ GW_Armando_plate1_JF07G02       GW_Armando_plate1_JF07G02       ST        plumb           plumb              108.0\n   3 │ GW_Armando_plate1_JF07G03       GW_Armando_plate1_JF07G03       ST        plumb           plumb              109.0\n   4 │ GW_Armando_plate1_JF07G04       GW_Armando_plate1_JF07G04       ST        plumb           plumb              110.0\n   5 │ GW_Armando_plate1_JF08G02       GW_Armando_plate1_JF08G02       ST        plumb           plumb              111.0\n   6 │ GW_Armando_plate1_JF09G01       GW_Armando_plate1_JF09G01       ST        plumb           plumb              112.0\n   7 │ GW_Armando_plate1_JF09G02       GW_Armando_plate1_JF09G02       ST        plumb           plumb              113.0\n   8 │ GW_Armando_plate1_JF10G03       GW_Armando_plate1_JF10G03       ST        plumb_vir       plumb_vir          170.0\n   9 │ GW_Armando_plate1_JF11G01       GW_Armando_plate1_JF11G01       ST        plumb           plumb              114.0\n  10 │ GW_Armando_plate1_JF12G01       GW_Armando_plate1_JF12G01       ST        plumb           plumb              115.0\n  11 │ GW_Armando_plate1_JF12G02       GW_Armando_plate1_JF12G02       ST        plumb           plumb              116.0\n  12 │ GW_Armando_plate1_JF12G04       GW_Armando_plate1_JF12G04       ST_vi     vir             vir                 24.001\n  13 │ GW_Armando_plate1_JF13G01       GW_Armando_plate1_JF13G01       ST        plumb           plumb              117.0\n  14 │ GW_Armando_plate1_JF15G03       GW_Armando_plate1_JF15G03       DV        plumb           plumb              103.0\n  15 │ GW_Armando_plate1_JF16G01       GW_Armando_plate1_JF16G01       DV_vi     plumb_vir       vir                 24.041\n  16 │ GW_Armando_plate1_JF20G01       GW_Armando_plate1_JF20G01       MB        plumb           plumb               94.0\n  17 │ GW_Armando_plate1_JF22G01       GW_Armando_plate1_JF22G01       MB        plumb           plumb               95.0\n  18 │ GW_Armando_plate1_JF23G01       GW_Armando_plate1_JF23G01       VB        plumb           plumb               98.0\n  19 │ GW_Armando_plate1_JF23G02       GW_Armando_plate1_JF23G02       VB        plumb           plumb               99.0\n  20 │ GW_Armando_plate1_JF24G02       GW_Armando_plate1_JF24G02       VB        plumb           plumb              100.0\n  21 │ GW_Armando_plate1_JF26G01       GW_Armando_plate1_JF26G01       ST        plumb           plumb              118.0\n  22 │ GW_Armando_plate1_JF27G01       GW_Armando_plate1_JF27G01       ST        plumb           plumb              119.0\n  23 │ GW_Armando_plate1_JF29G01       GW_Armando_plate1_JF29G01       ST        plumb           plumb              120.0\n  24 │ GW_Armando_plate1_JF29G02       GW_Armando_plate1_JF29G02       ST        plumb           plumb              121.0\n  25 │ GW_Armando_plate1_JF29G03       GW_Armando_plate1_JF29G03       ST        plumb           plumb              122.0\n  26 │ GW_Armando_plate1_JG02G02       GW_Armando_plate1_JG02G02       PR        plumb           plumb              145.0\n  27 │ GW_Armando_plate1_JG02G04       GW_Armando_plate1_JG02G04       PR        plumb           plumb              146.0\n  28 │ GW_Armando_plate1_JG08G01       GW_Armando_plate1_JG08G01       ST        plumb           plumb              123.0\n  29 │ GW_Armando_plate1_JG08G02       GW_Armando_plate1_JG08G02       ST        plumb           plumb              124.0\n  30 │ GW_Armando_plate1_JG10G01       GW_Armando_plate1_JG10G01       ST        plumb           plumb              125.0\n  31 │ GW_Armando_plate1_JG12G01       GW_Armando_plate1_JG12G01       ST        plumb           plumb              126.0\n  32 │ GW_Armando_plate1_JG17G01       GW_Armando_plate1_JG17G01       ST        plumb_vir       plumb              127.0\n  33 │ GW_Armando_plate1_NO_BC_TTGW05  GW_Armando_plate1_NO_BC_TTGW05  blank     blank           blank              -99.0\n  34 │ GW_Armando_plate1_NO_DNA        GW_Armando_plate1_NO_DNA        blank     blank           blank              -99.0\n  35 │ GW_Armando_plate1_RF20G01       GW_Armando_plate1_RF20G01       BJ        obs_plumb       plumb_BJ            77.501\n  36 │ GW_Armando_plate1_RF29G02       GW_Armando_plate1_RF29G02       BJ        obs_plumb       plumb_BJ            77.502\n  37 │ GW_Armando_plate1_TL3           GW_Armando_plate1_TL3           TL        vir             vir                 11.01\n  38 │ GW_Armando_plate1_TTGW01        GW_Armando_plate1_TTGW01        MN        troch_MN        troch_west          53.0\n  39 │ GW_Armando_plate1_TTGW05_rep1   GW_Armando_plate1_TTGW05_rep1   MN_rep    troch_MN_rep    troch_west_rep      53.0\n  40 │ GW_Armando_plate1_TTGW05_rep2   GW_Armando_plate1_TTGW05_rep2   MN        troch_MN        troch_west          53.0\n  41 │ GW_Armando_plate1_TTGW06        GW_Armando_plate1_TTGW06        SU        lud_Sukhto      lud_central         47.0\n  42 │ GW_Armando_plate1_TTGW07        GW_Armando_plate1_TTGW07        SU        lud_Sukhto      lud_central         47.0\n  43 │ GW_Armando_plate1_TTGW10        GW_Armando_plate1_TTGW10        SU        lud_Sukhto      lud_central         47.0\n  44 │ GW_Armando_plate1_TTGW11        GW_Armando_plate1_TTGW11        SU        lud_Sukhto      lud_central         47.0\n  45 │ GW_Armando_plate1_TTGW13        GW_Armando_plate1_TTGW13        TH        lud_Thallighar  lud_central         43.0\n  46 │ GW_Armando_plate1_TTGW17        GW_Armando_plate1_TTGW17        TH        lud_Thallighar  lud_central         43.0\n  47 │ GW_Armando_plate1_TTGW19        GW_Armando_plate1_TTGW19        TH        lud_Thallighar  lud_central         43.0\n  48 │ GW_Armando_plate1_TTGW21        GW_Armando_plate1_TTGW21        SR        lud_Sural       lud_central         45.0\n  49 │ GW_Armando_plate1_TTGW22        GW_Armando_plate1_TTGW22        SR        lud_Sural       lud_central         45.0\n  50 │ GW_Armando_plate1_TTGW23        GW_Armando_plate1_TTGW23        SR        lud_Sural       lud_central         45.0\n  51 │ GW_Armando_plate1_TTGW29        GW_Armando_plate1_TTGW29        SR        lud_Sural       lud_central         45.0\n  52 │ GW_Armando_plate1_TTGW52        GW_Armando_plate1_TTGW52        NG        lud_Nainaghar   lud_central         49.0\n  53 │ GW_Armando_plate1_TTGW53        GW_Armando_plate1_TTGW53        NG        lud_Nainaghar   lud_central         49.0\n  54 │ GW_Armando_plate1_TTGW55        GW_Armando_plate1_TTGW55        NG        lud_Nainaghar   lud_central         49.0\n  55 │ GW_Armando_plate1_TTGW57        GW_Armando_plate1_TTGW57        NG        lud_Nainaghar   lud_central         49.0\n  56 │ GW_Armando_plate1_TTGW58        GW_Armando_plate1_TTGW58        NG        lud_Nainaghar   lud_central         49.0\n  57 │ GW_Armando_plate1_TTGW59        GW_Armando_plate1_TTGW59        NG        lud_Nainaghar   lud_central         49.0\n  58 │ GW_Armando_plate1_TTGW63        GW_Armando_plate1_TTGW63        SP        lud_Spiti       troch_west          55.0\n  59 │ GW_Armando_plate1_TTGW64        GW_Armando_plate1_TTGW64        SP        lud_Spiti       troch_west          55.0\n  60 │ GW_Armando_plate1_TTGW65        GW_Armando_plate1_TTGW65        SP        lud_Spiti       troch_west          55.0\n  61 │ GW_Armando_plate1_TTGW66        GW_Armando_plate1_TTGW66        SP        lud_Spiti       troch_west          55.0\n  62 │ GW_Armando_plate1_TTGW68        GW_Armando_plate1_TTGW68        SP        lud_Spiti       troch_west          55.0\n  63 │ GW_Armando_plate1_TTGW70        GW_Armando_plate1_TTGW70        SA        lud_Sathrundi   lud_Sath            41.0\n  64 │ GW_Armando_plate1_TTGW71        GW_Armando_plate1_TTGW71        SA        lud_Sathrundi   lud_Sath            41.0\n  65 │ GW_Armando_plate1_TTGW72        GW_Armando_plate1_TTGW72        SA        lud_Sathrundi   lud_Sath            41.0\n  66 │ GW_Armando_plate1_TTGW74        GW_Armando_plate1_TTGW74        SA        lud_Sathrundi   lud_Sath            41.0\n  67 │ GW_Armando_plate1_TTGW78        GW_Armando_plate1_TTGW78        SA        lud_Sathrundi   lud_Sath            41.0\n  68 │ GW_Armando_plate1_TTGW_15_05    GW_Armando_plate1_TTGW_15_05    SR        lud_Sural       lud_central         45.0\n  69 │ GW_Armando_plate1_TTGW_15_07    GW_Armando_plate1_TTGW_15_07    SR        lud_Sural       lud_central         45.0\n  70 │ GW_Armando_plate1_TTGW_15_08    GW_Armando_plate1_TTGW_15_08    SR        lud_Sural       lud_central         45.0\n  71 │ GW_Armando_plate1_TTGW_15_09    GW_Armando_plate1_TTGW_15_09    SR        lud_Sural       lud_central         45.0\n  72 │ GW_Armando_plate1_UY1           GW_Armando_plate1_UY1           UY        plumb           plumb               87.0\n  73 │ GW_Armando_plate2_IL2           GW_Armando_plate2_IL2           IL_rep    plumb_rep       plumb_rep           84.0\n  74 │ GW_Armando_plate2_JE31G01       GW_Armando_plate2_JE31G01       VB_vi     vir_misID       vir                 24.002\n  75 │ GW_Armando_plate2_JF03G01       GW_Armando_plate2_JF03G01       ST_vi     vir_misID       vir                 24.003\n  76 │ GW_Armando_plate2_JF03G02       GW_Armando_plate2_JF03G02       VB_vi     vir_misID       vir                 24.004\n  77 │ GW_Armando_plate2_JF07G01       GW_Armando_plate2_JF07G01       ST        plumb           plumb              128.0\n  78 │ GW_Armando_plate2_JF08G04       GW_Armando_plate2_JF08G04       ST        plumb           plumb              129.0\n  79 │ GW_Armando_plate2_JF10G02       GW_Armando_plate2_JF10G02       ST        plumb           plumb              130.0\n  80 │ GW_Armando_plate2_JF11G02       GW_Armando_plate2_JF11G02       ST        plumb           plumb              131.0\n  81 │ GW_Armando_plate2_JF12G03       GW_Armando_plate2_JF12G03       ST        plumb           plumb              132.0\n  82 │ GW_Armando_plate2_JF12G05       GW_Armando_plate2_JF12G05       ST        plumb           plumb              133.0\n  83 │ GW_Armando_plate2_JF13G02       GW_Armando_plate2_JF13G02       ST        plumb           plumb              134.0\n  84 │ GW_Armando_plate2_JF14G01       GW_Armando_plate2_JF14G01       DV        plumb           plumb              104.0\n  85 │ GW_Armando_plate2_JF14G02       GW_Armando_plate2_JF14G02       DV        plumb           plumb              105.0\n  86 │ GW_Armando_plate2_JF15G01       GW_Armando_plate2_JF15G01       DV        plumb           plumb              106.0\n  87 │ GW_Armando_plate2_JF15G02       GW_Armando_plate2_JF15G02       DV        plumb           plumb              107.0\n  88 │ GW_Armando_plate2_JF16G02       GW_Armando_plate2_JF16G02       DV_vi     plumb_vir       vir                 24.042\n  89 │ GW_Armando_plate2_JF19G01       GW_Armando_plate2_JF19G01       MB        plumb           plumb               96.0\n  90 │ GW_Armando_plate2_JF20G02       GW_Armando_plate2_JF20G02       MB        plumb           plumb               97.0\n  91 │ GW_Armando_plate2_JF24G01       GW_Armando_plate2_JF24G01       VB        plumb           plumb              101.0\n  92 │ GW_Armando_plate2_JF24G03       GW_Armando_plate2_JF24G03       ST        plumb           plumb              135.0\n  93 │ GW_Armando_plate2_JF25G01       GW_Armando_plate2_JF25G01       VB        plumb           plumb              102.0\n  94 │ GW_Armando_plate2_JF26G02       GW_Armando_plate2_JF26G02       ST        plumb           plumb              136.0\n  95 │ GW_Armando_plate2_JF27G02       GW_Armando_plate2_JF27G02       ST        plumb           plumb              137.0\n  96 │ GW_Armando_plate2_JF30G01       GW_Armando_plate2_JF30G01       ST_vi     vir_misID       vir                 24.005\n  97 │ GW_Armando_plate2_JG01G01       GW_Armando_plate2_JG01G01       PR        plumb           plumb              147.0\n  98 │ GW_Armando_plate2_JG02G01       GW_Armando_plate2_JG02G01       PR        plumb           plumb              148.0\n  99 │ GW_Armando_plate2_JG02G03       GW_Armando_plate2_JG02G03       PR        plumb           plumb              149.0\n 100 │ GW_Armando_plate2_JG10G02       GW_Armando_plate2_JG10G02       ST        plumb           plumb              138.0\n 101 │ GW_Armando_plate2_JG10G03       GW_Armando_plate2_JG10G03       ST        plumb           plumb              139.0\n 102 │ GW_Armando_plate2_JG12G02       GW_Armando_plate2_JG12G02       ST        plumb           plumb              140.0\n 103 │ GW_Armando_plate2_JG12G03       GW_Armando_plate2_JG12G03       ST        plumb           plumb              141.0\n 104 │ GW_Armando_plate2_LN11          GW_Armando_plate2_LN11          LN_rep    troch_LN_rep    troch_LN_rep        65.01\n 105 │ GW_Armando_plate2_LN2           GW_Armando_plate2_LN2           LN        troch_LN        troch_LN            58.01\n 106 │ GW_Armando_plate2_NO_BC_TTGW05  GW_Armando_plate2_NO_BC_TTGW05  blank     blank           blank              -99.0\n 107 │ GW_Armando_plate2_NO_DNA        GW_Armando_plate2_NO_DNA        blank     blank           blank              -99.0\n 108 │ GW_Armando_plate2_RF29G01       GW_Armando_plate2_RF29G01       BJ        obs_plumb       plumb_BJ            77.503\n 109 │ GW_Armando_plate2_TTGW02        GW_Armando_plate2_TTGW02        MN        troch_MN        troch_west          53.0\n 110 │ GW_Armando_plate2_TTGW03        GW_Armando_plate2_TTGW03        MN        troch_MN        troch_west          53.0\n 111 │ GW_Armando_plate2_TTGW05_rep3   GW_Armando_plate2_TTGW05_rep3   MN_rep    troch_MN_rep    troch_west_rep      53.0\n 112 │ GW_Armando_plate2_TTGW05_rep4   GW_Armando_plate2_TTGW05_rep4   MN_rep    troch_MN_rep    troch_west_rep      53.0\n 113 │ GW_Armando_plate2_TTGW08        GW_Armando_plate2_TTGW08        SU        lud_Sukhto      lud_central         47.0\n 114 │ GW_Armando_plate2_TTGW09        GW_Armando_plate2_TTGW09        SU        lud_Sukhto      lud_central         47.0\n 115 │ GW_Armando_plate2_TTGW12        GW_Armando_plate2_TTGW12        TH        lud_Thallighar  lud_central         43.0\n 116 │ GW_Armando_plate2_TTGW14        GW_Armando_plate2_TTGW14        TH        lud_Thallighar  lud_central         43.0\n 117 │ GW_Armando_plate2_TTGW15        GW_Armando_plate2_TTGW15        TH        lud_Thallighar  lud_central         43.0\n 118 │ GW_Armando_plate2_TTGW16        GW_Armando_plate2_TTGW16        TH        lud_Thallighar  lud_central         43.0\n 119 │ GW_Armando_plate2_TTGW18        GW_Armando_plate2_TTGW18        TH        lud_Thallighar  lud_central         43.0\n 120 │ GW_Armando_plate2_TTGW20        GW_Armando_plate2_TTGW20        SR        lud_Sural       lud_central         45.0\n 121 │ GW_Armando_plate2_TTGW24        GW_Armando_plate2_TTGW24        SR        lud_Sural       lud_central         45.0\n 122 │ GW_Armando_plate2_TTGW25        GW_Armando_plate2_TTGW25        SR        lud_Sural       lud_central         45.0\n 123 │ GW_Armando_plate2_TTGW27        GW_Armando_plate2_TTGW27        SR        lud_Sural       lud_central         45.0\n 124 │ GW_Armando_plate2_TTGW28        GW_Armando_plate2_TTGW28        SR        lud_Sural       lud_central         45.0\n 125 │ GW_Armando_plate2_TTGW50        GW_Armando_plate2_TTGW50        NG        lud_Nainaghar   lud_central         49.0\n 126 │ GW_Armando_plate2_TTGW51        GW_Armando_plate2_TTGW51        NG        lud_Nainaghar   lud_central         49.0\n 127 │ GW_Armando_plate2_TTGW54        GW_Armando_plate2_TTGW54        NG        lud_Nainaghar   lud_central         49.0\n 128 │ GW_Armando_plate2_TTGW56        GW_Armando_plate2_TTGW56        NG        lud_Nainaghar   lud_central         49.0\n 129 │ GW_Armando_plate2_TTGW60        GW_Armando_plate2_TTGW60        SP        lud_Spiti       troch_west          55.0\n 130 │ GW_Armando_plate2_TTGW61        GW_Armando_plate2_TTGW61        SP        lud_Spiti       troch_west          55.0\n 131 │ GW_Armando_plate2_TTGW62        GW_Armando_plate2_TTGW62        SP        lud_Spiti       troch_west          55.0\n 132 │ GW_Armando_plate2_TTGW67        GW_Armando_plate2_TTGW67        SP        lud_Spiti       troch_west          55.0\n 133 │ GW_Armando_plate2_TTGW69        GW_Armando_plate2_TTGW69        SP        lud_Spiti       troch_west          55.0\n 134 │ GW_Armando_plate2_TTGW73        GW_Armando_plate2_TTGW73        SA        lud_Sathrundi   lud_Sath            41.0\n 135 │ GW_Armando_plate2_TTGW75        GW_Armando_plate2_TTGW75        SA        lud_Sathrundi   lud_Sath            41.0\n 136 │ GW_Armando_plate2_TTGW77        GW_Armando_plate2_TTGW77        SA        lud_Sathrundi   lud_Sath            41.0\n 137 │ GW_Armando_plate2_TTGW79        GW_Armando_plate2_TTGW79        SA        lud_Sathrundi   lud_Sath            41.0\n 138 │ GW_Armando_plate2_TTGW80        GW_Armando_plate2_TTGW80        SA        lud_Sathrundi   lud_Sath            41.0\n 139 │ GW_Armando_plate2_TTGW_15_01    GW_Armando_plate2_TTGW_15_01    SR        lud_Sural       lud_central         45.0\n 140 │ GW_Armando_plate2_TTGW_15_02    GW_Armando_plate2_TTGW_15_02    SR        lud_Sural       lud_central         45.0\n 141 │ GW_Armando_plate2_TTGW_15_03    GW_Armando_plate2_TTGW_15_03    SR        lud_Sural       lud_central         45.0\n 142 │ GW_Armando_plate2_TTGW_15_04    GW_Armando_plate2_TTGW_15_04    SR        lud_Sural       lud_central         45.0\n 143 │ GW_Armando_plate2_TTGW_15_06    GW_Armando_plate2_TTGW_15_06    SR        lud_Sural       lud_central         45.0\n 144 │ GW_Armando_plate2_TTGW_15_10    GW_Armando_plate2_TTGW_15_10    SR        lud_Sural       lud_central         45.0\n 145 │ GW_Lane5_AA1                    GW_Lane5_AA1                    AA        vir_S           vir_S               25.0\n 146 │ GW_Lane5_AA10                   GW_Lane5_AA10                   AA        vir_S           vir_S               33.0\n 147 │ GW_Lane5_AA11                   GW_Lane5_AA11                   AA        vir_S           vir_S               34.0\n 148 │ GW_Lane5_AA3                    GW_Lane5_AA3                    AA        vir_S           vir_S               26.0\n 149 │ GW_Lane5_AA4                    GW_Lane5_AA4                    AA        vir_S           vir_S               27.0\n 150 │ GW_Lane5_AA5                    GW_Lane5_AA5                    AA        vir_S           vir_S               28.0\n 151 │ GW_Lane5_AA6                    GW_Lane5_AA6                    AA        vir_S           vir_S               29.0\n 152 │ GW_Lane5_AA7                    GW_Lane5_AA7                    AA        vir_S           vir_S               30.0\n 153 │ GW_Lane5_AA8                    GW_Lane5_AA8                    AA        vir_S           vir_S               31.0\n 154 │ GW_Lane5_AA9                    GW_Lane5_AA9                    AA        vir_S           vir_S               32.0\n 155 │ GW_Lane5_AB1                    GW_Lane5_AB1                    AB_rep    vir_rep         vir_rep             20.0\n 156 │ GW_Lane5_AB2                    GW_Lane5_AB2                    AB        vir             vir                 21.0\n 157 │ GW_Lane5_AN1                    GW_Lane5_AN1                    AN        plumb           plumb               80.0\n 158 │ GW_Lane5_AN2                    GW_Lane5_AN2                    AN        plumb           plumb               81.0\n 159 │ GW_Lane5_BK2                    GW_Lane5_BK2                    BK        plumb           plumb               78.0\n 160 │ GW_Lane5_BK3                    GW_Lane5_BK3                    BK        plumb           plumb               79.0\n 161 │ GW_Lane5_DA2                    GW_Lane5_DA2                    XN        obs             obs                 73.0\n 162 │ GW_Lane5_DA3                    GW_Lane5_DA3                    XN        obs             obs                 74.0\n 163 │ GW_Lane5_DA4                    GW_Lane5_DA4                    XN        obs             obs                 75.0\n 164 │ GW_Lane5_DA6                    GW_Lane5_DA6                    XN        obs             low_reads           76.0\n 165 │ GW_Lane5_DA7                    GW_Lane5_DA7                    XN        obs             obs                 77.0\n 166 │ GW_Lane5_EM1                    GW_Lane5_EM1                    EM        troch_EM        troch_EM            72.0\n 167 │ GW_Lane5_IL1                    GW_Lane5_IL1                    IL        plumb           plumb               82.0\n 168 │ GW_Lane5_IL2                    GW_Lane5_IL2                    IL_rep    plumb_rep       plumb_rep           85.0\n 169 │ GW_Lane5_IL4                    GW_Lane5_IL4                    IL        plumb           plumb               83.0\n 170 │ GW_Lane5_KS1                    GW_Lane5_KS1                    OV        lud_KS          lud_KS              40.0\n 171 │ GW_Lane5_KS2                    GW_Lane5_KS2                    OV        lud_KS          lud_KS              40.0\n 172 │ GW_Lane5_LN1                    GW_Lane5_LN1                    LN        troch_LN        troch_LN            57.0\n 173 │ GW_Lane5_LN10                   GW_Lane5_LN10                   LN        troch_LN        troch_LN            64.0\n 174 │ GW_Lane5_LN11                   GW_Lane5_LN11                   LN        troch_LN        troch_LN            65.0\n 175 │ GW_Lane5_LN12                   GW_Lane5_LN12                   LN        troch_LN        troch_LN            66.0\n 176 │ GW_Lane5_LN14                   GW_Lane5_LN14                   LN        troch_LN        troch_LN            67.0\n 177 │ GW_Lane5_LN16                   GW_Lane5_LN16                   LN        troch_LN        troch_LN            68.0\n 178 │ GW_Lane5_LN18                   GW_Lane5_LN18                   LN        troch_LN        troch_LN            69.0\n 179 │ GW_Lane5_LN19                   GW_Lane5_LN19                   LN        troch_LN        troch_LN            70.0\n 180 │ GW_Lane5_LN2                    GW_Lane5_LN2                    LN_rep    troch_LN_rep    troch_LN_rep        58.0\n 181 │ GW_Lane5_LN20                   GW_Lane5_LN20                   LN        troch_LN        troch_LN            71.0\n 182 │ GW_Lane5_LN3                    GW_Lane5_LN3                    LN        troch_LN        troch_LN            59.0\n 183 │ GW_Lane5_LN4                    GW_Lane5_LN4                    LN        troch_LN        troch_LN            60.0\n 184 │ GW_Lane5_LN6                    GW_Lane5_LN6                    LN        troch_LN        troch_LN            61.0\n 185 │ GW_Lane5_LN7                    GW_Lane5_LN7                    LN        troch_LN        troch_LN            62.0\n 186 │ GW_Lane5_LN8                    GW_Lane5_LN8                    LN        troch_LN        troch_LN            63.0\n 187 │ GW_Lane5_MN1                    GW_Lane5_MN1                    MN        troch_MN        troch_west          51.0\n 188 │ GW_Lane5_MN12                   GW_Lane5_MN12                   MN        troch_MN        troch_west          56.0\n 189 │ GW_Lane5_MN3                    GW_Lane5_MN3                    MN        troch_MN        troch_west          52.0\n 190 │ GW_Lane5_MN5                    GW_Lane5_MN5                    MN        troch_MN        troch_west          53.0\n 191 │ GW_Lane5_MN8                    GW_Lane5_MN8                    MN        troch_MN        troch_west          54.0\n 192 │ GW_Lane5_MN9                    GW_Lane5_MN9                    MN        troch_MN        troch_west          55.0\n 193 │ GW_Lane5_NA1                    GW_Lane5_NA1                    NR        lud_PK          lud_PK              39.2\n 194 │ GW_Lane5_NA3-3ul                GW_Lane5_NA3-3ul                NR        lud_PK          lud_PK              39.2\n 195 │ GW_Lane5_PT11                   GW_Lane5_PT11                   KL        lud_KL          lud_central         42.0\n 196 │ GW_Lane5_PT12                   GW_Lane5_PT12                   KL        lud_KL          lud_central         42.0\n 197 │ GW_Lane5_PT2                    GW_Lane5_PT2                    ML        lud_ML          lud_ML              51.0\n 198 │ GW_Lane5_PT3                    GW_Lane5_PT3                    PA        lud_PA          lud_central         46.0\n 199 │ GW_Lane5_PT4                    GW_Lane5_PT4                    PA        lud_PA          lud_central         46.0\n 200 │ GW_Lane5_PT6                    GW_Lane5_PT6                    KL        lud_KL          lud_central         42.0\n 201 │ GW_Lane5_SH1                    GW_Lane5_SH1                    SH        lud_PK          lud_PK              39.1\n 202 │ GW_Lane5_SH2                    GW_Lane5_SH2                    SH        lud_PK          lud_PK              39.1\n 203 │ GW_Lane5_SH4                    GW_Lane5_SH4                    SH        lud_PK          lud_PK              39.1\n 204 │ GW_Lane5_SH5                    GW_Lane5_SH5                    SH        lud_PK          lud_PK              39.1\n 205 │ GW_Lane5_SL1                    GW_Lane5_SL1                    SL        plumb           plumb              150.0\n 206 │ GW_Lane5_SL2                    GW_Lane5_SL2                    SL        plumb           plumb              151.0\n 207 │ GW_Lane5_ST1                    GW_Lane5_ST1                    ST        plumb           plumb              142.0\n 208 │ GW_Lane5_ST12                   GW_Lane5_ST12                   ST        plumb           plumb              144.0\n 209 │ GW_Lane5_ST3                    GW_Lane5_ST3                    ST        plumb           plumb              143.0\n 210 │ GW_Lane5_STvi1                  GW_Lane5_STvi1                  ST_vi     vir             vir                 22.0\n 211 │ GW_Lane5_STvi2                  GW_Lane5_STvi2                  ST_vi     vir             vir                 23.0\n 212 │ GW_Lane5_STvi3                  GW_Lane5_STvi3                  ST_vi     vir             vir                 24.0\n 213 │ GW_Lane5_TA1                    GW_Lane5_TA1                    TA        plumb           plumb               86.0\n 214 │ GW_Lane5_TL1                    GW_Lane5_TL1                    TL        vir             vir                  9.0\n 215 │ GW_Lane5_TL10                   GW_Lane5_TL10                   TL        vir             vir                 17.0\n 216 │ GW_Lane5_TL11                   GW_Lane5_TL11                   TL        vir             vir                 18.0\n 217 │ GW_Lane5_TL12                   GW_Lane5_TL12                   TL        vir             vir                 19.0\n 218 │ GW_Lane5_TL2                    GW_Lane5_TL2                    TL        vir             vir                 10.0\n 219 │ GW_Lane5_TL3                    GW_Lane5_TL3                    TL_rep    vir_rep         vir_rep             11.0\n 220 │ GW_Lane5_TL4                    GW_Lane5_TL4                    TL        vir             vir                 12.0\n 221 │ GW_Lane5_TL5                    GW_Lane5_TL5                    TL        vir             vir                 13.0\n 222 │ GW_Lane5_TL7                    GW_Lane5_TL7                    TL        vir             vir                 14.0\n 223 │ GW_Lane5_TL8                    GW_Lane5_TL8                    TL        vir             vir                 15.0\n 224 │ GW_Lane5_TL9                    GW_Lane5_TL9                    TL        vir             vir                 16.0\n 225 │ GW_Lane5_TU1                    GW_Lane5_TU1                    TU        nit             nit                 35.0\n 226 │ GW_Lane5_TU2                    GW_Lane5_TU2                    TU        nit             nit                 36.0\n 227 │ GW_Lane5_UY1                    GW_Lane5_UY1                    UY_rep    plumb_rep       plumb_rep           93.0\n 228 │ GW_Lane5_UY2                    GW_Lane5_UY2                    UY        plumb           plumb               88.0\n 229 │ GW_Lane5_UY3                    GW_Lane5_UY3                    UY        plumb           plumb               89.0\n 230 │ GW_Lane5_UY4                    GW_Lane5_UY4                    UY        plumb           plumb               90.0\n 231 │ GW_Lane5_UY5                    GW_Lane5_UY5                    UY        plumb           plumb               91.0\n 232 │ GW_Lane5_UY6                    GW_Lane5_UY6                    UY        plumb           plumb               92.0\n 233 │ GW_Lane5_YK1                    GW_Lane5_YK1                    YK        vir             vir                  1.0\n 234 │ GW_Lane5_YK11                   GW_Lane5_YK11                   YK        vir             vir                  8.0\n 235 │ GW_Lane5_YK3                    GW_Lane5_YK3                    YK        vir             vir                  2.0\n 236 │ GW_Lane5_YK4                    GW_Lane5_YK4                    YK        vir             vir                  3.0\n 237 │ GW_Lane5_YK5                    GW_Lane5_YK5                    YK        vir             vir                  4.0\n 238 │ GW_Lane5_YK6                    GW_Lane5_YK6                    YK        vir             vir                  5.0\n 239 │ GW_Lane5_YK7                    GW_Lane5_YK7                    YK        vir             vir                  6.0\n 240 │ GW_Lane5_YK9                    GW_Lane5_YK9                    YK        vir             vir                  7.0\n 241 │ GW_Liz_GBS_Liz10045             GW_Liz_GBS_Liz10045             ML        lud             lud_ML              51.01\n 242 │ GW_Liz_GBS_Liz10094             GW_Liz_GBS_Liz10094             ML        lud             lud_ML              51.02\n 243 │ GW_Liz_GBS_Liz5101              GW_Liz_GBS_Liz5101              ML        lud             lud_ML              51.03\n 244 │ GW_Liz_GBS_Liz5101_R            GW_Liz_GBS_Liz5101_R            ML_rep    lud_rep         lud_ML_rep          51.04\n 245 │ GW_Liz_GBS_Liz5118              GW_Liz_GBS_Liz5118              ML        lud             lud_ML              51.05\n 246 │ GW_Liz_GBS_Liz5139              GW_Liz_GBS_Liz5139              ML        lud             lud_ML              51.06\n 247 │ GW_Liz_GBS_Liz5142              GW_Liz_GBS_Liz5142              ML        lud             lud_ML              51.07\n 248 │ GW_Liz_GBS_Liz5144              GW_Liz_GBS_Liz5144              ML        lud             lud_ML              51.08\n 249 │ GW_Liz_GBS_Liz5150              GW_Liz_GBS_Liz5150              ML        lud             lud_ML              51.09\n 250 │ GW_Liz_GBS_Liz5159              GW_Liz_GBS_Liz5159              ML        lud_chick       lud_ML              51.1\n 251 │ GW_Liz_GBS_Liz5162              GW_Liz_GBS_Liz5162              ML        lud_chick       lud_ML              51.11\n 252 │ GW_Liz_GBS_Liz5163              GW_Liz_GBS_Liz5163              ML        lud_chick       lud_ML              51.12\n 253 │ GW_Liz_GBS_Liz5164              GW_Liz_GBS_Liz5164              ML        lud_chick       lud_ML              51.13\n 254 │ GW_Liz_GBS_Liz5165              GW_Liz_GBS_Liz5165              ML        lud             lud_ML              51.14\n 255 │ GW_Liz_GBS_Liz5167              GW_Liz_GBS_Liz5167              ML        lud_chick       lud_ML              51.15\n 256 │ GW_Liz_GBS_Liz5168              GW_Liz_GBS_Liz5168              ML        lud_chick       lud_ML              51.16\n 257 │ GW_Liz_GBS_Liz5169              GW_Liz_GBS_Liz5169              ML        lud_chick       lud_ML              51.17\n 258 │ GW_Liz_GBS_Liz5171              GW_Liz_GBS_Liz5171              ML        lud             lud_ML              51.18\n 259 │ GW_Liz_GBS_Liz5172              GW_Liz_GBS_Liz5172              ML        lud_chick       lud_ML              51.19\n 260 │ GW_Liz_GBS_Liz5173              GW_Liz_GBS_Liz5173              ML        lud_chick       lud_ML              51.2\n 261 │ GW_Liz_GBS_Liz5174              GW_Liz_GBS_Liz5174              ML        lud             lud_ML              51.21\n 262 │ GW_Liz_GBS_Liz5175              GW_Liz_GBS_Liz5175              ML        lud             lud_ML              51.22\n 263 │ GW_Liz_GBS_Liz5176              GW_Liz_GBS_Liz5176              ML        lud             lud_ML              51.23\n 264 │ GW_Liz_GBS_Liz5177              GW_Liz_GBS_Liz5177              ML        lud_chick       lud_ML              51.24\n 265 │ GW_Liz_GBS_Liz5178              GW_Liz_GBS_Liz5178              ML        lud_chick       lud_ML              51.25\n 266 │ GW_Liz_GBS_Liz5179              GW_Liz_GBS_Liz5179              ML        lud_chick       lud_ML              51.26\n 267 │ GW_Liz_GBS_Liz5180              GW_Liz_GBS_Liz5180              ML        lud             lud_ML              51.27\n 268 │ GW_Liz_GBS_Liz5182              GW_Liz_GBS_Liz5182              ML        lud_chick       lud_ML              51.28\n 269 │ GW_Liz_GBS_Liz5184              GW_Liz_GBS_Liz5184              ML        lud_chick       lud_ML              51.29\n 270 │ GW_Liz_GBS_Liz5185              GW_Liz_GBS_Liz5185              ML        lud             lud_ML              51.3\n 271 │ GW_Liz_GBS_Liz5186              GW_Liz_GBS_Liz5186              ML        lud_chick       lud_ML              51.31\n 272 │ GW_Liz_GBS_Liz5187              GW_Liz_GBS_Liz5187              ML        lud_chick       lud_ML              51.32\n 273 │ GW_Liz_GBS_Liz5188              GW_Liz_GBS_Liz5188              ML        lud             lud_ML              51.33\n 274 │ GW_Liz_GBS_Liz5189              GW_Liz_GBS_Liz5189              ML        lud_chick       lud_ML              51.34\n 275 │ GW_Liz_GBS_Liz5190              GW_Liz_GBS_Liz5190              ML        lud_chick       lud_ML              51.35\n 276 │ GW_Liz_GBS_Liz5191              GW_Liz_GBS_Liz5191              ML        lud_chick       lud_ML              51.36\n 277 │ GW_Liz_GBS_Liz5192              GW_Liz_GBS_Liz5192              ML        lud_chick       lud_ML              51.37\n 278 │ GW_Liz_GBS_Liz5193              GW_Liz_GBS_Liz5193              ML        lud_chick       lud_ML              51.38\n 279 │ GW_Liz_GBS_Liz5194              GW_Liz_GBS_Liz5194              ML        lud_chick       lud_ML              51.39\n 280 │ GW_Liz_GBS_Liz5195              GW_Liz_GBS_Liz5195              ML        lud             lud_ML              51.4\n 281 │ GW_Liz_GBS_Liz5197              GW_Liz_GBS_Liz5197              ML        lud             lud_ML              51.41\n 282 │ GW_Liz_GBS_Liz5199              GW_Liz_GBS_Liz5199              ML        lud_chick       lud_ML              51.42\n 283 │ GW_Liz_GBS_Liz6002              GW_Liz_GBS_Liz6002              ML        lud             lud_ML              51.43\n 284 │ GW_Liz_GBS_Liz6006              GW_Liz_GBS_Liz6006              ML        lud             lud_ML              51.44\n 285 │ GW_Liz_GBS_Liz6008              GW_Liz_GBS_Liz6008              ML        lud             lud_ML              51.45\n 286 │ GW_Liz_GBS_Liz6009              GW_Liz_GBS_Liz6009              ML        lud             lud_ML              51.46\n 287 │ GW_Liz_GBS_Liz6010              GW_Liz_GBS_Liz6010              ML        lud             lud_ML              51.47\n 288 │ GW_Liz_GBS_Liz6012              GW_Liz_GBS_Liz6012              ML        lud             lud_ML              51.48\n 289 │ GW_Liz_GBS_Liz6014              GW_Liz_GBS_Liz6014              ML        lud             lud_ML              51.49\n 290 │ GW_Liz_GBS_Liz6055              GW_Liz_GBS_Liz6055              ML        lud             lud_ML              51.5\n 291 │ GW_Liz_GBS_Liz6057              GW_Liz_GBS_Liz6057              ML        lud             lud_ML              51.51\n 292 │ GW_Liz_GBS_Liz6060              GW_Liz_GBS_Liz6060              ML        lud             lud_ML              51.52\n 293 │ GW_Liz_GBS_Liz6062              GW_Liz_GBS_Liz6062              ML        lud             lud_ML              51.53\n 294 │ GW_Liz_GBS_Liz6063              GW_Liz_GBS_Liz6063              ML        lud             lud_ML              51.54\n 295 │ GW_Liz_GBS_Liz6066              GW_Liz_GBS_Liz6066              ML        lud             lud_ML              51.55\n 296 │ GW_Liz_GBS_Liz6072              GW_Liz_GBS_Liz6072              ML        lud             lud_ML              51.56\n 297 │ GW_Liz_GBS_Liz6079              GW_Liz_GBS_Liz6079              ML        lud             lud_ML              51.57\n 298 │ GW_Liz_GBS_Liz6203              GW_Liz_GBS_Liz6203              ML        lud_chick       lud_ML              51.58\n 299 │ GW_Liz_GBS_Liz6204              GW_Liz_GBS_Liz6204              ML        lud_chick       lud_ML              51.59\n 300 │ GW_Liz_GBS_Liz6461              GW_Liz_GBS_Liz6461              ML        lud             lud_ML              51.6\n 301 │ GW_Liz_GBS_Liz6472              GW_Liz_GBS_Liz6472              ML        lud             lud_ML              51.61\n 302 │ GW_Liz_GBS_Liz6478              GW_Liz_GBS_Liz6478              ML        lud             lud_ML              51.62\n 303 │ GW_Liz_GBS_Liz6766              GW_Liz_GBS_Liz6766              ML        lud             lud_ML              51.63\n 304 │ GW_Liz_GBS_Liz6776              GW_Liz_GBS_Liz6776              ML        lud             lud_ML              51.64\n 305 │ GW_Liz_GBS_Liz6794              GW_Liz_GBS_Liz6794              ML        lud             lud_ML              51.65\n 306 │ GW_Liz_GBS_P_fusc               GW_Liz_GBS_P_fusc               fusc      fusc            fusc               201.0\n 307 │ GW_Liz_GBS_P_h_man              GW_Liz_GBS_P_h_man              hmand     hmand           hmand              202.0\n 308 │ GW_Liz_GBS_P_humei              GW_Liz_GBS_P_humei              hume      hume            hume               203.0\n 309 │ GW_Liz_GBS_P_inor               GW_Liz_GBS_P_inor               inor      inor            inor               204.0\n 310 │ GW_Liz_GBS_S_burk               GW_Liz_GBS_S_burk               burk      burk            burk               205.0\n\nGOOD NEWS: names of individuals in metadata file and genotype ind file match perfectly.\n\n\n\n\nPolish a few individual names (to match those in other metadata object above, and make more readable graphs):\n\nind_with_metadata_chr3.ind = correctNames(ind_with_metadata_chr3.ind)\n\nind_with_metadata_chr3.ID = correctNames(ind_with_metadata_chr3.ID)\n\n310-element Vector{String}:\n \"GW_Armando_plate1_AB1\"\n \"GW_Armando_plate1_JF07G02\"\n \"GW_Armando_plate1_JF07G03\"\n \"GW_Armando_plate1_JF07G04\"\n \"GW_Armando_plate1_JF08G02\"\n \"GW_Armando_plate1_JF09G01\"\n \"GW_Armando_plate1_JF09G02\"\n \"GW_Armando_plate1_JF10G03\"\n \"GW_Armando_plate1_JF11G01\"\n \"GW_Armando_plate1_JF12G01\"\n \"GW_Armando_plate1_JF12G02\"\n \"GW_Armando_plate1_JF12G04\"\n \"GW_Armando_plate1_JF13G01\"\n ⋮\n \"GW_Liz_GBS_Liz6204\"\n \"GW_Liz_GBS_Liz6461\"\n \"GW_Liz_GBS_Liz6472\"\n \"GW_Liz_GBS_Liz6478\"\n \"GW_Liz_GBS_Liz6766\"\n \"GW_Liz_GBS_Liz6776\"\n \"GW_Liz_GBS_Liz6794\"\n \"GW_Liz_GBS_P_fusc\"\n \"GW_Liz_GBS_P_h_man\"\n \"GW_Liz_GBS_P_humei\"\n \"GW_Liz_GBS_P_inor\"\n \"GW_Liz_GBS_S_burk\"\n\n\n\n\nFilter to just the individuals also included in the analysis of LHBRs above\n\nselection = map(in(ind_with_metadata_included.ind), ind_with_metadata_chr3.ind)\n\nind_with_metadata_chr3_included = ind_with_metadata_chr3[selection, :]\n\n# select genotypes of just the included individuals, and ignore first column\ngeno_chr3_included = geno_chr3[selection, 2:end]\n\n#\nprintln(ind_with_metadata_included.gw3_cluster)\n\n[\"virLud\", \"plumb\", \"plumb\", \"plumb\", \"plumb\", \"plumb\", \"plumbHet\", \"plumb\", \"plumb\", \"plumbHet\", \"plumb\", \"virLud\", \"plumb\", \"plumb\", \"virLud\", \"plumb\", \"plumb\", \"plumb\", \"plumb\", \"plumb\", \"plumb\", \"plumb\", \"plumb\", \"plumb\", \"plumb\", \"vir_plumb\", \"plumb\", \"plumb\", \"plumb\", \"plumb\", \"plumb\", \"plumb\", \"virLud\", \"trochObs\", \"trochObs\", \"virLud\", \"virLud_trochObs\", \"virLud_trochObs\", \"virLud_trochObs\", \"virLud_trochObs\", \"virLud\", \"virLud_trochObs\", \"virLud_trochObs\", \"virLud_trochObs\", \"virLud_trochObs\", \"virLud_trochObs\", \"virLud_trochObs\", \"trochObs\", \"virLud\", \"virLudHet\", \"virLud_trochObs\", \"trochObs\", \"trochObs\", \"trochObs\", \"trochObs\", \"trochObs\", \"trochObs\", \"trochObs\", \"trochObs\", \"virLud_trochObs\", \"virLud_trochObs\", \"virLud\", \"virLud_trochObs\", \"plumb\", \"virLud\", \"virLudHet\", \"virLud\", \"plumb\", \"plumb\", \"plumb\", \"plumbHet\", \"plumb\", \"plumb\", \"plumb\", \"plumb\", \"vir_plumb\", \"plumb\", \"plumb\", \"virLud\", \"plumb\", \"plumb\", \"plumbHet\", \"plumb\", \"plumbHet\", \"plumbHet\", \"plumb\", \"virLud\", \"plumbHet\", \"plumb\", \"plumb\", \"plumb\", \"vir_plumb\", \"plumb\", \"plumb\", \"trochObs\", \"plumb\", \"trochObs\", \"trochObs\", \"virLudHet\", \"virLud_trochObs\", \"virLudHet\", \"virLud_trochObs\", \"virLud\", \"virLud\", \"virLud\", \"virLudHet\", \"virLud\", \"virLudHet\", \"virLudHet\", \"virLud_trochObs\", \"virLud\", \"virLud\", \"trochObsHet\", \"trochObs\", \"trochObs\", \"trochObs\", \"trochObs\", \"trochObsHet\", \"trochObs\", \"trochObs\", \"trochObs\", \"trochObs\", \"virLud\", \"virLud\", \"virLud\", \"virLud\", \"virLud_trochObs\", \"virLud\", \"virLud\", \"virLud\", \"virLud\", \"virLud\", \"virLud\", \"virLud\", \"virLud\", \"virLud\", \"virLud\", \"plumb\", \"plumb\", \"plumb\", \"plumb\", \"trochObs\", \"trochObs\", \"trochObs\", \"trochObs\", \"trochObs\", \"plumb\", \"plumb\", \"virLud\", \"virLud\", \"trochObs\", \"trochObs\", \"trochObs\", \"trochObs\", \"trochObs\", \"trochObs\", \"trochObs\", \"trochObs\", \"trochObs\", \"trochObs\", \"trochObs\", \"trochObs\", \"trochObs\", \"trochObs\", \"trochObs\", \"trochObs\", \"virLud_trochObs\", \"trochObs\", \"trochObs\", \"virLud\", \"virLud\", \"virLud_trochObs\", \"virLud\", \"trochObs\", \"virLud\", \"virLud\", \"virLud\", \"virLud\", \"virLud\", \"virLud\", \"virLud\", \"plumb\", \"plumb\", \"plumb\", \"plumb\", \"plumb\", \"virLud\", \"virLud\", \"virLud\", \"plumb\", \"virLud\", \"virLud\", \"virLud\", \"virLud\", \"virLud\", \"virLud\", \"virLud\", \"virLud\", \"virLud\", \"virLud\", \"nit\", \"nit\", \"plumb\", \"plumb\", \"plumb\", \"plumb\", \"plumb\", \"virLud\", \"virLud\", \"virLud\", \"virLud\", \"virLud\", \"virLud\", \"virLud\", \"trochObs\", \"trochObs\", \"trochObs\", \"trochObs\", \"virLud_trochObs\", \"virLud_trochObs\", \"trochObs\", \"virLud_trochObs\", \"trochObs\", \"virLud_trochObs\", \"virLud_trochObs\", \"virLud_trochObs\", \"trochObs\", \"virLud_trochObs\", \"trochObs\", \"virLud_trochObs\", \"trochObs\", \"trochObs\", \"virLud_trochObs\", \"trochObsHet\", \"trochObs\", \"virLud_trochObs\", \"virLud_trochObs\", \"trochObs\", \"trochObs\", \"trochObs\", \"trochObs\", \"virLud_trochObs\", \"virLud_trochObs\", \"virLud_trochObs\", \"trochObs\", \"virLud_trochObs\", \"trochObs\", \"trochObs\", \"trochObs\", \"virLud_trochObs\", \"trochObs\", \"trochObs\", \"trochObs\", \"trochObs\", \"trochObs\", \"trochObs\", \"trochObs\"]\n\n\n\n\nLook up the chr 3 individual membership in homozygous clusters, and calculate pi and Dxy\n\nindClusterMembership_gw3 = ind_with_metadata_included.gw3_cluster\n\nclusterNames_gw3 = [\"virLud\",\n                    \"nit\",\n                    \"trochObs\",\n                    \"plumb\"]\n\n# get boundaries of gw3 LHBR:\n\nchr = \"gw3\"\npositionMin_chr3_LHBR, positionMax_chr3_LHBR, regionText, \n    windowedIndHetStanRegion, meanAcrossRegionIndHetStan,\n    genos_highViSHetRegion, pos_highViSHetRegion, regionInfo = \n                        getWindowedIndHetStanRegion(genosOnly_included, \n                                                    pos_SNP_filtered, \n                                                    highViSHetRegions, chr;\n                                                    windowSize = 500)\n\n# select the loci within the gw3 LHBR:\nselection = (positionMin_chr3_LHBR .&lt;= pos_chr3.position .&lt;= positionMax_chr3_LHBR) \n\ngeno_chr3_included_LHBR = geno_chr3_included[:, selection]\n\npos_chr3_LHBR = pos_chr3[selection, :]\n\n# Calculate allele freqs and sample sizes\nfreqs, sampleSizes = getFreqsAndSampleSizes(geno_chr3_included_LHBR, indClusterMembership_gw3, clusterNames_gw3)\n\n# Calculate per-site pi (within-group nucleotide distance)\nsitePi = getSitePi(freqs, sampleSizes)\n\n# calculate pairwise Dxy per site, using data in \"freqs\" and groups in \"groups\"\nDxy, pairwiseDxyClusterNames = getDxy(freqs, clusterNames_gw3)\n\nFst, FstNumerator, FstDenominator, pairwiseFstClusterNames = getFst(freqs, sampleSizes, clusterNames_gw3; among=false)\n\n# Now get averages of pi and Dxy for chr 3 LHBR:\nregionPiTable = DataFrame(cluster = clusterNames_gw3, pi = getRegionPi(sitePi))\n#= 4×2 DataFrame\n Row │ cluster   pi          \n     │ String    Float64     \n─────┼───────────────────────\n   1 │ virLud    0.0012486\n   2 │ nit       0.000697639\n   3 │ trochObs  0.00136251\n   4 │ plumb     0.00111764 =#\n\n# average pi (for chr 3 LHBR) among three major groups:\n(0.0012486 + 0.00136251 + 0.00111764) / 3\n# 0.0012429166\n\nregionDxyTable = DataFrame(cluster_pair = pairwiseDxyClusterNames, Dxy = getRegionDxy(Dxy))\n#= 6×2 DataFrame\n Row │ cluster_pair     Dxy        \n     │ String           Float64    \n─────┼─────────────────────────────\n   1 │ virLud_nit       0.0026694\n   2 │ virLud_trochObs  0.00354486\n   3 │ virLud_plumb     0.00398499\n   4 │ nit_trochObs     0.00335481\n   5 │ nit_plumb        0.00400019\n   6 │ trochObs_plumb   0.00328016 =#\n\n# average Dxy (for chr 3 LHBR) among three major groups:\n(0.00354486 + 0.00398499 + 0.00328016) / 3\n# 0.0036033366666666663\n\n# Drawing phylogeny (in Illustrator) based on above, between three major groups.\n# Lowest Dxy is between trochObs and plumb (0.00328016).\n# Calculation of deepest split, an average of virLud diff with (trochObs, plumb):\n(0.00354486 + 0.00398499) / 2\n# 0.003764925\n\nMore than 1 region on that scaffold. Using just the longest one.\n\n\n2×3 DataFrame\n\n\n\nRow\nregionChrom\nregionStart\nregionEnd\n\n\n\nString\nInt64\nInt64\n\n\n\n\n1\ngw3\n101192949\n103495514\n\n\n2\ngw3\n104554714\n108279595\n\n\n\n\n\n\n0.0037649249999999997\n\n\n\n\nCalculate pi and Dxy outside of the chr 3 LHBR (grouped by the LHBR homozygous groups)\n\n# select the loci outside of the gw3 LHBR:\nselection = .!(positionMin_chr3_LHBR .&lt;= pos_chr3.position .&lt;= positionMax_chr3_LHBR) \n\ngeno_chr3_included_nonLHBR = geno_chr3_included[:, selection]\n\npos_chr3_nonLHBR = pos_chr3[selection, :]\n\n# Calculate allele freqs and sample sizes\nfreqs, sampleSizes = getFreqsAndSampleSizes(geno_chr3_included_nonLHBR, indClusterMembership_gw3, clusterNames_gw3)\n\n# Calculate per-site pi (within-group nucleotide distance)\nsitePi = getSitePi(freqs, sampleSizes)\n\n# calculate pairwise Dxy per site, using data in \"freqs\" and groups in \"groups\"\nDxy, pairwiseDxyClusterNames = getDxy(freqs, clusterNames_gw3)\n\nFst, FstNumerator, FstDenominator, pairwiseFstClusterNames = getFst(freqs, sampleSizes, clusterNames_gw3; among=false)\n\n# Now get averages of pi and Dxy for whole region:\nregionPiTable = DataFrame(cluster = clusterNames_gw3, pi = getRegionPi(sitePi))\n#= 4×2 DataFrame\n Row │ cluster   pi         \n     │ String    Float64    \n─────┼──────────────────────\n   1 │ virLud    0.00456714\n   2 │ nit       0.00161186\n   3 │ trochObs  0.00568622\n   4 │ plumb     0.00554501 =#\n\n# average pi (for chr 3 NOT in LHBR) among three major groups:\n(0.00456714 + 0.00568622 + 0.00554501) / 3\n# 0.005266123\n\n#ratio of average pi outside to average pi within chr 3 LHBR:\n0.005266123 / 0.0012429166\n# 4.236907769998406\n\n# percent lower that average pi is within compared to outside LHBR:\n100 * (4.2369078 - 1) / 4.2369078\n# 76.39788149272448\n\n#ratio of pi outside to within LHBR:\n0.00456714 / 0.0012486\n# 3.6578087457952906\n\n0.00568622 / 0.00136251\n# 4.173341847032315\n\n0.00554501 / 0.00111764\n# 4.961356071722558\n\n((0.00456714 / 0.0012486) + (0.00568622 / 0.00136251) + (0.00554501 / 0.00111764)) / 3\n# 4.264168888183388\n\n\nregionDxyTable = DataFrame(cluster_pair = pairwiseDxyClusterNames, Dxy = getRegionDxy(Dxy))\n#= 6×2 DataFrame\n Row │ cluster_pair     Dxy        \n     │ String           Float64    \n─────┼─────────────────────────────\n   1 │ virLud_nit       0.00439336\n   2 │ virLud_trochObs  0.0059857\n   3 │ virLud_plumb     0.00660034\n   4 │ nit_trochObs     0.00548855\n   5 │ nit_plumb        0.00608182\n   6 │ trochObs_plumb   0.00652593 =#\n\n# average Dxy (for OUTSIDE of chr 3 LHBR) among three major groups:\n(0.0059857 + 0.00660034 + 0.00652593) / 3\n# 0.006370656666666666\n\n#ratio of average Dxy outside to average Dxy within LHBR among 3 major groups:\n0.006370656666666666 / 0.0036033366666666663\n# 1.76798818872508\n\n# percent lower that average Dxy is within compared to outside LHBR:\n100 * (1.76798818872508 - 1) / 1.76798818872508\n# 43.43853616346196\n\n# Drawing phylogeny (in Illustrator) based on above, between three major groups.\n# Lowest Dxy is between virLud and trochObs (0.0059857).\n# Calculation of deepest split, an average of plumb diff with (virLud, trochObs):\n(0.00660034 + 0.00652593) / 2\n# 0.006563135\n\n((0.00354486 / 0.0059857) + (0.00328016 / 0.00652593) + (0.00398499 / 0.00660034)) / 3\n# 0.5662038652462132\n\n0.5662038652462132\n\n\nReally neat results above. More diversity at chr 3 LHBR than at 4A.\n\n\nCopying (from the main page) and modifying the bit below to make Supplemental GBI plots\n\nMake list of scaffolds to plot:\n\nscaffolds_to_plot = \"gw\" .* string.(vcat(28:-1:17, 15:-1:1))\npush!(scaffolds_to_plot, \"gw1A\", \"gw4A\")  # add two other scaffolds\n\n29-element Vector{String}:\n \"gw28\"\n \"gw27\"\n \"gw26\"\n \"gw25\"\n \"gw24\"\n \"gw23\"\n \"gw22\"\n \"gw21\"\n \"gw20\"\n \"gw19\"\n \"gw18\"\n \"gw17\"\n \"gw15\"\n ⋮\n \"gw10\"\n \"gw9\"\n \"gw8\"\n \"gw7\"\n \"gw6\"\n \"gw5\"\n \"gw4\"\n \"gw3\"\n \"gw2\"\n \"gw1\"\n \"gw1A\"\n \"gw4A\"\n\n\n\n\nDo other setup:\n\ngroups_to_plot_all = [\"vir\",\"vir_S\",\"nit\", \"lud_PK\", \"lud_KS\", \"lud_central\", \"lud_Sath\", \"lud_ML\",\"troch_west\",\"troch_LN\",\"troch_EM\",\"obs\",\"plumb_BJ\",\"plumb\",\"plumb_vir\"]\ngroup_colors_all = [\"blue\",\"turquoise1\",\"grey\",\"seagreen4\",\"seagreen3\",\"seagreen2\",\"olivedrab3\",\"olivedrab2\",\"olivedrab1\",\"yellow\",\"gold\",\"orange\",\"pink\",\"red\",\"purple\"];\n\ngroups = [\"vir\",\"troch_LN\",\"plumb\"] # for purpose of calculating pairwise Fst and Fst_group (to determine SNPs)   \nplotGroups = groups_to_plot_all \nplotGroupColors = group_colors_all\ngroup1 = \"vir\"   # these groups will determine the color used in the graph\ngroup2 = \"plumb\"\ngroupsToCompare = [\"vir_plumb\", \"vir_troch_LN\", \"troch_LN_plumb\"]     # \"Fst_among\" #\"vir_plumb\" \nmissingFractionAllowed = 0.2  # only show SNPs with less than this fraction of missing data among individuals\n\n# Calculate allele freqs and sample sizes (use column Fst_group)\nfreqs, sampleSizes = getFreqsAndSampleSizes(genosOnly_with_missing, ind_with_metadata_indFiltered.Fst_group, groups)\nprintln(\"Calculated population allele frequencies and sample sizes\")\n\nFst, FstNumerator, FstDenominator, pairwiseNamesFst = getFst(freqs, sampleSizes, groups; among=true)  # set among to FALSE if no among Fst wanted (some things won't work without it) \nprintln(\"Calculated Fst values\")\n\nCalculated population allele frequencies and sample sizes\nCalculated Fst values\n\n\n\n\nLoop through scaffolds and make plots, and adding a line for the LHBRs:\nMaking inactive because plots were already made:\n# for autosomes, Fst &gt; 0.8\nFst_cutoff = 0.8\nfor i in 1:length(scaffolds_to_plot)\n    chr = scaffolds_to_plot[i]\n    regionInfo = chooseChrRegion(pos_SNP_filtered, chr; positionMin=1, positionMax=scaffold_lengths[chr]) # this gets the maximum position for the chromosome\n    # get info for lines for LHBRs\n    highViSHetRegions_thisScaffold = highViSHetRegions[highViSHetRegions.regionChrom .== chr, :]\n\n    plotInfo = plotGenotypeByIndividualWithFst(groupsToCompare, Fst_cutoff, \n        missingFractionAllowed, regionInfo,\n        pos_SNP_filtered, Fst, pairwiseNamesFst, \n        genosOnly_with_missing, ind_with_metadata_indFiltered, freqs, \n        plotGroups, plotGroupColors;\n        indFontSize=4, figureSize=(1200,1600), plotTitle = \"\",\n        highlightRegionStarts = highViSHetRegions_thisScaffold.regionStart,\n        highlightRegionEnds = highViSHetRegions_thisScaffold.regionEnd,\n        highlightRegionColor = \"magenta\")\n\n    println(\"Completed the figure for \", chr, \".\")\n    if true  # set to true to save plot\n        filename = string(\"Figure_\", chr, \"_Fst3groupsGBIallInds_Fst\",Fst_cutoff,\"_fromJulia.png\")\n        save(filename, plotInfo[1], px_per_unit = 2.0)\n        println(\"Saved \", filename)\n    end \nend\n\n\nNow for Z chromosome, with Fst &gt; 0.9\n\nscaffolds_to_plot = [\"gwZ\"]; Fst_cutoff = 0.9\nfor i in 1:length(scaffolds_to_plot)\n    chr = scaffolds_to_plot[i]\n    regionInfo = chooseChrRegion(pos_SNP_filtered, chr; positionMin=1, positionMax=scaffold_lengths[chr]) # this gets the maximum position for the chromosome\n    # get info for lines for LHBRs\n    highViSHetRegions_thisScaffold = highViSHetRegions[highViSHetRegions.regionChrom .== chr, :]\n\n    #= ##### for testing function\n    pos=pos_SNP_filtered\n    genoData=genosOnly_with_missing\n    indMetadata= ind_with_metadata_indFiltered\n    colorAllelesByGroup = true\n    group1 = plotGroups[1]\n    indFontSize=4\n    figureSize=(1200,1600)\n    show_SNP_density = true \n    densityPlotColor = :steelblue1\n    plotTitle = \"\"\n    highlightRegionStarts = highViSHetRegions_thisScaffold.regionStart\n    highlightRegionEnds = highViSHetRegions_thisScaffold.regionEnd\n    ############ =#\n\n    plotInfo = plotGenotypeByIndividualWithFst(groupsToCompare, Fst_cutoff, \n        missingFractionAllowed, regionInfo,\n        pos_SNP_filtered, Fst, pairwiseNamesFst, \n        genosOnly_with_missing, ind_with_metadata_indFiltered, freqs, \n        plotGroups, plotGroupColors;\n        indFontSize=4, figureSize=(1200,1600), plotTitle = \"\",\n        highlightRegionStarts = highViSHetRegions_thisScaffold.regionStart,\n        highlightRegionEnds = highViSHetRegions_thisScaffold.regionEnd,\n        highlightRegionColor = \"magenta\")\n\n    println(\"Completed the figure for \", chr, \".\")\n    if true  # set to true to save plot\n        filename = string(\"Figure_\", chr, \"_Fst3groupsGBIallInds_fromJulia.png\")\n        save(filename, plotInfo[1], px_per_unit = 2.0)\n        println(\"Saved \", filename)\n    end \nend\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\nCompleted the figure for gwZ.\nSaved Figure_gwZ_Fst3groupsGBIallInds_fromJulia.png\n\n\n\n\n\nOLD STUFF BELOW (CAN PROBABLY DELETE, BUT MIGHT BE SOME GOOD BITS TO KEEP)\n\n\nActually new plan: Just do the PCA on all individuals, then show a graph without the heterozygotes. Will do this above.",
    "crumbs": [
      "Home",
      "Greenish Warbler heterozygosity variance analysis"
    ]
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "GreenishWarblerGenomics2025",
    "section": "",
    "text": "This is a Quarto website.\nTo learn more about Quarto websites visit https://quarto.org/docs/websites.",
    "crumbs": [
      "Home"
    ]
  },
  {
    "objectID": "GW_Zchromosome_analysis.html",
    "href": "GW_Zchromosome_analysis.html",
    "title": "Greenish Warbler Z-chromosome analysis",
    "section": "",
    "text": "The scripts, data, and figures shown in this document were used as part of the analysis for the paper listed below, which should be cited as the source of information from this document:\nIrwin, D., S. Bensch, C. Charlebois, G. David, A. Geraldes, S.K. Gupta, B. Harr, P. Holt, J.H. Irwin, V.V. Ivanitskii, I.M. Marova, Y. Niu, S. Seneviratne, A. Singh, Y. Wu, S. Zhang, T.D. Price. 2025. The distribution and dispersal of large haploblocks in a superspecies. Molecular Ecology.\nThis page shows the code used for filtering of SNPs that mapped to the Z chromosome.\nPrior to examining the code on this page, readers should look at GreenishWarblerGenomics2025.qmd (or .html), as this current page depends on the code on that page being run first.",
    "crumbs": [
      "Home",
      "Greenish Warbler Z-chromosome analysis"
    ]
  },
  {
    "objectID": "GW_Zchromosome_analysis.html#load-packages",
    "href": "GW_Zchromosome_analysis.html#load-packages",
    "title": "Greenish Warbler Z-chromosome analysis",
    "section": "Load packages",
    "text": "Load packages\n\nusing JLD2 # for loading saved data\nusing DataFrames # for storing data as type DataFrame\nusing CairoMakie # for plots\nusing CSV # for reading in delimited files\nusing Impute # for imputing missing genotypes\nusing Statistics # for var() function\nusing MultivariateStats # for getting variances from PCA model\n\nLoad my custom package GenomicDiversity:\n\nusing GenomicDiversity",
    "crumbs": [
      "Home",
      "Greenish Warbler Z-chromosome analysis"
    ]
  },
  {
    "objectID": "GW_Zchromosome_analysis.html#choose-working-directory",
    "href": "GW_Zchromosome_analysis.html#choose-working-directory",
    "title": "Greenish Warbler Z-chromosome analysis",
    "section": "Choose working directory",
    "text": "Choose working directory\n\ndataDirectory = \"/Users/darrenirwin/Dropbox/Darren's current work/\"\ncd(dataDirectory)",
    "crumbs": [
      "Home",
      "Greenish Warbler Z-chromosome analysis"
    ]
  },
  {
    "objectID": "GW_Zchromosome_analysis.html#load-the-filtered-dataset",
    "href": "GW_Zchromosome_analysis.html#load-the-filtered-dataset",
    "title": "Greenish Warbler Z-chromosome analysis",
    "section": "Load the filtered dataset",
    "text": "Load the filtered dataset\nThis dataset was produced through filtering in GreenishWarblerGenomics2025.qmd\n\nbaseName = \"GW_genomics_2022_with_new_genome/GW2022_GBS_012NA_files/GW2022_all4plates.genotypes.SNPs_only.whole_genome\"\ntagName = \".Jan2025.\"\nfilename = string(baseName, tagName, \"ind_SNP_ind_filtered.jld2\")\n# load info into a dictionary:\nd = load(filename)\nif baseName != d[\"baseName\"]\n    println(\"WARNING: baseNames don't match between that defined above and in the saved file\")\nend\nif tagName != d[\"tagName\"]\n    println(\"WARNING: tagNames don't match don't match between that defined above and in the saved file\")\nend\ngenosOnly = d[\"genosOnly_ind_SNP_ind_filtered\"]\nind_with_metadata_indFiltered = d[\"ind_with_metadata_indFiltered\"]\npos_SNP_filtered = d[\"pos_SNP_filtered\"]\nrepoDirectory = d[\"repoDirectory\"]\ndataDirectory = d[\"dataDirectory\"]\nscaffold_info = d[\"scaffold_info\"]\nscaffold_lengths = d[\"scaffold_lengths\"]\nfilenameTextMiddle = d[\"filenameTextMiddle\"]\nmissingGenotypeThreshold = d[\"missingGenotypeThreshold\"]\nfilenameTextEnd = d[\"filenameTextEnd\"]\nchromosomes_to_process =d[\"chromosomes_to_process\"]\nprintln(\"Loaded the filtered data.\")\n\nLoaded the filtered data.\n\n\nAlso define correctNames() function as in main script, to correct some names:\n\nfunction correctNames(metadataColumn)\n        metadataColumn_corrected = replace(metadataColumn, \"GW_Armando_plate1_TTGW05_rep2\" =&gt; \"GW_Armando_plate1_TTGW05r2\",\n        \"GW_Lane5_NA3-3ul\" =&gt; \"GW_Lane5_NA3\",\n        \"GW_Armando_plate1_TTGW_15_05\" =&gt; \"GW_Armando_plate1_TTGW-15-05\",\n        \"GW_Armando_plate1_TTGW_15_07\" =&gt; \"GW_Armando_plate1_TTGW-15-07\",\n        \"GW_Armando_plate1_TTGW_15_08\" =&gt; \"GW_Armando_plate1_TTGW-15-08\",\n        \"GW_Armando_plate1_TTGW_15_09\" =&gt; \"GW_Armando_plate1_TTGW-15-09\",\n        \"GW_Armando_plate1_TTGW_15_01\" =&gt; \"GW_Armando_plate1_TTGW-15-01\",\n        \"GW_Armando_plate1_TTGW_15_02\" =&gt; \"GW_Armando_plate1_TTGW-15-02\",   \n        \"GW_Armando_plate1_TTGW_15_03\" =&gt; \"GW_Armando_plate1_TTGW-15-03\",\n        \"GW_Armando_plate1_TTGW_15_04\" =&gt; \"GW_Armando_plate1_TTGW-15-04\",\n        \"GW_Armando_plate1_TTGW_15_06\" =&gt; \"GW_Armando_plate1_TTGW-15-06\",\n        \"GW_Armando_plate1_TTGW_15_10\" =&gt; \"GW_Armando_plate1_TTGW-15-10\",\n        \"GW_Armando_plate2_TTGW_15_01\" =&gt; \"GW_Armando_plate2_TTGW-15-01\",\n        \"GW_Armando_plate2_TTGW_15_02\" =&gt; \"GW_Armando_plate2_TTGW-15-02\",\n        \"GW_Armando_plate2_TTGW_15_03\" =&gt; \"GW_Armando_plate2_TTGW-15-03\",\n        \"GW_Armando_plate2_TTGW_15_04\" =&gt; \"GW_Armando_plate2_TTGW-15-04\",\n        \"GW_Armando_plate2_TTGW_15_06\" =&gt; \"GW_Armando_plate2_TTGW-15-06\",\n        \"GW_Armando_plate2_TTGW_15_10\" =&gt; \"GW_Armando_plate2_TTGW-15-10\") \nend\n\ncorrectNames (generic function with 1 method)",
    "crumbs": [
      "Home",
      "Greenish Warbler Z-chromosome analysis"
    ]
  },
  {
    "objectID": "GW_Zchromosome_analysis.html#save-the-filtered-z-chromosome-genotypes",
    "href": "GW_Zchromosome_analysis.html#save-the-filtered-z-chromosome-genotypes",
    "title": "Greenish Warbler Z-chromosome analysis",
    "section": "Save the filtered Z chromosome genotypes",
    "text": "Save the filtered Z chromosome genotypes\n\ncd(dataDirectory)\nregionText = \"chrgwZ_cleaned\"\nfilename = string(baseName, tagName, regionText, \".notImputed.jld2\")\njldsave(filename; genotypes_gwZ_SNPfiltered, ind_with_metadata_indFiltered = ind_with_metadata_indFiltered_sex, pos_SNP_filtered_region = pos_SNP_filtered_gwZ_SNPfiltered)\nprintln(\"Saved matrix of real Z chromosome genotypes (without imputation).\")\n\nSaved matrix of real Z chromosome genotypes (without imputation).\n\n\nLooks good. Now impute and do the PCA. I did the imputing previously (to do it again, set do_imputing = true below).\n\ngenotypes_gwZ_SNPfiltered_with_missing = Matrix{Union{Missing, Float32}}(genotypes_gwZ_SNPfiltered)\n# change \"-1\" to \"missing\":\ngenotypes_gwZ_SNPfiltered_with_missing[genotypes_gwZ_SNPfiltered_with_missing .== -1] .= missing;\nregionText = \"chrgwZ_cleaned\"\nfilename = string(baseName, tagName, regionText, \".KNNimputedMissing.jld2\")\n# to do the imputing, do this by setting to true:\ncd(dataDirectory)\ndo_imputing = true\nif do_imputing\n    #@time imputed_genos = Impute.svd(genotypes_gwZ_SNPfiltered_with_missing)\n    @time imputed_genos = Impute.knn(genotypes_gwZ_SNPfiltered_with_missing; dims = :rows)\n    # took 46 sec\n    jldsave(filename; imputed_genos, ind_with_metadata_indFiltered = ind_with_metadata_indFiltered_sex, pos_SNP_filtered_region = pos_SNP_filtered_gwZ_SNPfiltered)\n    imputed_genos_chrZcleaned = imputed_genos\n    ind_with_metadata_indFiltered_sex_chrZcleaned = ind_with_metadata_indFiltered_sex\n    pos_SNP_filtered_chZcleaned = pos_SNP_filtered_gwZ_SNPfiltered\n    println(\"Saved matrix of real and imputed Z chromosome genotypes. \\n\")\nelse # load the already saved imputing\n    imputed_genos_chrZcleaned = load(filename, \"imputed_genos\")\n    ind_with_metadata_indFiltered_sex_chrZcleaned = load(filename, \"ind_with_metadata_indFiltered\")\n    pos_SNP_filtered_chZcleaned = load(filename, \"pos_SNP_filtered_region\")\n    println(string(\"Loaded \",filename))\n    println(string(regionText, \": \", size(imputed_genos_chrZcleaned, 2), \" SNPs from \", size(imputed_genos_chrZcleaned, 1), \" individuals\"))\nend\ngroups_to_plot_PCA = [\"vir\",\"vir_S\",\"nit\", \"lud_PK\", \"lud_KS\", \"lud_central\", \"lud_Sath\", \"lud_ML\",\"troch_west\",\"troch_LN\",\"troch_EM\",\"obs\",\"plumb_BJ\",\"plumb\",\"plumb_vir\"]\ngroup_colors_PCA = [\"blue\",\"turquoise1\",\"grey\",\"seagreen4\",\"seagreen3\",\"seagreen2\",\"olivedrab3\",\"olivedrab2\",\"olivedrab1\",\"yellow\",\"gold\",\"orange\",\"pink\",\"red\",\"purple\"]\nplotPCA(imputed_genos_chrZcleaned, ind_with_metadata_indFiltered_sex_chrZcleaned, \n            groups_to_plot_PCA, group_colors_PCA; \n            sampleSet = \"greenish warblers\", regionText=regionText,\n            flip1 = true, flip2 = true,\n            lineOpacity = 0.7, fillOpacity = 0.6,\n            symbolSize = 14, showTitle = true,\n            xLabelText = string(\"Chromosome Z PC1\"), yLabelText = string(\"Chromosome Z PC2\"),\n            showPlot = true)\n\n111.833509 seconds (13.83 M allocations: 1.097 GiB, 0.65% gc time, 6.41% compilation time)\nSaved matrix of real and imputed Z chromosome genotypes. \n\n\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\n\n(model = PCA(indim = 51505, outdim = 3, principalratio = 0.29670843), metadata = 257×16 DataFrame\n Row │ ind                        ID                         location  group   ⋯\n     │ String                     String                     String7   String1 ⋯\n─────┼──────────────────────────────────────────────────────────────────────────\n   1 │ GW_Armando_plate1_AB1      GW_Armando_plate1_AB1      AB        vir     ⋯\n   2 │ GW_Armando_plate1_JF07G02  GW_Armando_plate1_JF07G02  ST        plumb\n   3 │ GW_Armando_plate1_JF07G03  GW_Armando_plate1_JF07G03  ST        plumb\n   4 │ GW_Armando_plate1_JF07G04  GW_Armando_plate1_JF07G04  ST        plumb\n   5 │ GW_Armando_plate1_JF08G02  GW_Armando_plate1_JF08G02  ST        plumb   ⋯\n   6 │ GW_Armando_plate1_JF09G01  GW_Armando_plate1_JF09G01  ST        plumb\n   7 │ GW_Armando_plate1_JF09G02  GW_Armando_plate1_JF09G02  ST        plumb\n   8 │ GW_Armando_plate1_JF10G03  GW_Armando_plate1_JF10G03  ST        plumb_v\n   9 │ GW_Armando_plate1_JF11G01  GW_Armando_plate1_JF11G01  ST        plumb   ⋯\n  10 │ GW_Armando_plate1_JF12G01  GW_Armando_plate1_JF12G01  ST        plumb\n  11 │ GW_Armando_plate1_JF12G02  GW_Armando_plate1_JF12G02  ST        plumb\n  ⋮  │             ⋮                          ⋮                 ⋮          ⋮   ⋱\n 248 │ GW_Liz_GBS_Liz6063         GW_Liz_GBS_Liz6063         ML        lud\n 249 │ GW_Liz_GBS_Liz6066         GW_Liz_GBS_Liz6066         ML        lud     ⋯\n 250 │ GW_Liz_GBS_Liz6072         GW_Liz_GBS_Liz6072         ML        lud\n 251 │ GW_Liz_GBS_Liz6079         GW_Liz_GBS_Liz6079         ML        lud\n 252 │ GW_Liz_GBS_Liz6204         GW_Liz_GBS_Liz6204         ML        lud_chi\n 253 │ GW_Liz_GBS_Liz6461         GW_Liz_GBS_Liz6461         ML        lud     ⋯\n 254 │ GW_Liz_GBS_Liz6472         GW_Liz_GBS_Liz6472         ML        lud\n 255 │ GW_Liz_GBS_Liz6478         GW_Liz_GBS_Liz6478         ML        lud\n 256 │ GW_Liz_GBS_Liz6776         GW_Liz_GBS_Liz6776         ML        lud\n 257 │ GW_Liz_GBS_Liz6794         GW_Liz_GBS_Liz6794         ML        lud     ⋯\n                                                 13 columns and 236 rows omitted, values = Float32[26.496223 -27.16902 … 2.321489 -1.7010832; -16.095974 -11.692419 … 16.604824 19.148003; 11.761233 0.38192526 … 2.8425121 1.6942114], PC1 = Float32[-26.496223, 27.16902, 25.092474, 26.13259, 26.253504, 24.567522, 26.720137, 9.05446, 27.067173, 25.514183  …  -0.20980719, -9.800505, -4.1179075, 1.4791373, -1.2131703, 1.5972759, -19.479637, 1.209659, -2.321489, 1.7010832], PC2 = Float32[16.095974, 11.692419, 11.817501, 11.607012, 10.504194, 11.490505, 10.9916935, 12.995974, 10.84104, 11.301715  …  -19.243162, -7.432335, -14.93073, -18.63713, -20.599936, -19.113932, 7.111907, -21.906206, -16.604824, -19.148003], PCAfig = Scene (768px, 960px):\n  0 Plots\n  1 Child Scene:\n    └ Scene (768px, 960px))\n\n\n\nLooks Great!! Now have a Z chromosome PCA with both males and females, based on only Z-chromosome markers.\n\nGenotype-by-individual plots for Z chromosome\n\ngroups = [\"vir\",\"lud_PK\",\"troch_LN\",\"obs\",\"plumb\"] # for purpose of calculating pairwise Fst and Fst_group (to determine SNPs)    \nplotGroups = [\"vir\",\"vir_S\",\"lud_PK\",\"lud_KS\",\"lud_central\",\"troch_LN\",\"troch_EM\",\"obs\",\"plumb_BJ\",\"plumb\",\"plumb_vir\"]\nplotGroupColors = [\"blue\",\"turquoise1\",\"seagreen4\",\"seagreen3\",\"seagreen2\",\"yellow\",\"gold\",\"orange\", \"pink\",\"red\",\"purple\"]\nnumIndsToPlot = [10, 5, 2, 1, 8, 10, 1, 4, 3, 10, 1] # maximum number of individuals to plot from each group\ngroup1 = \"vir\"   # these groups will determine the color used in the graph\ngroup2 = \"plumb\"\ngroupsToCompare = \"vir_plumb\"  # \"obs_plumb\" #\"troch_LN_obs\"   #\"Fst_among\"  #\"vir_troch_LN\"       #\"vir_plumb\"      #\"troch_LN_plumb\"      #\"vir_troch_LN\"\nFst_cutoff = 0.95\nmissingFractionAllowed = 0.2  # only show SNPs with less than this fraction of missing data among individuals\n\n# Calculate allele freqs and sample sizes (use column Fst_group)\nfreqs, sampleSizes = getFreqsAndSampleSizes(genotypes_gwZ_SNPfiltered_with_missing, ind_with_metadata_indFiltered_sex_chrZcleaned.Fst_group, groups)\nprintln(\"Calculated population allele frequencies and sample sizes\")\n\nFst, FstNumerator, FstDenominator, pairwiseNamesFst = getFst(freqs, sampleSizes, groups; among=true)  # set among to FALSE if no among Fst wanted (some things won't work without it) \nprintln(\"Calculated Fst values\")\n\n# For this Z-chromosome genotype-by-individual plot, include only males (so 2 Z chromosomes) and filter out individuals with lots of missing genotypes\nnumMissings_threshold = 800_000\nselection = (ind_with_metadata_indFiltered_sex_chrZcleaned.numMissings .&lt; numMissings_threshold) .&& (ind_with_metadata_indFiltered_sex_chrZcleaned.sex .== \"M\") \ngenotypes_gwZ_SNPfiltered_with_missing_selected = view(genotypes_gwZ_SNPfiltered_with_missing, selection, :)\nind_with_metadata_indFiltered_sex_chrZcleaned_selected = view(ind_with_metadata_indFiltered_sex_chrZcleaned, selection, :)\n\n# now limit each group to specified numbers\ngenosOnly_included, ind_with_metadata_included = limitIndsToPlot(plotGroups, numIndsToPlot, genotypes_gwZ_SNPfiltered_with_missing_selected, ind_with_metadata_indFiltered_sex_chrZcleaned_selected);\n\nchr = \"gwZ\"\nregionInfo = chooseChrRegion(pos_SNP_filtered_chZcleaned, chr; positionMin=1, positionMax=scaffold_lengths[chr])\n\nplotInfo = plotGenotypeByIndividualWithFst(groupsToCompare, Fst_cutoff, missingFractionAllowed,\n    regionInfo, pos_SNP_filtered_chZcleaned, Fst, pairwiseNamesFst, \n    genosOnly_included, ind_with_metadata_included, freqs, plotGroups, plotGroupColors);\n# plotInfo contains a tuple with: (f, plottedGenotype, locations, plottedMetadata)\n\n# Now plot without title:\nplotInfo = plotGenotypeByIndividualWithFst(groupsToCompare, Fst_cutoff, missingFractionAllowed,\n    regionInfo, pos_SNP_filtered_chZcleaned, Fst, pairwiseNamesFst, \n    genosOnly_included, ind_with_metadata_included, freqs, plotGroups, plotGroupColors;\n    plotTitle = \"\");\n\nCalculated population allele frequencies and sample sizes\nCalculated Fst values\n\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\n\n\nNow make one of all individuals, for the supplement\n\ngroups_to_plot_all = [\"vir\",\"vir_S\",\"nit\", \"lud_PK\", \"lud_KS\", \"lud_central\", \"lud_Sath\", \"lud_ML\",\"troch_west\",\"troch_LN\",\"troch_EM\",\"obs\",\"plumb_BJ\",\"plumb\",\"plumb_vir\"]\ngroup_colors_all = [\"blue\",\"turquoise1\",\"grey\",\"seagreen4\",\"seagreen3\",\"seagreen2\",\"olivedrab3\",\"olivedrab2\",\"olivedrab1\",\"yellow\",\"gold\",\"orange\",\"pink\",\"red\",\"purple\"];\n\ngroups = [\"vir\",\"lud_PK\",\"troch_LN\",\"obs\",\"plumb\"] # for purpose of calculating pairwise Fst and Fst_group (to determine SNPs)   \nplotGroups = groups_to_plot_all \nplotGroupColors = group_colors_all\ngroup1 = \"vir\"   # these groups will determine the color used in the graph\ngroup2 = \"plumb\"\ngroupsToCompare = [\"vir_plumb\", \"vir_troch_LN\", \"troch_LN_plumb\"]  #\"Fst_among\" #\"vir_plumb\" \nFst_cutoff = 0.9\nmissingFractionAllowed = 0.2  # only show SNPs with less than this fraction of missing data among individuals\n\n# Calculate allele freqs and sample sizes (use column Fst_group)\nfreqs, sampleSizes = getFreqsAndSampleSizes(genotypes_gwZ_SNPfiltered_with_missing, ind_with_metadata_indFiltered_sex_chrZcleaned.Fst_group, groups)\nprintln(\"Calculated population allele frequencies and sample sizes\")\n\nFst, FstNumerator, FstDenominator, pairwiseNamesFst = getFst(freqs, sampleSizes, groups; among=true)  # set among to FALSE if no among Fst wanted (some things won't work without it) \nprintln(\"Calculated Fst values\")\n\nchr = \"gwZ\"\nregionInfo = chooseChrRegion(pos_SNP_filtered_chZcleaned, chr; positionMin=1, positionMax=scaffold_lengths[chr]) # this gets the maximum position for the chromosome\n\nplotInfo = plotGenotypeByIndividualWithFst(groupsToCompare, Fst_cutoff, \n    missingFractionAllowed, regionInfo,\n    pos_SNP_filtered_chZcleaned, Fst, pairwiseNamesFst, \n    genotypes_gwZ_SNPfiltered_with_missing, ind_with_metadata_indFiltered_sex_chrZcleaned, freqs, \n    plotGroups, plotGroupColors;\n    indFontSize=4, figureSize=(1200,1600),\n    plotTitle = \"\");\n# plotInfo contains a tuple with: (f, plottedGenotype, locations, plottedMetadata)\n\nCalculated population allele frequencies and sample sizes\nCalculated Fst values\n\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238",
    "crumbs": [
      "Home",
      "Greenish Warbler Z-chromosome analysis"
    ]
  },
  {
    "objectID": "GW_Zchromosome_analysis.html#just-west-side",
    "href": "GW_Zchromosome_analysis.html#just-west-side",
    "title": "Greenish Warbler Z-chromosome analysis",
    "section": "Just west side",
    "text": "Just west side\nOne of the nitidus is a female, so including both sexes here, and no additional filtering for missing data:\n\ngroups = [\"vir\",\"troch_LN\"] # for purpose of calculating pairwise Fst and Fst_group (to determine SNPs)\nplotGroups = [\"vir\",\"vir_S\",\"nit\", \"lud_PK\", \"lud_KS\", \"lud_central\", \"lud_Sath\", \"lud_ML\",\"troch_west\",\"troch_LN\"]\nplotGroupColors = [\"blue\",\"turquoise1\",\"grey\",\"seagreen4\",\"seagreen3\",\"seagreen2\",\"olivedrab3\",\"olivedrab2\",\"olivedrab1\",\"yellow\"]\nnumIndsToPlot = [10, 5, 2, 3, 5, 15, 3, 5, 10, 10] # maximum number of individuals to plot from each group\ngroup1 = \"vir\"   # these groups will determine the color used in the graph\ngroup2 = \"troch_LN\"\ngroupsToCompare = \"vir_troch_LN\" # \"Fst_among\"\nFst_cutoff = 0.95\nmissingFractionAllowed = 0.2  # only show SNPs with less than this fraction of missing data among individuals\n\n# Calculate allele freqs and sample sizes (use column Fst_group)\nfreqs, sampleSizes = getFreqsAndSampleSizes(genotypes_gwZ_SNPfiltered_with_missing, ind_with_metadata_indFiltered_sex_chrZcleaned.Fst_group, groups)\nprintln(\"Calculated population allele frequencies and sample sizes\")\n\nFst, FstNumerator, FstDenominator, pairwiseNamesFst = getFst(freqs, sampleSizes, groups; among=true)  # set among to FALSE if no among Fst wanted (some things won't work without it) \nprintln(\"Calculated Fst values\")\n\n# now limit each group to specified numbers\ngenosOnly_included, ind_with_metadata_included = limitIndsToPlot(plotGroups, numIndsToPlot, genotypes_gwZ_SNPfiltered_with_missing, ind_with_metadata_indFiltered_sex_chrZcleaned);\n\nchr = \"gwZ\"\nregionInfo = chooseChrRegion(pos_SNP_filtered_chZcleaned, chr; positionMin=1, positionMax=scaffold_lengths[chr])\n\nplotInfo = plotGenotypeByIndividualWithFst(groupsToCompare, Fst_cutoff, missingFractionAllowed,\n    regionInfo, pos_SNP_filtered_chZcleaned, Fst, pairwiseNamesFst, \n    genosOnly_included, ind_with_metadata_included, freqs, plotGroups, plotGroupColors);\n# plotInfo contains a tuple with: (f, plottedGenotype, locations, plottedMetadata)\n\n# Now plot without title:\nplotInfo = plotGenotypeByIndividualWithFst(groupsToCompare, Fst_cutoff, missingFractionAllowed,\n    regionInfo, pos_SNP_filtered_chZcleaned, Fst, pairwiseNamesFst, \n    genosOnly_included, ind_with_metadata_included, freqs, plotGroups, plotGroupColors;\n    plotTitle = \"\");\n\nCalculated population allele frequencies and sample sizes\nCalculated Fst values\n\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\n\nDo Z-chromosome PCA on west side\n\ngroups_to_plot_PCA = [\"vir\", \"vir_S\", \"nit\", \"lud_PK\", \"lud_KS\", \"lud_central\", \"lud_Sath\", \"lud_ML\", \"troch_west\", \"troch_LN\"]\ngroup_colors_PCA = [\"blue\", \"turquoise1\", \"grey\", \"seagreen4\", \"seagreen3\", \"seagreen2\", \"olivedrab3\", \"olivedrab2\", \"olivedrab1\", \"yellow\"]\nPCA_Zchrom_west = plotPCA(imputed_genos_chrZcleaned, ind_with_metadata_indFiltered_sex_chrZcleaned, \n            groups_to_plot_PCA, group_colors_PCA; \n            sampleSet = \"greenish warblers\", regionText=regionText,\n            flip1 = true, flip2 = false,\n            lineOpacity = 0.7, fillOpacity = 0.6,\n            symbolSize = 14, showTitle = true,\n            xLabelText = string(\"Chromosome Z PC1\"), yLabelText = string(\"Chromosome Z PC2\"),\n            showPlot = true)\ntotalObservationVariance = var(PCA_Zchrom_west.model) \nPC1_variance, PC2_variance = principalvars(PCA_Zchrom_west.model)[1:2]\nPC1_prop_variance = PC1_variance / totalObservationVariance\nPC2_prop_variance = PC2_variance / totalObservationVariance\nprintln(\"PC1 explains \", 100*PC1_prop_variance, \"% of the total variance.\nPC2 explains \", 100*PC2_prop_variance, \"%.\")\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\nPC1 explains 18.532217% of the total variance.\nPC2 explains 3.087952%.",
    "crumbs": [
      "Home",
      "Greenish Warbler Z-chromosome analysis"
    ]
  },
  {
    "objectID": "GW_Zchromosome_analysis.html#just-east-side",
    "href": "GW_Zchromosome_analysis.html#just-east-side",
    "title": "Greenish Warbler Z-chromosome analysis",
    "section": "Just east side:",
    "text": "Just east side:\nOne of obscuratus is female, so also showing both males and females here:\n\ngroups = [\"troch_LN\",\"obs\",\"plumb\"] # for purpose of calculating pairwise Fst and Fst_group (to determine SNPs)\nplotGroups = [\"troch_LN\",\"troch_EM\",\"obs\",\"plumb_BJ\",\"plumb\"]\nplotGroupColors = [\"yellow\",\"gold\",\"orange\",\"pink\",\"red\"]\nnumIndsToPlot = [15, 15, 15, 15, 17] # maximum number of individuals to plot from each group\ngroup1 = \"troch_LN\"   # these groups will determine the color used in the graph\ngroup2 = \"plumb\"\ngroupsToCompare = \"troch_LN_plumb\" #\"Fst_among\"\nFst_cutoff = 0.95\nmissingFractionAllowed = 0.2  # only show SNPs with less than this fraction of missing data among individuals\n\n# Calculate allele freqs and sample sizes (use column Fst_group)\nfreqs, sampleSizes = getFreqsAndSampleSizes(genotypes_gwZ_SNPfiltered_with_missing, ind_with_metadata_indFiltered_sex_chrZcleaned.Fst_group, groups)\nprintln(\"Calculated population allele frequencies and sample sizes\")\n\nFst, FstNumerator, FstDenominator, pairwiseNamesFst = getFst(freqs, sampleSizes, groups; among=true)  # set among to FALSE if no among Fst wanted (some things won't work without it) \nprintln(\"Calculated Fst values\")\n\n# now limit each group to specified numbers\ngenosOnly_included, ind_with_metadata_included = limitIndsToPlot(plotGroups, numIndsToPlot, genotypes_gwZ_SNPfiltered_with_missing, ind_with_metadata_indFiltered_sex_chrZcleaned);\n\nchr = \"gwZ\"\nregionInfo = chooseChrRegion(pos_SNP_filtered_chZcleaned, chr; positionMin=1, positionMax=scaffold_lengths[chr])\n\nplotInfo = plotGenotypeByIndividualWithFst(groupsToCompare, Fst_cutoff, missingFractionAllowed,\n    regionInfo, pos_SNP_filtered_chZcleaned, Fst, pairwiseNamesFst, \n    genosOnly_included, ind_with_metadata_included, freqs, plotGroups, plotGroupColors);\n# plotInfo contains a tuple with: (f, plottedGenotype, locations, plottedMetadata)\n\n# Now plot without title:\nplotInfo = plotGenotypeByIndividualWithFst(groupsToCompare, Fst_cutoff, missingFractionAllowed,\n    regionInfo, pos_SNP_filtered_chZcleaned, Fst, pairwiseNamesFst, \n    genosOnly_included, ind_with_metadata_included, freqs, plotGroups, plotGroupColors;\n    plotTitle = \"\");\n\nCalculated population allele frequencies and sample sizes\nCalculated Fst values\n\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\n\nDo Z-chromosome PCA on east side\n\ngroups_to_plot_PCA = [\"troch_LN\",\"troch_EM\",\"obs\",\"plumb_BJ\",\"plumb\"]\ngroup_colors_PCA = [\"yellow\",\"gold\",\"orange\",\"pink\",\"red\"]\nPCA_Zchrom_east = plotPCA(imputed_genos_chrZcleaned, ind_with_metadata_indFiltered_sex_chrZcleaned, \n            groups_to_plot_PCA, group_colors_PCA; \n            sampleSet = \"greenish warblers\", regionText=regionText,\n            flip1 = true, flip2 = true,\n            lineOpacity = 0.7, fillOpacity = 0.6,\n            symbolSize = 14, showTitle = true,\n            xLabelText = string(\"Chromosome Z PC1\"), yLabelText = string(\"Chromosome Z PC2\"),\n            showPlot = true)\ntotalObservationVariance = var(PCA_Zchrom_east.model) \nPC1_variance, PC2_variance = principalvars(PCA_Zchrom_east.model)[1:2]\nPC1_prop_variance = PC1_variance / totalObservationVariance\nPC2_prop_variance = PC2_variance / totalObservationVariance\nprintln(\"PC1 explains \", 100*PC1_prop_variance, \"% of the total variance.\nPC2 explains \", 100*PC2_prop_variance, \"%.\")\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\nPC1 explains 14.7749405% of the total variance.\nPC2 explains 2.5138261%.",
    "crumbs": [
      "Home",
      "Greenish Warbler Z-chromosome analysis"
    ]
  },
  {
    "objectID": "GW_PCAplots.html",
    "href": "GW_PCAplots.html",
    "title": "Greenish Warbler PCA plots",
    "section": "",
    "text": "The scripts, data, and figures shown in this document were used as part of the analysis for the paper listed below, which should be cited as the source of information from this document:\nIrwin, D., S. Bensch, C. Charlebois, G. David, A. Geraldes, S.K. Gupta, B. Harr, P. Holt, J.H. Irwin, V.V. Ivanitskii, I.M. Marova, Y. Niu, S. Seneviratne, A. Singh, Y. Wu, S. Zhang, T.D. Price. 2025. The distribution and dispersal of large haploblocks in a superspecies. Molecular Ecology.\nThis page shows the code used to generate PCA plots for the whole genome (and also for each chromosome, although those aren’t shown in the paper).\nPrior to examining the code on this page, readers should look at GreenishWarblerGenomics2025.qmd (or .html) and GW_Zchromosome_analysis.qmd (or .html), as this current page depends on the code on those pages being run first.",
    "crumbs": [
      "Home",
      "Greenish Warbler PCA plots"
    ]
  },
  {
    "objectID": "GW_PCAplots.html#load-packages",
    "href": "GW_PCAplots.html#load-packages",
    "title": "Greenish Warbler PCA plots",
    "section": "Load packages",
    "text": "Load packages\n\nusing JLD2 # for loading saved data\nusing DataFrames # for storing data as type DataFrame\nusing CairoMakie # for plots\nusing Statistics # for var() function\nusing MultivariateStats # for getting variances from PCA model\nusing CSV # for reading in delimited files\n# using Impute # for imputing missing genotypes\n\nLoad my custom package GenomicDiversity:\n\nusing GenomicDiversity",
    "crumbs": [
      "Home",
      "Greenish Warbler PCA plots"
    ]
  },
  {
    "objectID": "GW_PCAplots.html#choose-working-directory",
    "href": "GW_PCAplots.html#choose-working-directory",
    "title": "Greenish Warbler PCA plots",
    "section": "Choose working directory",
    "text": "Choose working directory\n\ndataDirectory = \"/Users/darrenirwin/Dropbox/Darren's current work/\"\ncd(dataDirectory)",
    "crumbs": [
      "Home",
      "Greenish Warbler PCA plots"
    ]
  },
  {
    "objectID": "GW_PCAplots.html#load-the-filtered-dataset",
    "href": "GW_PCAplots.html#load-the-filtered-dataset",
    "title": "Greenish Warbler PCA plots",
    "section": "Load the filtered dataset",
    "text": "Load the filtered dataset\nThis dataset was produced through filtering in GreenishWarblerGenomics2025.qmd:\n\nbaseName = \"GW_genomics_2022_with_new_genome/GW2022_GBS_012NA_files/GW2022_all4plates.genotypes.SNPs_only.whole_genome\"\ntagName = \".Jan2025.\"\nfilename = string(baseName, tagName, \"ind_SNP_ind_filtered.jld2\")\n# load info into a dictionary (and check for errors):\nd = load(filename)\nif baseName != d[\"baseName\"]\n    println(\"WARNING: baseNames don't match between that defined above and in the saved file\")\nend\nif tagName != d[\"tagName\"]\n    println(\"WARNING: tagNames don't match don't match between that defined above and in the saved file\")\nend\ngenosOnly = d[\"genosOnly_ind_SNP_ind_filtered\"]\nind_with_metadata_indFiltered = d[\"ind_with_metadata_indFiltered\"]\npos_SNP_filtered = d[\"pos_SNP_filtered\"]\nrepoDirectory = d[\"repoDirectory\"]\ndataDirectory = d[\"dataDirectory\"]\nscaffold_info = d[\"scaffold_info\"]\nscaffold_lengths = d[\"scaffold_lengths\"]\nfilenameTextMiddle = d[\"filenameTextMiddle\"]\nmissingGenotypeThreshold = d[\"missingGenotypeThreshold\"]\nfilenameTextEnd = d[\"filenameTextEnd\"]\nchromosomes_to_process =d[\"chromosomes_to_process\"]\nprintln(\"Loaded the filtered data.\")\n\nLoaded the filtered data.",
    "crumbs": [
      "Home",
      "Greenish Warbler PCA plots"
    ]
  },
  {
    "objectID": "GW_PCAplots.html#make-final-whole-genome-pca",
    "href": "GW_PCAplots.html#make-final-whole-genome-pca",
    "title": "Greenish Warbler PCA plots",
    "section": "Make final whole-genome PCA",
    "text": "Make final whole-genome PCA\nNow that the Z-chromosome problem has been solved (by removing SNPs that had a divergent W sequence mapped onto that Z location), we can construct a new whole-genome PCA. I will combine the saved imputed genotypes for each chromosome into a large data matrix, and conduct PCA on that.\nWe need to first specify some groups to include in the plot, and their colors:\n\ngroups_to_plot_PCA = [\"vir\",\"vir_S\",\"nit\", \"lud_PK\", \"lud_KS\", \"lud_central\", \"lud_Sath\", \"lud_ML\",\"troch_west\",\"troch_LN\",\"troch_EM\",\"obs\",\"plumb_BJ\",\"plumb\",\"plumb_vir\"]\ngroup_colors_PCA = [\"blue\",\"turquoise1\",\"grey\",\"seagreen4\",\"seagreen3\",\"seagreen2\",\"olivedrab3\",\"olivedrab2\",\"olivedrab1\",\"yellow\",\"gold\",\"orange\",\"pink\",\"red\",\"purple\"];\n\n\nMake list of scaffolds to include in the whole-genome PCA:\n\nscaffolds_to_include = \"gw\" .* string.(vcat(28:-1:17, 15:-1:1))\npush!(scaffolds_to_include, \"gw1A\", \"gw4A\", \"gwZ_cleaned\")  # add three other scaffolds\n\n30-element Vector{String}:\n \"gw28\"\n \"gw27\"\n \"gw26\"\n \"gw25\"\n \"gw24\"\n \"gw23\"\n \"gw22\"\n \"gw21\"\n \"gw20\"\n \"gw19\"\n \"gw18\"\n \"gw17\"\n \"gw15\"\n ⋮\n \"gw9\"\n \"gw8\"\n \"gw7\"\n \"gw6\"\n \"gw5\"\n \"gw4\"\n \"gw3\"\n \"gw2\"\n \"gw1\"\n \"gw1A\"\n \"gw4A\"\n \"gwZ_cleaned\"\n\n\n\n# initialize data structures for genotypes and positions\nimputeMethod = \"KNN\"  # choices are KNN or SVD\n\ngenos_imputed_loaded = Matrix{Union{Missing, Float32}}(undef, nrow(ind_with_metadata_indFiltered), 0)\npos_SNP_loaded = DataFrame(chrom = String[], position = Int64[])\nfor i in eachindex(scaffolds_to_include)\n    chrom = scaffolds_to_include[i]\n    regionText = string(\"chr\", chrom)\n    filename = string(baseName, tagName, regionText, \".\", imputeMethod, \"imputedMissing.jld2\")\n    imputed_genos_one_chr = load(filename, \"imputed_genos\")\n    genos_imputed_loaded = hcat(genos_imputed_loaded, imputed_genos_one_chr)\n    if ind_with_metadata_indFiltered.ind != load(filename, \"ind_with_metadata_indFiltered\")[:, :ind]\n        println(\"\"\"Warning: \"ind\" columns in loaded data and memory data don't match.\"\"\")\n    end\n    pos_SNP_filtered_region = load(filename, \"pos_SNP_filtered_region\")\n    pos_SNP_loaded = vcat(pos_SNP_loaded, pos_SNP_filtered_region)\n    println(string(\"Loaded \",filename))\n    println(string(regionText, \": \", size(imputed_genos_one_chr,2), \" SNPs from \", size(imputed_genos_one_chr,1), \" individuals\"))\nend\nflipPC1 = true\nflipPC2 = true\nPCA_wholeGenome = plotPCA(genos_imputed_loaded, ind_with_metadata_indFiltered, \n        groups_to_plot_PCA, group_colors_PCA; \n        sampleSet = \"greenish warblers\", regionText = \"wholeGenome\",\n        flip1 = flipPC1, flip2 = flipPC2,\n        lineOpacity = 0.7, fillOpacity = 0.6,\n        symbolSize = 14, showTitle = false)\ntotalObservationVariance = var(PCA_wholeGenome.model) \nPC1_variance, PC2_variance = principalvars(PCA_wholeGenome.model)[1:2]\nPC1_prop_variance = PC1_variance / totalObservationVariance\nPC2_prop_variance = PC2_variance / totalObservationVariance\nprintln(\"PC1 explains \", 100*PC1_prop_variance, \"% of the total variance.\nPC2 explains \", 100*PC2_prop_variance, \"%.\")\n\nind_with_metadata_indFiltered.PC1 = PCA_wholeGenome.PC1\nind_with_metadata_indFiltered.PC2 = PCA_wholeGenome.PC2\n\n# add position of reference genome\nrefGenomePCAposition = predict(PCA_wholeGenome.model, zeros(size(genos_imputed_loaded, 2)))\nflipPC1 && (refGenomePCAposition[1] *= -1)  # this flips PC1 if flipPC1 = true\nflipPC2 && (refGenomePCAposition[2] *= -1)  # same for PC2\nCairoMakie.scatter!(refGenomePCAposition[1], refGenomePCAposition[2], marker = :diamond, color=\"black\", markersize=15, strokewidth=0.5)\ntry\n    display(PCA_wholeGenome.PCAfig)\ncatch\n    println(\"NOTICE: Figure for \", regionText, \" could not be shown due to an unknown error.\")\nend\n\nif true  #set to true to save\n    save(string(\"Figure1B_PCAwholeGenome_\", imputeMethod,\"imputed_fromJulia.png\"), PCA_wholeGenome.PCAfig, px_per_unit = 2.0)\nend\n\nLoaded GW_genomics_2022_with_new_genome/GW2022_GBS_012NA_files/GW2022_all4plates.genotypes.SNPs_only.whole_genome.Jan2025.chrgw28.KNNimputedMissing.jld2\nchrgw28: 11180 SNPs from 257 individuals\nLoaded GW_genomics_2022_with_new_genome/GW2022_GBS_012NA_files/GW2022_all4plates.genotypes.SNPs_only.whole_genome.Jan2025.chrgw27.KNNimputedMissing.jld2\nchrgw27: 9684 SNPs from 257 individuals\nLoaded GW_genomics_2022_with_new_genome/GW2022_GBS_012NA_files/GW2022_all4plates.genotypes.SNPs_only.whole_genome.Jan2025.chrgw26.KNNimputedMissing.jld2\nchrgw26: 14303 SNPs from 257 individuals\nLoaded GW_genomics_2022_with_new_genome/GW2022_GBS_012NA_files/GW2022_all4plates.genotypes.SNPs_only.whole_genome.Jan2025.chrgw25.KNNimputedMissing.jld2\nchrgw25: 3794 SNPs from 257 individuals\nLoaded GW_genomics_2022_with_new_genome/GW2022_GBS_012NA_files/GW2022_all4plates.genotypes.SNPs_only.whole_genome.Jan2025.chrgw24.KNNimputedMissing.jld2\nchrgw24: 13821 SNPs from 257 individuals\nLoaded GW_genomics_2022_with_new_genome/GW2022_GBS_012NA_files/GW2022_all4plates.genotypes.SNPs_only.whole_genome.Jan2025.chrgw23.KNNimputedMissing.jld2\nchrgw23: 13949 SNPs from 257 individuals\nLoaded GW_genomics_2022_with_new_genome/GW2022_GBS_012NA_files/GW2022_all4plates.genotypes.SNPs_only.whole_genome.Jan2025.chrgw22.KNNimputedMissing.jld2\nchrgw22: 5473 SNPs from 257 individuals\nLoaded GW_genomics_2022_with_new_genome/GW2022_GBS_012NA_files/GW2022_all4plates.genotypes.SNPs_only.whole_genome.Jan2025.chrgw21.KNNimputedMissing.jld2\nchrgw21: 13321 SNPs from 257 individuals\nLoaded GW_genomics_2022_with_new_genome/GW2022_GBS_012NA_files/GW2022_all4plates.genotypes.SNPs_only.whole_genome.Jan2025.chrgw20.KNNimputedMissing.jld2\nchrgw20: 32739 SNPs from 257 individuals\nLoaded GW_genomics_2022_with_new_genome/GW2022_GBS_012NA_files/GW2022_all4plates.genotypes.SNPs_only.whole_genome.Jan2025.chrgw19.KNNimputedMissing.jld2\nchrgw19: 25414 SNPs from 257 individuals\nLoaded GW_genomics_2022_with_new_genome/GW2022_GBS_012NA_files/GW2022_all4plates.genotypes.SNPs_only.whole_genome.Jan2025.chrgw18.KNNimputedMissing.jld2\nchrgw18: 19359 SNPs from 257 individuals\nLoaded GW_genomics_2022_with_new_genome/GW2022_GBS_012NA_files/GW2022_all4plates.genotypes.SNPs_only.whole_genome.Jan2025.chrgw17.KNNimputedMissing.jld2\nchrgw17: 26313 SNPs from 257 individuals\nLoaded GW_genomics_2022_with_new_genome/GW2022_GBS_012NA_files/GW2022_all4plates.genotypes.SNPs_only.whole_genome.Jan2025.chrgw15.KNNimputedMissing.jld2\nchrgw15: 27517 SNPs from 257 individuals\nLoaded GW_genomics_2022_with_new_genome/GW2022_GBS_012NA_files/GW2022_all4plates.genotypes.SNPs_only.whole_genome.Jan2025.chrgw14.KNNimputedMissing.jld2\nchrgw14: 30969 SNPs from 257 individuals\nLoaded GW_genomics_2022_with_new_genome/GW2022_GBS_012NA_files/GW2022_all4plates.genotypes.SNPs_only.whole_genome.Jan2025.chrgw13.KNNimputedMissing.jld2\nchrgw13: 33543 SNPs from 257 individuals\nLoaded GW_genomics_2022_with_new_genome/GW2022_GBS_012NA_files/GW2022_all4plates.genotypes.SNPs_only.whole_genome.Jan2025.chrgw12.KNNimputedMissing.jld2\nchrgw12: 33294 SNPs from 257 individuals\nLoaded GW_genomics_2022_with_new_genome/GW2022_GBS_012NA_files/GW2022_all4plates.genotypes.SNPs_only.whole_genome.Jan2025.chrgw11.KNNimputedMissing.jld2\nchrgw11: 27683 SNPs from 257 individuals\nLoaded GW_genomics_2022_with_new_genome/GW2022_GBS_012NA_files/GW2022_all4plates.genotypes.SNPs_only.whole_genome.Jan2025.chrgw10.KNNimputedMissing.jld2\nchrgw10: 26962 SNPs from 257 individuals\nLoaded GW_genomics_2022_with_new_genome/GW2022_GBS_012NA_files/GW2022_all4plates.genotypes.SNPs_only.whole_genome.Jan2025.chrgw9.KNNimputedMissing.jld2\nchrgw9: 38180 SNPs from 257 individuals\nLoaded GW_genomics_2022_with_new_genome/GW2022_GBS_012NA_files/GW2022_all4plates.genotypes.SNPs_only.whole_genome.Jan2025.chrgw8.KNNimputedMissing.jld2\nchrgw8: 37818 SNPs from 257 individuals\nLoaded GW_genomics_2022_with_new_genome/GW2022_GBS_012NA_files/GW2022_all4plates.genotypes.SNPs_only.whole_genome.Jan2025.chrgw7.KNNimputedMissing.jld2\nchrgw7: 36575 SNPs from 257 individuals\nLoaded GW_genomics_2022_with_new_genome/GW2022_GBS_012NA_files/GW2022_all4plates.genotypes.SNPs_only.whole_genome.Jan2025.chrgw6.KNNimputedMissing.jld2\nchrgw6: 40175 SNPs from 257 individuals\nLoaded GW_genomics_2022_with_new_genome/GW2022_GBS_012NA_files/GW2022_all4plates.genotypes.SNPs_only.whole_genome.Jan2025.chrgw5.KNNimputedMissing.jld2\nchrgw5: 55329 SNPs from 257 individuals\nLoaded GW_genomics_2022_with_new_genome/GW2022_GBS_012NA_files/GW2022_all4plates.genotypes.SNPs_only.whole_genome.Jan2025.chrgw4.KNNimputedMissing.jld2\nchrgw4: 49980 SNPs from 257 individuals\nLoaded GW_genomics_2022_with_new_genome/GW2022_GBS_012NA_files/GW2022_all4plates.genotypes.SNPs_only.whole_genome.Jan2025.chrgw3.KNNimputedMissing.jld2\nchrgw3: 82372 SNPs from 257 individuals\nLoaded GW_genomics_2022_with_new_genome/GW2022_GBS_012NA_files/GW2022_all4plates.genotypes.SNPs_only.whole_genome.Jan2025.chrgw2.KNNimputedMissing.jld2\nchrgw2: 93292 SNPs from 257 individuals\nLoaded GW_genomics_2022_with_new_genome/GW2022_GBS_012NA_files/GW2022_all4plates.genotypes.SNPs_only.whole_genome.Jan2025.chrgw1.KNNimputedMissing.jld2\nchrgw1: 80862 SNPs from 257 individuals\nLoaded GW_genomics_2022_with_new_genome/GW2022_GBS_012NA_files/GW2022_all4plates.genotypes.SNPs_only.whole_genome.Jan2025.chrgw1A.KNNimputedMissing.jld2\nchrgw1A: 50051 SNPs from 257 individuals\nLoaded GW_genomics_2022_with_new_genome/GW2022_GBS_012NA_files/GW2022_all4plates.genotypes.SNPs_only.whole_genome.Jan2025.chrgw4A.KNNimputedMissing.jld2\nchrgw4A: 18467 SNPs from 257 individuals\nLoaded GW_genomics_2022_with_new_genome/GW2022_GBS_012NA_files/GW2022_all4plates.genotypes.SNPs_only.whole_genome.Jan2025.chrgwZ_cleaned.KNNimputedMissing.jld2\nchrgwZ_cleaned: 51505 SNPs from 257 individuals\n\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\nPC1 explains 12.08685% of the total variance.\nPC2 explains 6.3917747%.\n\n\n\n\n\n\n\n\n\nCairoMakie.Screen{IMAGE}\n\n\n\n\nPlot location around ring vs. PC1:\n\nf = CairoMakie.Figure()\nax = Axis(f[1, 1],\n    title = \"\",    #\"Genomic PC1 around ring\"\n    xlabel = \"Location around ring (km)\", xlabelsize = 24,\n    ylabel = \"Genomic PC1\", ylabelsize = 24)\nhidedecorations!(ax, label = false, ticklabels = false, ticks = false) # hide background lattice\njitterSize = 100   # in km\nx_plot_values = ind_with_metadata_indFiltered.ring_km .+ jitterSize .* (rand(length(ind_with_metadata_indFiltered.PC1)) .- 0.5)\ny_plot_values = ind_with_metadata_indFiltered.PC1\nfor i in eachindex(groups_to_plot_PCA) \n    selection = ind_with_metadata_indFiltered.Fst_group .== groups_to_plot_PCA[i]\n    CairoMakie.scatter!(ax, x_plot_values[selection], y_plot_values[selection], marker = :diamond, color = (group_colors_PCA[i], 0.6), markersize=14, strokewidth=0.5, strokecolor = (\"black\", 0.7))\nend\n# add position of reference genome\ncd(repoDirectory)\nring_locations = DataFrame(CSV.File(\"metadata/GW2023_ring_locations.txt\"))\nrefGenome_location = ring_locations.LocationAroundRing[ring_locations.location_short .== \"GG\"][1]\nCairoMakie.scatter!(refGenome_location, refGenomePCAposition[1], marker = :diamond, color=\"black\", markersize=15, strokewidth=0.5)\ncd(dataDirectory)\ndisplay(f)\n\nif true  #set to true to save\n    save(\"Figure1C_PCAwholeGenomeAroundRing_fromJulia.png\", f, px_per_unit = 2.0)\nend\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\nCairoMakie.Screen{IMAGE}\n\n\n\n\nMake a whole-genome PCA just for the western side of the ring\n\nwestern_groups_to_plot_PCA = [\"vir\", \"vir_misID\", \"vir_S\", \"nit\", \"lud_PK\", \"lud_KS\", \"lud_central\", \"lud_Sath\", \"lud_ML\", \"troch_west\", \"troch_LN\"]\nwestern_group_colors_PCA = [\"blue\", \"blue\", \"turquoise1\", \"grey\", \"seagreen4\", \"seagreen3\", \"seagreen2\", \"olivedrab3\", \"olivedrab2\", \"olivedrab1\", \"yellow\"]\nPCA_wholeGenome = plotPCA(genos_imputed_loaded, ind_with_metadata_indFiltered,\n    western_groups_to_plot_PCA, western_group_colors_PCA;\n    sampleSet=\"greenish warblers\", regionText=\"wholeGenome\",\n    flip1=false, flip2=false,\n    lineOpacity = 0.7, fillOpacity = 0.6,\n    symbolSize = 14, showTitle = false)\ntotalObservationVariance = var(PCA_wholeGenome.model)\nPC1_variance, PC2_variance = principalvars(PCA_wholeGenome.model)[1:2]\nPC1_prop_variance = PC1_variance / totalObservationVariance\nPC2_prop_variance = PC2_variance / totalObservationVariance\nprintln(\"PC1 explains \", 100 * PC1_prop_variance, \"% of the total variance.\n    PC2 explains \", 100 * PC2_prop_variance, \"%.\")\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\nPC1 explains 11.394545% of the total variance.\n    PC2 explains 1.7678221%.\n\n\n\n\nMake a whole-genome PCA just for the eastern side of the ring\n\neastern_groups_to_plot_PCA = [\"troch_LN\",\"troch_EM\",\"obs\",\"plumb_BJ\",\"plumb\"]\neastern_group_colors_PCA = [\"yellow\",\"gold\",\"orange\",\"pink\",\"red\"]\nflipPC1 = false\nflipPC2 = true\nPCA_wholeGenome = plotPCA(genos_imputed_loaded, ind_with_metadata_indFiltered, \n        eastern_groups_to_plot_PCA, eastern_group_colors_PCA; \n        sampleSet = \"greenish warblers\", regionText = \"wholeGenome\",\n        flip1 = flipPC1, flip2 = flipPC2,\n        lineOpacity = 0.7, fillOpacity = 0.6,\n        symbolSize = 14, showTitle = false)\ntotalObservationVariance = var(PCA_wholeGenome.model) \nPC1_variance, PC2_variance = principalvars(PCA_wholeGenome.model)[1:2]\nPC1_prop_variance = PC1_variance / totalObservationVariance\nPC2_prop_variance = PC2_variance / totalObservationVariance\nprintln(\"PC1 explains \", 100*PC1_prop_variance, \"% of the total variance.\nPC2 explains \", 100*PC2_prop_variance, \"%.\")\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\nPC1 explains 9.740206% of the total variance.\nPC2 explains 1.8479686%.",
    "crumbs": [
      "Home",
      "Greenish Warbler PCA plots"
    ]
  },
  {
    "objectID": "GW_PCAplots.html#make-pca-plots-for-individual-scaffolds",
    "href": "GW_PCAplots.html#make-pca-plots-for-individual-scaffolds",
    "title": "Greenish Warbler PCA plots",
    "section": "Make PCA plots for individual scaffolds",
    "text": "Make PCA plots for individual scaffolds\nDefine a function for plotting one PCA for a scaffold:\n\nfunction plotOneScaffoldPCA(groups_to_plot_PCA, group_colors_PCA,\n                        baseName, tagName, scaffold; \n                        flipPC1, flipPC2, showTitle)\n\n    regionText = string(\"chr\", scaffold)\n    filename = string(baseName, tagName, regionText, \".KNNimputedMissing.jld2\")\n    imputed_genos = load(filename, \"imputed_genos\")\n    ind_with_metadata_indFiltered = load(filename, \"ind_with_metadata_indFiltered\")\n    pos_SNP_filtered_region = load(filename, \"pos_SNP_filtered_region\")\n    println(string(\"Loaded \",filename))\n    println(string(regionText, \": \", size(imputed_genos,2), \" SNPs from \", size(imputed_genos,1), \" individuals\"))\n    # flipPC1 = true\n    # flipPC2 = true\n    PCAmodel = plotPCA(imputed_genos, ind_with_metadata_indFiltered, \n            groups_to_plot_PCA, group_colors_PCA; \n            sampleSet = \"greenish warblers\", regionText=regionText,\n            flip1 = flipPC1, flip2 = flipPC2,\n            lineOpacity = 0.7, fillOpacity = 0.6,\n            symbolSize = 14, showTitle = showTitle,\n            xLabelText = string(\"Chromosome \", scaffold,\" PC1\"), yLabelText = string(\"Chromosome \", scaffold,\" PC2\"),\n            showPlot = false)\n\n    totalObservationVariance = var(PCAmodel.model) \n    PC1_variance, PC2_variance = principalvars(PCAmodel.model)[1:2]\n    PC1_prop_variance = PC1_variance / totalObservationVariance\n    PC2_prop_variance = PC2_variance / totalObservationVariance\n    println(\"PC1 explains \", 100*PC1_prop_variance, \"% of the total variance.\n    PC2 explains \", 100*PC2_prop_variance, \"%.\")\n            \n    # add position of reference genome\n    refGenomePCAposition = predict(PCAmodel.model, zeros(size(imputed_genos, 2)))\n    flipPC1 && (refGenomePCAposition[1] *= -1)  # this flips PC1 if flipPC1 = true\n    flipPC2 && (refGenomePCAposition[2] *= -1)  # same for PC2\n    CairoMakie.scatter!(refGenomePCAposition[1], refGenomePCAposition[2], marker = :diamond, color=\"black\", markersize=14, strokewidth=0.5)\n    try\n        display(PCAmodel.PCAfig)\n    catch\n        println(\"NOTICE: Figure for \", regionText, \" could not be shown due to an unknown error.\")\n    end\n    return PCAmodel   \nend\n\nplotOneScaffoldPCA (generic function with 1 method)\n\n\n\nMake PCA plots for each chromosome, with option to save:\n\nsavefig = false  #set to true to save the figures from cells below\n\nfalse\n\n\n\nscaffold = \"gw1\"    \nPCAmodel = plotOneScaffoldPCA(groups_to_plot_PCA, group_colors_PCA,    \n                            baseName, tagName, scaffold;\n                            flipPC1=true, flipPC2=false, showTitle=false)\nif savefig  #set to true to save\n    filename = string(\"Figure_\", scaffold, \"_PCA_allInds_from_Julia.png\")\n    save(filename, PCAmodel.PCAfig, px_per_unit = 2.0)\n    println(\"Saved \", filename)\nend\n\nLoaded GW_genomics_2022_with_new_genome/GW2022_GBS_012NA_files/GW2022_all4plates.genotypes.SNPs_only.whole_genome.Jan2025.chrgw1.KNNimputedMissing.jld2\nchrgw1: 80862 SNPs from 257 individuals\n\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\nPC1 explains 11.790371% of the total variance.\n    PC2 explains 6.068956%.\n\n\n\n\n\n\n\n\n\n\nscaffold = \"gw1A\"    \nPCAmodel = plotOneScaffoldPCA(groups_to_plot_PCA, group_colors_PCA,    \n                            baseName, tagName, scaffold;\n                            flipPC1=false, flipPC2=false, showTitle=false)\nif savefig  #set to true to save\n    filename = string(\"Figure_\", scaffold, \"_PCA_allInds_from_Julia.png\")\n    save(filename, PCAmodel.PCAfig, px_per_unit = 2.0)\n    println(\"Saved \", filename)\nend\n\nLoaded GW_genomics_2022_with_new_genome/GW2022_GBS_012NA_files/GW2022_all4plates.genotypes.SNPs_only.whole_genome.Jan2025.chrgw1A.KNNimputedMissing.jld2\nchrgw1A: 50051 SNPs from 257 individuals\n\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\nPC1 explains 14.3619375% of the total variance.\n    PC2 explains 8.243913%.\n\n\n\n\n\n\n\n\n\n\nscaffold = \"gw2\"    \nPCAmodel = plotOneScaffoldPCA(groups_to_plot_PCA, group_colors_PCA,    \n                            baseName, tagName, scaffold;\n                            flipPC1=true, flipPC2=true, showTitle=false)\nif savefig  #set to true to save\n    filename = string(\"Figure_\", scaffold, \"_PCA_allInds_from_Julia.png\")\n    save(filename, PCAmodel.PCAfig, px_per_unit = 2.0)\n    println(\"Saved \", filename)\nend\n\nLoaded GW_genomics_2022_with_new_genome/GW2022_GBS_012NA_files/GW2022_all4plates.genotypes.SNPs_only.whole_genome.Jan2025.chrgw2.KNNimputedMissing.jld2\nchrgw2: 93292 SNPs from 257 individuals\n\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\nPC1 explains 13.293323% of the total variance.\n    PC2 explains 6.3256464%.\n\n\n\n\n\n\n\n\n\n\nscaffold = \"gw3\"    \nPCAmodel = plotOneScaffoldPCA(groups_to_plot_PCA, group_colors_PCA,    \n                            baseName, tagName, scaffold;\n                            flipPC1=true, flipPC2=true, showTitle=false)\nif savefig  #set to true to save\n    filename = string(\"Figure_\", scaffold, \"_PCA_allInds_from_Julia.png\")\n    save(filename, PCAmodel.PCAfig, px_per_unit = 2.0)\n    println(\"Saved \", filename)\nend\n\nLoaded GW_genomics_2022_with_new_genome/GW2022_GBS_012NA_files/GW2022_all4plates.genotypes.SNPs_only.whole_genome.Jan2025.chrgw3.KNNimputedMissing.jld2\nchrgw3: 82372 SNPs from 257 individuals\n\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\nPC1 explains 12.753571% of the total variance.\n    PC2 explains 6.4516797%.\n\n\n\n\n\n\n\n\n\n\nscaffold = \"gw4\"    \nPCAmodel = plotOneScaffoldPCA(groups_to_plot_PCA, group_colors_PCA,    \n                            baseName, tagName, scaffold;\n                            flipPC1=false, flipPC2=true, showTitle=false)\nif savefig  #set to true to save\n    filename = string(\"Figure_\", scaffold, \"_PCA_allInds_from_Julia.png\")\n    save(filename, PCAmodel.PCAfig, px_per_unit = 2.0)\n    println(\"Saved \", filename)\nend\n\nLoaded GW_genomics_2022_with_new_genome/GW2022_GBS_012NA_files/GW2022_all4plates.genotypes.SNPs_only.whole_genome.Jan2025.chrgw4.KNNimputedMissing.jld2\nchrgw4: 49980 SNPs from 257 individuals\n\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\nPC1 explains 11.8756075% of the total variance.\n    PC2 explains 6.052506%.\n\n\n\n\n\n\n\n\n\n\nscaffold = \"gw4A\"    \nPCAmodel = plotOneScaffoldPCA(groups_to_plot_PCA, group_colors_PCA,    \n                            baseName, tagName, scaffold;\n                            flipPC1=true, flipPC2=true, showTitle=false)\nif savefig  #set to true to save\n    filename = string(\"Figure_\", scaffold, \"_PCA_allInds_from_Julia.png\")\n    save(filename, PCAmodel.PCAfig, px_per_unit = 2.0)\n    println(\"Saved \", filename)\nend\n\nLoaded GW_genomics_2022_with_new_genome/GW2022_GBS_012NA_files/GW2022_all4plates.genotypes.SNPs_only.whole_genome.Jan2025.chrgw4A.KNNimputedMissing.jld2\nchrgw4A: 18467 SNPs from 257 individuals\n\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\nPC1 explains 8.10225% of the total variance.\n    PC2 explains 6.4409094%.\n\n\n\n\n\n\n\n\n\n\nscaffold = \"gw5\"    \nPCAmodel = plotOneScaffoldPCA(groups_to_plot_PCA, group_colors_PCA,    \n                            baseName, tagName, scaffold;\n                            flipPC1=true, flipPC2=true, showTitle=false)\nif savefig  #set to true to save\n    filename = string(\"Figure_\", scaffold, \"_PCA_allInds_from_Julia.png\")\n    save(filename, PCAmodel.PCAfig, px_per_unit = 2.0)\n    println(\"Saved \", filename)\nend\n\nLoaded GW_genomics_2022_with_new_genome/GW2022_GBS_012NA_files/GW2022_all4plates.genotypes.SNPs_only.whole_genome.Jan2025.chrgw5.KNNimputedMissing.jld2\nchrgw5: 55329 SNPs from 257 individuals\n\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\nPC1 explains 12.462368% of the total variance.\n    PC2 explains 6.6817045%.\n\n\n\n\n\n\n\n\n\n\nscaffold = \"gw6\"    \nPCAmodel = plotOneScaffoldPCA(groups_to_plot_PCA, group_colors_PCA,    \n                            baseName, tagName, scaffold;\n                            flipPC1=true, flipPC2=true, showTitle=false)\nif savefig  #set to true to save\n    filename = string(\"Figure_\", scaffold, \"_PCA_allInds_from_Julia.png\")\n    save(filename, PCAmodel.PCAfig, px_per_unit = 2.0)\n    println(\"Saved \", filename)\nend\n\nLoaded GW_genomics_2022_with_new_genome/GW2022_GBS_012NA_files/GW2022_all4plates.genotypes.SNPs_only.whole_genome.Jan2025.chrgw6.KNNimputedMissing.jld2\nchrgw6: 40175 SNPs from 257 individuals\n\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\nPC1 explains 10.859537% of the total variance.\n    PC2 explains 5.9476075%.\n\n\n\n\n\n\n\n\n\n\nscaffold = \"gw7\"    \nPCAmodel = plotOneScaffoldPCA(groups_to_plot_PCA, group_colors_PCA,    \n                            baseName, tagName, scaffold;\n                            flipPC1=true, flipPC2=false, showTitle=false)\nif savefig  #set to true to save\n    filename = string(\"Figure_\", scaffold, \"_PCA_allInds_from_Julia.png\")\n    save(filename, PCAmodel.PCAfig, px_per_unit = 2.0)\n    println(\"Saved \", filename)\nend\n\nLoaded GW_genomics_2022_with_new_genome/GW2022_GBS_012NA_files/GW2022_all4plates.genotypes.SNPs_only.whole_genome.Jan2025.chrgw7.KNNimputedMissing.jld2\nchrgw7: 36575 SNPs from 257 individuals\n\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\nPC1 explains 11.095749% of the total variance.\n    PC2 explains 6.085347%.\n\n\n\n\n\n\n\n\n\n\nscaffold = \"gw8\"    \nPCAmodel = plotOneScaffoldPCA(groups_to_plot_PCA, group_colors_PCA,    \n                            baseName, tagName, scaffold;\n                            flipPC1=true, flipPC2=false, showTitle=false)\nif savefig  #set to true to save\n    filename = string(\"Figure_\", scaffold, \"_PCA_allInds_from_Julia.png\")\n    save(filename, PCAmodel.PCAfig, px_per_unit = 2.0)\n    println(\"Saved \", filename)\nend\n\nLoaded GW_genomics_2022_with_new_genome/GW2022_GBS_012NA_files/GW2022_all4plates.genotypes.SNPs_only.whole_genome.Jan2025.chrgw8.KNNimputedMissing.jld2\nchrgw8: 37818 SNPs from 257 individuals\n\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\nPC1 explains 11.007252% of the total variance.\n    PC2 explains 5.915666%.\n\n\n\n\n\n\n\n\n\n\nscaffold = \"gw9\"    \nPCAmodel = plotOneScaffoldPCA(groups_to_plot_PCA, group_colors_PCA,    \n                            baseName, tagName, scaffold;\n                            flipPC1=true, flipPC2=true, showTitle=false)\nif savefig  #set to true to save\n    filename = string(\"Figure_\", scaffold, \"_PCA_allInds_from_Julia.png\")\n    save(filename, PCAmodel.PCAfig, px_per_unit = 2.0)\n    println(\"Saved \", filename)\nend\n\nLoaded GW_genomics_2022_with_new_genome/GW2022_GBS_012NA_files/GW2022_all4plates.genotypes.SNPs_only.whole_genome.Jan2025.chrgw9.KNNimputedMissing.jld2\nchrgw9: 38180 SNPs from 257 individuals\n\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\nPC1 explains 11.258947% of the total variance.\n    PC2 explains 5.450791%.\n\n\n\n\n\n\n\n\n\n\nscaffold = \"gw10\"    \nPCAmodel = plotOneScaffoldPCA(groups_to_plot_PCA, group_colors_PCA,    \n                            baseName, tagName, scaffold;\n                            flipPC1=true, flipPC2=true, showTitle=false)\nif savefig  #set to true to save\n    filename = string(\"Figure_\", scaffold, \"_PCA_allInds_from_Julia.png\")\n    save(filename, PCAmodel.PCAfig, px_per_unit = 2.0)\n    println(\"Saved \", filename)\nend\n\nLoaded GW_genomics_2022_with_new_genome/GW2022_GBS_012NA_files/GW2022_all4plates.genotypes.SNPs_only.whole_genome.Jan2025.chrgw10.KNNimputedMissing.jld2\nchrgw10: 26962 SNPs from 257 individuals\n\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\nPC1 explains 11.141077% of the total variance.\n    PC2 explains 5.4113245%.\n\n\n\n\n\n\n\n\n\n\nscaffold = \"gw11\"    \nPCAmodel = plotOneScaffoldPCA(groups_to_plot_PCA, group_colors_PCA,    \n                            baseName, tagName, scaffold;\n                            flipPC1=false, flipPC2=true, showTitle=false)\nif savefig  #set to true to save\n    filename = string(\"Figure_\", scaffold, \"_PCA_allInds_from_Julia.png\")\n    save(filename, PCAmodel.PCAfig, px_per_unit = 2.0)\n    println(\"Saved \", filename)\nend\n\nLoaded GW_genomics_2022_with_new_genome/GW2022_GBS_012NA_files/GW2022_all4plates.genotypes.SNPs_only.whole_genome.Jan2025.chrgw11.KNNimputedMissing.jld2\nchrgw11: 27683 SNPs from 257 individuals\n\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\nPC1 explains 10.932791% of the total variance.\n    PC2 explains 5.910336%.\n\n\n\n\n\n\n\n\n\n\nscaffold = \"gw12\"    \nPCAmodel = plotOneScaffoldPCA(groups_to_plot_PCA, group_colors_PCA,    \n                            baseName, tagName, scaffold;\n                            flipPC1=true, flipPC2=true, showTitle=false)\nif savefig  #set to true to save\n    filename = string(\"Figure_\", scaffold, \"_PCA_allInds_from_Julia.png\")\n    save(filename, PCAmodel.PCAfig, px_per_unit = 2.0)\n    println(\"Saved \", filename)\nend\n\nLoaded GW_genomics_2022_with_new_genome/GW2022_GBS_012NA_files/GW2022_all4plates.genotypes.SNPs_only.whole_genome.Jan2025.chrgw12.KNNimputedMissing.jld2\nchrgw12: 33294 SNPs from 257 individuals\n\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\nPC1 explains 11.808325% of the total variance.\n    PC2 explains 5.742847%.\n\n\n\n\n\n\n\n\n\n\nscaffold = \"gw13\"    \nPCAmodel = plotOneScaffoldPCA(groups_to_plot_PCA, group_colors_PCA,    \n                            baseName, tagName, scaffold;\n                            flipPC1=false, flipPC2=true, showTitle=false)\nif savefig  #set to true to save\n    filename = string(\"Figure_\", scaffold, \"_PCA_allInds_from_Julia.png\")\n    save(filename, PCAmodel.PCAfig, px_per_unit = 2.0)\n    println(\"Saved \", filename)\nend\n\nLoaded GW_genomics_2022_with_new_genome/GW2022_GBS_012NA_files/GW2022_all4plates.genotypes.SNPs_only.whole_genome.Jan2025.chrgw13.KNNimputedMissing.jld2\nchrgw13: 33543 SNPs from 257 individuals\n\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\nPC1 explains 13.365666% of the total variance.\n    PC2 explains 7.26101%.\n\n\n\n\n\n\n\n\n\n\nscaffold = \"gw14\"    \nPCAmodel = plotOneScaffoldPCA(groups_to_plot_PCA, group_colors_PCA,    \n                            baseName, tagName, scaffold;\n                            flipPC1=true, flipPC2=true, showTitle=false)\nif savefig  #set to true to save\n    filename = string(\"Figure_\", scaffold, \"_PCA_allInds_from_Julia.png\")\n    save(filename, PCAmodel.PCAfig, px_per_unit = 2.0)\n    println(\"Saved \", filename)\nend\n\nLoaded GW_genomics_2022_with_new_genome/GW2022_GBS_012NA_files/GW2022_all4plates.genotypes.SNPs_only.whole_genome.Jan2025.chrgw14.KNNimputedMissing.jld2\nchrgw14: 30969 SNPs from 257 individuals\n\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\nPC1 explains 11.530412% of the total variance.\n    PC2 explains 6.537424%.\n\n\n\n\n\n\n\n\n\n\nscaffold = \"gw15\"    \nPCAmodel = plotOneScaffoldPCA(groups_to_plot_PCA, group_colors_PCA,    \n                            baseName, tagName, scaffold;\n                            flipPC1=true, flipPC2=false, showTitle=false)\nif savefig  #set to true to save\n    filename = string(\"Figure_\", scaffold, \"_PCA_allInds_from_Julia.png\")\n    save(filename, PCAmodel.PCAfig, px_per_unit = 2.0)\n    println(\"Saved \", filename)\nend\n\nLoaded GW_genomics_2022_with_new_genome/GW2022_GBS_012NA_files/GW2022_all4plates.genotypes.SNPs_only.whole_genome.Jan2025.chrgw15.KNNimputedMissing.jld2\nchrgw15: 27517 SNPs from 257 individuals\n\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\nPC1 explains 12.024455% of the total variance.\n    PC2 explains 6.3510194%.\n\n\n\n\n\n\n\n\n\n\nscaffold = \"gw17\"    \nPCAmodel = plotOneScaffoldPCA(groups_to_plot_PCA, group_colors_PCA,    \n                            baseName, tagName, scaffold;\n                            flipPC1=true, flipPC2=true, showTitle=false)\nif savefig  #set to true to save\n    filename = string(\"Figure_\", scaffold, \"_PCA_allInds_from_Julia.png\")\n    save(filename, PCAmodel.PCAfig, px_per_unit = 2.0)\n    println(\"Saved \", filename)\nend\n\nLoaded GW_genomics_2022_with_new_genome/GW2022_GBS_012NA_files/GW2022_all4plates.genotypes.SNPs_only.whole_genome.Jan2025.chrgw17.KNNimputedMissing.jld2\nchrgw17: 26313 SNPs from 257 individuals\n\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\nPC1 explains 10.918732% of the total variance.\n    PC2 explains 6.300656%.\n\n\n\n\n\n\n\n\n\n\nscaffold = \"gw18\"    \nPCAmodel = plotOneScaffoldPCA(groups_to_plot_PCA, group_colors_PCA,    \n                            baseName, tagName, scaffold;\n                            flipPC1=true, flipPC2=true, showTitle=false)\nif savefig  #set to true to save\n    filename = string(\"Figure_\", scaffold, \"_PCA_allInds_from_Julia.png\")\n    save(filename, PCAmodel.PCAfig, px_per_unit = 2.0)\n    println(\"Saved \", filename)\nend\n\nLoaded GW_genomics_2022_with_new_genome/GW2022_GBS_012NA_files/GW2022_all4plates.genotypes.SNPs_only.whole_genome.Jan2025.chrgw18.KNNimputedMissing.jld2\nchrgw18: 19359 SNPs from 257 individuals\n\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\nPC1 explains 13.948867% of the total variance.\n    PC2 explains 8.864708%.\n\n\n\n\n\n\n\n\n\n\nscaffold = \"gw19\"    \nPCAmodel = plotOneScaffoldPCA(groups_to_plot_PCA, group_colors_PCA,    \n                            baseName, tagName, scaffold;\n                            flipPC1=true, flipPC2=true, showTitle=false)\nif savefig  #set to true to save\n    filename = string(\"Figure_\", scaffold, \"_PCA_allInds_from_Julia.png\")\n    save(filename, PCAmodel.PCAfig, px_per_unit = 2.0)\n    println(\"Saved \", filename)\nend\n\nLoaded GW_genomics_2022_with_new_genome/GW2022_GBS_012NA_files/GW2022_all4plates.genotypes.SNPs_only.whole_genome.Jan2025.chrgw19.KNNimputedMissing.jld2\nchrgw19: 25414 SNPs from 257 individuals\n\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\nPC1 explains 9.869666% of the total variance.\n    PC2 explains 5.4673886%.\n\n\n\n\n\n\n\n\n\n\nscaffold = \"gw20\"    \nPCAmodel = plotOneScaffoldPCA(groups_to_plot_PCA, group_colors_PCA,    \n                            baseName, tagName, scaffold;\n                            flipPC1=true, flipPC2=true, showTitle=false)\nif savefig  #set to true to save\n    filename = string(\"Figure_\", scaffold, \"_PCA_allInds_from_Julia.png\")\n    save(filename, PCAmodel.PCAfig, px_per_unit = 2.0)\n    println(\"Saved \", filename)\nend\n\nLoaded GW_genomics_2022_with_new_genome/GW2022_GBS_012NA_files/GW2022_all4plates.genotypes.SNPs_only.whole_genome.Jan2025.chrgw20.KNNimputedMissing.jld2\nchrgw20: 32739 SNPs from 257 individuals\n\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\nPC1 explains 13.309981% of the total variance.\n    PC2 explains 8.098767%.\n\n\n\n\n\n\n\n\n\n\nscaffold = \"gw21\"    \nPCAmodel = plotOneScaffoldPCA(groups_to_plot_PCA, group_colors_PCA,    \n                            baseName, tagName, scaffold;\n                            flipPC1=true, flipPC2=true, showTitle=false)\nif savefig  #set to true to save\n    filename = string(\"Figure_\", scaffold, \"_PCA_allInds_from_Julia.png\")\n    save(filename, PCAmodel.PCAfig, px_per_unit = 2.0)\n    println(\"Saved \", filename)\nend\n\nLoaded GW_genomics_2022_with_new_genome/GW2022_GBS_012NA_files/GW2022_all4plates.genotypes.SNPs_only.whole_genome.Jan2025.chrgw21.KNNimputedMissing.jld2\nchrgw21: 13321 SNPs from 257 individuals\nPC1 explains 10.157121% of the total variance.\n    PC2 explains 5.943965%.\n\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\n\nscaffold = \"gw22\"    \nPCAmodel = plotOneScaffoldPCA(groups_to_plot_PCA, group_colors_PCA,    \n                            baseName, tagName, scaffold;\n                            flipPC1=true, flipPC2=false, showTitle=false)\nif savefig  #set to true to save\n    filename = string(\"Figure_\", scaffold, \"_PCA_allInds_from_Julia.png\")\n    save(filename, PCAmodel.PCAfig, px_per_unit = 2.0)\n    println(\"Saved \", filename)\nend\n\nLoaded GW_genomics_2022_with_new_genome/GW2022_GBS_012NA_files/GW2022_all4plates.genotypes.SNPs_only.whole_genome.Jan2025.chrgw22.KNNimputedMissing.jld2\nchrgw22: 5473 SNPs from 257 individuals\nPC1 explains 13.285248% of the total variance.\n    PC2 explains 8.581498%.\n\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\n\nscaffold = \"gw23\"    \nPCAmodel = plotOneScaffoldPCA(groups_to_plot_PCA, group_colors_PCA,    \n                            baseName, tagName, scaffold;\n                            flipPC1=true, flipPC2=true, showTitle=false)\nif savefig  #set to true to save\n    filename = string(\"Figure_\", scaffold, \"_PCA_allInds_from_Julia.png\")\n    save(filename, PCAmodel.PCAfig, px_per_unit = 2.0)\n    println(\"Saved \", filename)\nend\n\nLoaded GW_genomics_2022_with_new_genome/GW2022_GBS_012NA_files/GW2022_all4plates.genotypes.SNPs_only.whole_genome.Jan2025.chrgw23.KNNimputedMissing.jld2\nchrgw23: 13949 SNPs from 257 individuals\nPC1 explains 10.519924\n\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\n% of the total variance.\n    PC2 explains 6.485574%.\n\n\n\n\n\n\n\n\n\n\nscaffold = \"gw24\"    \nPCAmodel = plotOneScaffoldPCA(groups_to_plot_PCA, group_colors_PCA,    \n                            baseName, tagName, scaffold;\n                            flipPC1=true, flipPC2=true, showTitle=false)\nif savefig  #set to true to save\n    filename = string(\"Figure_\", scaffold, \"_PCA_allInds_from_Julia.png\")\n    save(filename, PCAmodel.PCAfig, px_per_unit = 2.0)\n    println(\"Saved \", filename)\nend\n\nLoaded GW_genomics_2022_with_new_genome/GW2022_GBS_012NA_files/GW2022_all4plates.genotypes.SNPs_only.whole_genome.Jan2025.chrgw24.KNNimputedMissing.jld2\nchrgw24: 13821 SNPs from 257 individuals\nPC1 explains 8.532888\n\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\n% of the total variance.\n    PC2 explains 5.108733%.\n\n\n\n\n\n\n\n\n\n\nscaffold = \"gw25\"    \nPCAmodel = plotOneScaffoldPCA(groups_to_plot_PCA, group_colors_PCA,    \n                            baseName, tagName, scaffold;\n                            flipPC1=true, flipPC2=true, showTitle=false)\nif savefig  #set to true to save\n    filename = string(\"Figure_\", scaffold, \"_PCA_allInds_from_Julia.png\")\n    save(filename, PCAmodel.PCAfig, px_per_unit = 2.0)\n    println(\"Saved \", filename)\nend\n\nLoaded GW_genomics_2022_with_new_genome/GW2022_GBS_012NA_files/GW2022_all4plates.genotypes.SNPs_only.whole_genome.Jan2025.chrgw25.KNNimputedMissing.jld2\nchrgw25: 3794 SNPs from 257 individuals\nPC1 explains 17.002586% of the total variance.\n    PC2 explains 11.373987%.\n\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\n\nscaffold = \"gw26\"    \nPCAmodel = plotOneScaffoldPCA(groups_to_plot_PCA, group_colors_PCA,    \n                            baseName, tagName, scaffold;\n                            flipPC1=true, flipPC2=true, showTitle=false)\nif savefig  #set to true to save\n    filename = string(\"Figure_\", scaffold, \"_PCA_allInds_from_Julia.png\")\n    save(filename, PCAmodel.PCAfig, px_per_unit = 2.0)\n    println(\"Saved \", filename)\nend\n\nLoaded GW_genomics_2022_with_new_genome/GW2022_GBS_012NA_files/GW2022_all4plates.genotypes.SNPs_only.whole_genome.Jan2025.chrgw26.KNNimputedMissing.jld2\nchrgw26: 14303 SNPs from 257 individuals\nPC1 explains 14.828697\n\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\n% of the total variance.\n    PC2 explains 7.8627186%.\n\n\n\n\n\n\n\n\n\n\nscaffold = \"gw27\"    \nPCAmodel = plotOneScaffoldPCA(groups_to_plot_PCA, group_colors_PCA,    \n                            baseName, tagName, scaffold;\n                            flipPC1=true, flipPC2=true, showTitle=false)\nif savefig  #set to true to save\n    filename = string(\"Figure_\", scaffold, \"_PCA_allInds_from_Julia.png\")\n    save(filename, PCAmodel.PCAfig, px_per_unit = 2.0)\n    println(\"Saved \", filename)\nend\n\nLoaded GW_genomics_2022_with_new_genome/GW2022_GBS_012NA_files/GW2022_all4plates.genotypes.SNPs_only.whole_genome.Jan2025.chrgw27.KNNimputedMissing.jld2\nchrgw27: 9684 SNPs from 257 individuals\nPC1 explains 12.95481\n\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\n% of the total variance.\n    PC2 explains 7.359955%.\n\n\n\n\n\n\n\n\n\n\nscaffold = \"gw28\"    \nPCAmodel = plotOneScaffoldPCA(groups_to_plot_PCA, group_colors_PCA,    \n                            baseName, tagName, scaffold;\n                            flipPC1=true, flipPC2=true, showTitle=false)\nif savefig  #set to true to save\n    filename = string(\"Figure_\", scaffold, \"_PCA_allInds_from_Julia.png\")\n    save(filename, PCAmodel.PCAfig, px_per_unit = 2.0)\n    println(\"Saved \", filename)\nend\n\nLoaded GW_genomics_2022_with_new_genome/GW2022_GBS_012NA_files/GW2022_all4plates.genotypes.SNPs_only.whole_genome.Jan2025.chrgw28.KNNimputedMissing.jld2\nchrgw28: 11180 SNPs from 257 individuals\n\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\nPC1 explains 13.7301655% of the total variance.\n    PC2 explains 8.083617%.",
    "crumbs": [
      "Home",
      "Greenish Warbler PCA plots"
    ]
  },
  {
    "objectID": "GW_PCAplots.html#make-z-chromosome-pca",
    "href": "GW_PCAplots.html#make-z-chromosome-pca",
    "title": "Greenish Warbler PCA plots",
    "section": "Make Z chromosome PCA:",
    "text": "Make Z chromosome PCA:\n\nregionText = \"chrgwZ_cleaned\"\nfilename = string(baseName, tagName, regionText, \".KNNimputedMissing.jld2\")\nimputed_genos = load(filename, \"imputed_genos\")\nind_with_metadata_indFiltered = load(filename, \"ind_with_metadata_indFiltered\")\npos_SNP_filtered_region = load(filename, \"pos_SNP_filtered_region\")\nprintln(string(\"Loaded \",filename))\nprintln(string(regionText, \": \", size(imputed_genos,2), \" SNPs from \", size(imputed_genos,1), \" individuals\"))\nflipPC1 = true\nflipPC2 = true\nPCAmodel = plotPCA(imputed_genos, ind_with_metadata_indFiltered, \n        groups_to_plot_PCA, group_colors_PCA; \n        sampleSet = \"greenish warblers\", regionText=regionText,\n        flip1 = flipPC1, flip2 = flipPC2,\n        lineOpacity = 0.7, fillOpacity = 0.6,\n        symbolSize = 14, showTitle = false,\n        xLabelText = string(\"Chromosome Z PC1\"), yLabelText = string(\"Chromosome Z PC2\"),\n        showPlot = true)\n\ntotalObservationVariance = var(PCAmodel.model) \nPC1_variance, PC2_variance = principalvars(PCAmodel.model)[1:2]\nPC1_prop_variance = PC1_variance / totalObservationVariance\nPC2_prop_variance = PC2_variance / totalObservationVariance\nprintln(\"PC1 explains \", 100*PC1_prop_variance, \"% of the total variance.\nPC2 explains \", 100*PC2_prop_variance, \"%.\")\n        \n# add position of reference genome\nrefGenomePCAposition = predict(PCAmodel.model, zeros(size(imputed_genos, 2)))\nflipPC1 && (refGenomePCAposition[1] *= -1)  # this flips PC1 if flipPC1 = true\nflipPC2 && (refGenomePCAposition[2] *= -1)  # same for PC2\nCairoMakie.scatter!(refGenomePCAposition[1], refGenomePCAposition[2], marker = :diamond, color=\"black\", markersize=14, strokewidth=0.5)\ntry\n    display(PCAmodel.PCAfig)\ncatch\n    println(\"NOTICE: Figure for \", regionText, \" could not be shown due to an unknown error.\")\nend\nif savefig  #set to true to save\n    filename = string(\"Figure_gwZ_PCA_allInds_from_Julia.png\")\n    save(filename, PCAmodel.PCAfig, px_per_unit = 2.0)\n    println(\"Saved \", filename)\nend\n\nLoaded GW_genomics_2022_with_new_genome/GW2022_GBS_012NA_files/GW2022_all4plates.genotypes.SNPs_only.whole_genome.Jan2025.chrgwZ_cleaned.KNNimputedMissing.jld2\nchrgwZ_cleaned: 51505 SNPs from 257 individuals\n\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\n\n\n\n\n\n\n\nPC1 explains 17.929323% of the total variance.\nPC2 explains 9.7906275%.\n\n\n\n\n\n\n\n\n\n\nThe below script will produce a bunch of PCAs for different scaffolds, but will not appropriately flip the axes of each as the above ones do (so making inactive):\nscaffolds_to_show_PCA = \"gw\" .* string.(vcat(1:15, 17:28))\npush!(scaffolds_to_show_PCA, \"gw1A\", \"gw4A\", \"gwZ_cleaned\")  # add three other scaffolds\n\nfor i in eachindex(scaffolds_to_show_PCA)\n    chrom = scaffolds_to_show_PCA[i]\n    PCAmodel = plotOneScaffoldPCA(groups_to_plot_PCA,\n                                group_colors_PCA,    \n                                baseName, tagName, chrom;\n                                flipPC1=true, flipPC2=true, showTitle=true)\nend",
    "crumbs": [
      "Home",
      "Greenish Warbler PCA plots"
    ]
  },
  {
    "objectID": "GreenishWarblerGenomics2025.html",
    "href": "GreenishWarblerGenomics2025.html",
    "title": "Greenish Warbler Genomic Analysis",
    "section": "",
    "text": "This page contains notes and code describing the data analysis for a manuscript on Greenish Warbler genomics. I’ve been working with the data for several years, and the R and then Julia code has been in development for a while. This is a Quarto notebook, which can run and display the results of Julia (or other) code blocks, along with text narration, and output in html, pdf, Word, etc.\nThe Julia code here is loosely based on R code written for Greenish Warbler analysis (Irwin et al. 2016, Molecular Ecology), and then the North American warbler analyses (Irwin et al. 2018, Molecular Ecology), and then my (unpublished) 2019 Greenish Warbler analysis. Most recently, this was adapted from the scripts called GW2022_R_analysis_script.R and IrwinLabGenomicsAnalysisScript.jl but has had a lot of opimizations since then. The SNP data here are a result of GBS reads mapped to our new Biozeron genome assembly for a greenish warbler from southern China (GW2022ref.fa).",
    "crumbs": [
      "Home",
      "Greenish Warbler Genomic Analysis"
    ]
  },
  {
    "objectID": "GreenishWarblerGenomics2025.html#load-the-genomic-data",
    "href": "GreenishWarblerGenomics2025.html#load-the-genomic-data",
    "title": "Greenish Warbler Genomic Analysis",
    "section": "Load the genomic data",
    "text": "Load the genomic data\n\n# load metadata\nmetadata = DataFrame(CSV.File(metadataFile)) # the CSV.File function interprets the correct delimiter\nnum_metadata_cols = ncol(metadata)\nnum_individuals = nrow(metadata) \n# read in individual names for this dataset\nindividuals_file_name = string(baseName, filenameTextMiddle, missingGenotypeThreshold, filenameTextEnd, \".012.indv\")\nind = DataFrame(CSV.File(individuals_file_name; header=[\"ind\"], types=[String])) \nindNum = size(ind, 1) # number of individuals\nif num_individuals != indNum\n    println(\"WARNING: number of rows in metadata file different than number of individuals in .indv file\")\nend\n# read in position data for this dataset\nposition_file_name = string(baseName, filenameTextMiddle, missingGenotypeThreshold, filenameTextEnd, \".012.pos\")\npos_whole_genome = DataFrame(CSV.File(position_file_name; header=[\"chrom\", \"position\"], types=[String, Int]))\n# read in genotype data \ngenotype_file_name = string(baseName, filenameTextMiddle, missingGenotypeThreshold, filenameTextEnd, \".012minus1\") \n@time if 1 &lt;= indNum &lt;= 127   \n    geno = readdlm(genotype_file_name, '\\t', Int8, '\\n'); # this has been sped up dramatically, by first converting \"NA\" to -1\nelseif 128 &lt;= indNum &lt;= 32767\n    geno = readdlm(genotype_file_name, '\\t', Int16, '\\n'); # this needed for first column, which is number of individual; Int16 not much slower on import than Int8\nelse\n    print(\"Error: Number of individuals in .indv appears outside of range from 1 to 32767\")\nend\nloci_count = size(geno, 2) - 1   # because the first column is not a SNP (just a count from zero)\nprint(string(\"Read in genotypic data at \", loci_count,\" loci for \", indNum, \" individual runs. \\n\"))\n\n 60.875738 seconds (4.50 M allocations: 16.001 GiB, 2.05% gc time, 1.16% compilation time)\nRead in genotypic data at 2431709 loci for 310 individual runs. \n\n\n\nCheck that individuals are same in genotype data and metadata\n\nind_with_metadata = hcat(ind, metadata)\nprintln(ind_with_metadata)\nprintln()  # prints a line break \nif isequal(ind_with_metadata.ind, ind_with_metadata.ID)\n    println(\"GOOD NEWS: names of individual runs in metadata file and genotype ind file match perfectly.\")\nelse\n    println(\"WARNING: names of individual runs in metadata file and genotype ind file do not completely match.\")\nend\n\n310×6 DataFrame\n Row │ ind                             ID                              location  group           Fst_group       plot_order \n     │ String                          String31                        String7   String15        String15        Float64    \n─────┼──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────\n   1 │ GW_Armando_plate1_AB1           GW_Armando_plate1_AB1           AB        vir             vir                 20.01\n   2 │ GW_Armando_plate1_JF07G02       GW_Armando_plate1_JF07G02       ST        plumb           plumb              108.0\n   3 │ GW_Armando_plate1_JF07G03       GW_Armando_plate1_JF07G03       ST        plumb           plumb              109.0\n   4 │ GW_Armando_plate1_JF07G04       GW_Armando_plate1_JF07G04       ST        plumb           plumb              110.0\n   5 │ GW_Armando_plate1_JF08G02       GW_Armando_plate1_JF08G02       ST        plumb           plumb              111.0\n   6 │ GW_Armando_plate1_JF09G01       GW_Armando_plate1_JF09G01       ST        plumb           plumb              112.0\n   7 │ GW_Armando_plate1_JF09G02       GW_Armando_plate1_JF09G02       ST        plumb           plumb              113.0\n   8 │ GW_Armando_plate1_JF10G03       GW_Armando_plate1_JF10G03       ST        plumb_vir       plumb_vir          170.0\n   9 │ GW_Armando_plate1_JF11G01       GW_Armando_plate1_JF11G01       ST        plumb           plumb              114.0\n  10 │ GW_Armando_plate1_JF12G01       GW_Armando_plate1_JF12G01       ST        plumb           plumb              115.0\n  11 │ GW_Armando_plate1_JF12G02       GW_Armando_plate1_JF12G02       ST        plumb           plumb              116.0\n  12 │ GW_Armando_plate1_JF12G04       GW_Armando_plate1_JF12G04       ST_vi     vir             vir                 24.001\n  13 │ GW_Armando_plate1_JF13G01       GW_Armando_plate1_JF13G01       ST        plumb           plumb              117.0\n  14 │ GW_Armando_plate1_JF15G03       GW_Armando_plate1_JF15G03       DV        plumb           plumb              103.0\n  15 │ GW_Armando_plate1_JF16G01       GW_Armando_plate1_JF16G01       DV_vi     plumb_vir       vir                 24.041\n  16 │ GW_Armando_plate1_JF20G01       GW_Armando_plate1_JF20G01       MB        plumb           plumb               94.0\n  17 │ GW_Armando_plate1_JF22G01       GW_Armando_plate1_JF22G01       MB        plumb           plumb               95.0\n  18 │ GW_Armando_plate1_JF23G01       GW_Armando_plate1_JF23G01       VB        plumb           plumb               98.0\n  19 │ GW_Armando_plate1_JF23G02       GW_Armando_plate1_JF23G02       VB        plumb           plumb               99.0\n  20 │ GW_Armando_plate1_JF24G02       GW_Armando_plate1_JF24G02       VB        plumb           plumb              100.0\n  21 │ GW_Armando_plate1_JF26G01       GW_Armando_plate1_JF26G01       ST        plumb           plumb              118.0\n  22 │ GW_Armando_plate1_JF27G01       GW_Armando_plate1_JF27G01       ST        plumb           plumb              119.0\n  23 │ GW_Armando_plate1_JF29G01       GW_Armando_plate1_JF29G01       ST        plumb           plumb              120.0\n  24 │ GW_Armando_plate1_JF29G02       GW_Armando_plate1_JF29G02       ST        plumb           plumb              121.0\n  25 │ GW_Armando_plate1_JF29G03       GW_Armando_plate1_JF29G03       ST        plumb           plumb              122.0\n  26 │ GW_Armando_plate1_JG02G02       GW_Armando_plate1_JG02G02       PR        plumb           plumb              145.0\n  27 │ GW_Armando_plate1_JG02G04       GW_Armando_plate1_JG02G04       PR        plumb           plumb              146.0\n  28 │ GW_Armando_plate1_JG08G01       GW_Armando_plate1_JG08G01       ST        plumb           plumb              123.0\n  29 │ GW_Armando_plate1_JG08G02       GW_Armando_plate1_JG08G02       ST        plumb           plumb              124.0\n  30 │ GW_Armando_plate1_JG10G01       GW_Armando_plate1_JG10G01       ST        plumb           plumb              125.0\n  31 │ GW_Armando_plate1_JG12G01       GW_Armando_plate1_JG12G01       ST        plumb           plumb              126.0\n  32 │ GW_Armando_plate1_JG17G01       GW_Armando_plate1_JG17G01       ST        plumb_vir       plumb              127.0\n  33 │ GW_Armando_plate1_NO_BC_TTGW05  GW_Armando_plate1_NO_BC_TTGW05  blank     blank           blank              -99.0\n  34 │ GW_Armando_plate1_NO_DNA        GW_Armando_plate1_NO_DNA        blank     blank           blank              -99.0\n  35 │ GW_Armando_plate1_RF20G01       GW_Armando_plate1_RF20G01       BJ        obs_plumb       plumb_BJ            77.501\n  36 │ GW_Armando_plate1_RF29G02       GW_Armando_plate1_RF29G02       BJ        obs_plumb       plumb_BJ            77.502\n  37 │ GW_Armando_plate1_TL3           GW_Armando_plate1_TL3           TL        vir             vir                 11.01\n  38 │ GW_Armando_plate1_TTGW01        GW_Armando_plate1_TTGW01        MN        troch_MN        troch_west          53.0\n  39 │ GW_Armando_plate1_TTGW05_rep1   GW_Armando_plate1_TTGW05_rep1   MN_rep    troch_MN_rep    troch_west_rep      53.0\n  40 │ GW_Armando_plate1_TTGW05_rep2   GW_Armando_plate1_TTGW05_rep2   MN        troch_MN        troch_west          53.0\n  41 │ GW_Armando_plate1_TTGW06        GW_Armando_plate1_TTGW06        SU        lud_Sukhto      lud_central         47.0\n  42 │ GW_Armando_plate1_TTGW07        GW_Armando_plate1_TTGW07        SU        lud_Sukhto      lud_central         47.0\n  43 │ GW_Armando_plate1_TTGW10        GW_Armando_plate1_TTGW10        SU        lud_Sukhto      lud_central         47.0\n  44 │ GW_Armando_plate1_TTGW11        GW_Armando_plate1_TTGW11        SU        lud_Sukhto      lud_central         47.0\n  45 │ GW_Armando_plate1_TTGW13        GW_Armando_plate1_TTGW13        TH        lud_Thallighar  lud_central         43.0\n  46 │ GW_Armando_plate1_TTGW17        GW_Armando_plate1_TTGW17        TH        lud_Thallighar  lud_central         43.0\n  47 │ GW_Armando_plate1_TTGW19        GW_Armando_plate1_TTGW19        TH        lud_Thallighar  lud_central         43.0\n  48 │ GW_Armando_plate1_TTGW21        GW_Armando_plate1_TTGW21        SR        lud_Sural       lud_central         45.0\n  49 │ GW_Armando_plate1_TTGW22        GW_Armando_plate1_TTGW22        SR        lud_Sural       lud_central         45.0\n  50 │ GW_Armando_plate1_TTGW23        GW_Armando_plate1_TTGW23        SR        lud_Sural       lud_central         45.0\n  51 │ GW_Armando_plate1_TTGW29        GW_Armando_plate1_TTGW29        SR        lud_Sural       lud_central         45.0\n  52 │ GW_Armando_plate1_TTGW52        GW_Armando_plate1_TTGW52        NG        lud_Nainaghar   lud_central         49.0\n  53 │ GW_Armando_plate1_TTGW53        GW_Armando_plate1_TTGW53        NG        lud_Nainaghar   lud_central         49.0\n  54 │ GW_Armando_plate1_TTGW55        GW_Armando_plate1_TTGW55        NG        lud_Nainaghar   lud_central         49.0\n  55 │ GW_Armando_plate1_TTGW57        GW_Armando_plate1_TTGW57        NG        lud_Nainaghar   lud_central         49.0\n  56 │ GW_Armando_plate1_TTGW58        GW_Armando_plate1_TTGW58        NG        lud_Nainaghar   lud_central         49.0\n  57 │ GW_Armando_plate1_TTGW59        GW_Armando_plate1_TTGW59        NG        lud_Nainaghar   lud_central         49.0\n  58 │ GW_Armando_plate1_TTGW63        GW_Armando_plate1_TTGW63        SP        lud_Spiti       troch_west          55.0\n  59 │ GW_Armando_plate1_TTGW64        GW_Armando_plate1_TTGW64        SP        lud_Spiti       troch_west          55.0\n  60 │ GW_Armando_plate1_TTGW65        GW_Armando_plate1_TTGW65        SP        lud_Spiti       troch_west          55.0\n  61 │ GW_Armando_plate1_TTGW66        GW_Armando_plate1_TTGW66        SP        lud_Spiti       troch_west          55.0\n  62 │ GW_Armando_plate1_TTGW68        GW_Armando_plate1_TTGW68        SP        lud_Spiti       troch_west          55.0\n  63 │ GW_Armando_plate1_TTGW70        GW_Armando_plate1_TTGW70        SA        lud_Sathrundi   lud_Sath            41.0\n  64 │ GW_Armando_plate1_TTGW71        GW_Armando_plate1_TTGW71        SA        lud_Sathrundi   lud_Sath            41.0\n  65 │ GW_Armando_plate1_TTGW72        GW_Armando_plate1_TTGW72        SA        lud_Sathrundi   lud_Sath            41.0\n  66 │ GW_Armando_plate1_TTGW74        GW_Armando_plate1_TTGW74        SA        lud_Sathrundi   lud_Sath            41.0\n  67 │ GW_Armando_plate1_TTGW78        GW_Armando_plate1_TTGW78        SA        lud_Sathrundi   lud_Sath            41.0\n  68 │ GW_Armando_plate1_TTGW_15_05    GW_Armando_plate1_TTGW_15_05    SR        lud_Sural       lud_central         45.0\n  69 │ GW_Armando_plate1_TTGW_15_07    GW_Armando_plate1_TTGW_15_07    SR        lud_Sural       lud_central         45.0\n  70 │ GW_Armando_plate1_TTGW_15_08    GW_Armando_plate1_TTGW_15_08    SR        lud_Sural       lud_central         45.0\n  71 │ GW_Armando_plate1_TTGW_15_09    GW_Armando_plate1_TTGW_15_09    SR        lud_Sural       lud_central         45.0\n  72 │ GW_Armando_plate1_UY1           GW_Armando_plate1_UY1           UY        plumb           plumb               87.0\n  73 │ GW_Armando_plate2_IL2           GW_Armando_plate2_IL2           IL_rep    plumb_rep       plumb_rep           84.0\n  74 │ GW_Armando_plate2_JE31G01       GW_Armando_plate2_JE31G01       VB_vi     vir_misID       vir                 24.002\n  75 │ GW_Armando_plate2_JF03G01       GW_Armando_plate2_JF03G01       ST_vi     vir_misID       vir                 24.003\n  76 │ GW_Armando_plate2_JF03G02       GW_Armando_plate2_JF03G02       VB_vi     vir_misID       vir                 24.004\n  77 │ GW_Armando_plate2_JF07G01       GW_Armando_plate2_JF07G01       ST        plumb           plumb              128.0\n  78 │ GW_Armando_plate2_JF08G04       GW_Armando_plate2_JF08G04       ST        plumb           plumb              129.0\n  79 │ GW_Armando_plate2_JF10G02       GW_Armando_plate2_JF10G02       ST        plumb           plumb              130.0\n  80 │ GW_Armando_plate2_JF11G02       GW_Armando_plate2_JF11G02       ST        plumb           plumb              131.0\n  81 │ GW_Armando_plate2_JF12G03       GW_Armando_plate2_JF12G03       ST        plumb           plumb              132.0\n  82 │ GW_Armando_plate2_JF12G05       GW_Armando_plate2_JF12G05       ST        plumb           plumb              133.0\n  83 │ GW_Armando_plate2_JF13G02       GW_Armando_plate2_JF13G02       ST        plumb           plumb              134.0\n  84 │ GW_Armando_plate2_JF14G01       GW_Armando_plate2_JF14G01       DV        plumb           plumb              104.0\n  85 │ GW_Armando_plate2_JF14G02       GW_Armando_plate2_JF14G02       DV        plumb           plumb              105.0\n  86 │ GW_Armando_plate2_JF15G01       GW_Armando_plate2_JF15G01       DV        plumb           plumb              106.0\n  87 │ GW_Armando_plate2_JF15G02       GW_Armando_plate2_JF15G02       DV        plumb           plumb              107.0\n  88 │ GW_Armando_plate2_JF16G02       GW_Armando_plate2_JF16G02       DV_vi     plumb_vir       vir                 24.042\n  89 │ GW_Armando_plate2_JF19G01       GW_Armando_plate2_JF19G01       MB        plumb           plumb               96.0\n  90 │ GW_Armando_plate2_JF20G02       GW_Armando_plate2_JF20G02       MB        plumb           plumb               97.0\n  91 │ GW_Armando_plate2_JF24G01       GW_Armando_plate2_JF24G01       VB        plumb           plumb              101.0\n  92 │ GW_Armando_plate2_JF24G03       GW_Armando_plate2_JF24G03       ST        plumb           plumb              135.0\n  93 │ GW_Armando_plate2_JF25G01       GW_Armando_plate2_JF25G01       VB        plumb           plumb              102.0\n  94 │ GW_Armando_plate2_JF26G02       GW_Armando_plate2_JF26G02       ST        plumb           plumb              136.0\n  95 │ GW_Armando_plate2_JF27G02       GW_Armando_plate2_JF27G02       ST        plumb           plumb              137.0\n  96 │ GW_Armando_plate2_JF30G01       GW_Armando_plate2_JF30G01       ST_vi     vir_misID       vir                 24.005\n  97 │ GW_Armando_plate2_JG01G01       GW_Armando_plate2_JG01G01       PR        plumb           plumb              147.0\n  98 │ GW_Armando_plate2_JG02G01       GW_Armando_plate2_JG02G01       PR        plumb           plumb              148.0\n  99 │ GW_Armando_plate2_JG02G03       GW_Armando_plate2_JG02G03       PR        plumb           plumb              149.0\n 100 │ GW_Armando_plate2_JG10G02       GW_Armando_plate2_JG10G02       ST        plumb           plumb              138.0\n 101 │ GW_Armando_plate2_JG10G03       GW_Armando_plate2_JG10G03       ST        plumb           plumb              139.0\n 102 │ GW_Armando_plate2_JG12G02       GW_Armando_plate2_JG12G02       ST        plumb           plumb              140.0\n 103 │ GW_Armando_plate2_JG12G03       GW_Armando_plate2_JG12G03       ST        plumb           plumb              141.0\n 104 │ GW_Armando_plate2_LN11          GW_Armando_plate2_LN11          LN_rep    troch_LN_rep    troch_LN_rep        65.01\n 105 │ GW_Armando_plate2_LN2           GW_Armando_plate2_LN2           LN        troch_LN        troch_LN            58.01\n 106 │ GW_Armando_plate2_NO_BC_TTGW05  GW_Armando_plate2_NO_BC_TTGW05  blank     blank           blank              -99.0\n 107 │ GW_Armando_plate2_NO_DNA        GW_Armando_plate2_NO_DNA        blank     blank           blank              -99.0\n 108 │ GW_Armando_plate2_RF29G01       GW_Armando_plate2_RF29G01       BJ        obs_plumb       plumb_BJ            77.503\n 109 │ GW_Armando_plate2_TTGW02        GW_Armando_plate2_TTGW02        MN        troch_MN        troch_west          53.0\n 110 │ GW_Armando_plate2_TTGW03        GW_Armando_plate2_TTGW03        MN        troch_MN        troch_west          53.0\n 111 │ GW_Armando_plate2_TTGW05_rep3   GW_Armando_plate2_TTGW05_rep3   MN_rep    troch_MN_rep    troch_west_rep      53.0\n 112 │ GW_Armando_plate2_TTGW05_rep4   GW_Armando_plate2_TTGW05_rep4   MN_rep    troch_MN_rep    troch_west_rep      53.0\n 113 │ GW_Armando_plate2_TTGW08        GW_Armando_plate2_TTGW08        SU        lud_Sukhto      lud_central         47.0\n 114 │ GW_Armando_plate2_TTGW09        GW_Armando_plate2_TTGW09        SU        lud_Sukhto      lud_central         47.0\n 115 │ GW_Armando_plate2_TTGW12        GW_Armando_plate2_TTGW12        TH        lud_Thallighar  lud_central         43.0\n 116 │ GW_Armando_plate2_TTGW14        GW_Armando_plate2_TTGW14        TH        lud_Thallighar  lud_central         43.0\n 117 │ GW_Armando_plate2_TTGW15        GW_Armando_plate2_TTGW15        TH        lud_Thallighar  lud_central         43.0\n 118 │ GW_Armando_plate2_TTGW16        GW_Armando_plate2_TTGW16        TH        lud_Thallighar  lud_central         43.0\n 119 │ GW_Armando_plate2_TTGW18        GW_Armando_plate2_TTGW18        TH        lud_Thallighar  lud_central         43.0\n 120 │ GW_Armando_plate2_TTGW20        GW_Armando_plate2_TTGW20        SR        lud_Sural       lud_central         45.0\n 121 │ GW_Armando_plate2_TTGW24        GW_Armando_plate2_TTGW24        SR        lud_Sural       lud_central         45.0\n 122 │ GW_Armando_plate2_TTGW25        GW_Armando_plate2_TTGW25        SR        lud_Sural       lud_central         45.0\n 123 │ GW_Armando_plate2_TTGW27        GW_Armando_plate2_TTGW27        SR        lud_Sural       lud_central         45.0\n 124 │ GW_Armando_plate2_TTGW28        GW_Armando_plate2_TTGW28        SR        lud_Sural       lud_central         45.0\n 125 │ GW_Armando_plate2_TTGW50        GW_Armando_plate2_TTGW50        NG        lud_Nainaghar   lud_central         49.0\n 126 │ GW_Armando_plate2_TTGW51        GW_Armando_plate2_TTGW51        NG        lud_Nainaghar   lud_central         49.0\n 127 │ GW_Armando_plate2_TTGW54        GW_Armando_plate2_TTGW54        NG        lud_Nainaghar   lud_central         49.0\n 128 │ GW_Armando_plate2_TTGW56        GW_Armando_plate2_TTGW56        NG        lud_Nainaghar   lud_central         49.0\n 129 │ GW_Armando_plate2_TTGW60        GW_Armando_plate2_TTGW60        SP        lud_Spiti       troch_west          55.0\n 130 │ GW_Armando_plate2_TTGW61        GW_Armando_plate2_TTGW61        SP        lud_Spiti       troch_west          55.0\n 131 │ GW_Armando_plate2_TTGW62        GW_Armando_plate2_TTGW62        SP        lud_Spiti       troch_west          55.0\n 132 │ GW_Armando_plate2_TTGW67        GW_Armando_plate2_TTGW67        SP        lud_Spiti       troch_west          55.0\n 133 │ GW_Armando_plate2_TTGW69        GW_Armando_plate2_TTGW69        SP        lud_Spiti       troch_west          55.0\n 134 │ GW_Armando_plate2_TTGW73        GW_Armando_plate2_TTGW73        SA        lud_Sathrundi   lud_Sath            41.0\n 135 │ GW_Armando_plate2_TTGW75        GW_Armando_plate2_TTGW75        SA        lud_Sathrundi   lud_Sath            41.0\n 136 │ GW_Armando_plate2_TTGW77        GW_Armando_plate2_TTGW77        SA        lud_Sathrundi   lud_Sath            41.0\n 137 │ GW_Armando_plate2_TTGW79        GW_Armando_plate2_TTGW79        SA        lud_Sathrundi   lud_Sath            41.0\n 138 │ GW_Armando_plate2_TTGW80        GW_Armando_plate2_TTGW80        SA        lud_Sathrundi   lud_Sath            41.0\n 139 │ GW_Armando_plate2_TTGW_15_01    GW_Armando_plate2_TTGW_15_01    SR        lud_Sural       lud_central         45.0\n 140 │ GW_Armando_plate2_TTGW_15_02    GW_Armando_plate2_TTGW_15_02    SR        lud_Sural       lud_central         45.0\n 141 │ GW_Armando_plate2_TTGW_15_03    GW_Armando_plate2_TTGW_15_03    SR        lud_Sural       lud_central         45.0\n 142 │ GW_Armando_plate2_TTGW_15_04    GW_Armando_plate2_TTGW_15_04    SR        lud_Sural       lud_central         45.0\n 143 │ GW_Armando_plate2_TTGW_15_06    GW_Armando_plate2_TTGW_15_06    SR        lud_Sural       lud_central         45.0\n 144 │ GW_Armando_plate2_TTGW_15_10    GW_Armando_plate2_TTGW_15_10    SR        lud_Sural       lud_central         45.0\n 145 │ GW_Lane5_AA1                    GW_Lane5_AA1                    AA        vir_S           vir_S               25.0\n 146 │ GW_Lane5_AA10                   GW_Lane5_AA10                   AA        vir_S           vir_S               33.0\n 147 │ GW_Lane5_AA11                   GW_Lane5_AA11                   AA        vir_S           vir_S               34.0\n 148 │ GW_Lane5_AA3                    GW_Lane5_AA3                    AA        vir_S           vir_S               26.0\n 149 │ GW_Lane5_AA4                    GW_Lane5_AA4                    AA        vir_S           vir_S               27.0\n 150 │ GW_Lane5_AA5                    GW_Lane5_AA5                    AA        vir_S           vir_S               28.0\n 151 │ GW_Lane5_AA6                    GW_Lane5_AA6                    AA        vir_S           vir_S               29.0\n 152 │ GW_Lane5_AA7                    GW_Lane5_AA7                    AA        vir_S           vir_S               30.0\n 153 │ GW_Lane5_AA8                    GW_Lane5_AA8                    AA        vir_S           vir_S               31.0\n 154 │ GW_Lane5_AA9                    GW_Lane5_AA9                    AA        vir_S           vir_S               32.0\n 155 │ GW_Lane5_AB1                    GW_Lane5_AB1                    AB_rep    vir_rep         vir_rep             20.0\n 156 │ GW_Lane5_AB2                    GW_Lane5_AB2                    AB        vir             vir                 21.0\n 157 │ GW_Lane5_AN1                    GW_Lane5_AN1                    AN        plumb           plumb               80.0\n 158 │ GW_Lane5_AN2                    GW_Lane5_AN2                    AN        plumb           plumb               81.0\n 159 │ GW_Lane5_BK2                    GW_Lane5_BK2                    BK        plumb           plumb               78.0\n 160 │ GW_Lane5_BK3                    GW_Lane5_BK3                    BK        plumb           plumb               79.0\n 161 │ GW_Lane5_DA2                    GW_Lane5_DA2                    XN        obs             obs                 73.0\n 162 │ GW_Lane5_DA3                    GW_Lane5_DA3                    XN        obs             obs                 74.0\n 163 │ GW_Lane5_DA4                    GW_Lane5_DA4                    XN        obs             obs                 75.0\n 164 │ GW_Lane5_DA6                    GW_Lane5_DA6                    XN        obs             low_reads           76.0\n 165 │ GW_Lane5_DA7                    GW_Lane5_DA7                    XN        obs             obs                 77.0\n 166 │ GW_Lane5_EM1                    GW_Lane5_EM1                    EM        troch_EM        troch_EM            72.0\n 167 │ GW_Lane5_IL1                    GW_Lane5_IL1                    IL        plumb           plumb               82.0\n 168 │ GW_Lane5_IL2                    GW_Lane5_IL2                    IL_rep    plumb_rep       plumb_rep           85.0\n 169 │ GW_Lane5_IL4                    GW_Lane5_IL4                    IL        plumb           plumb               83.0\n 170 │ GW_Lane5_KS1                    GW_Lane5_KS1                    OV        lud_KS          lud_KS              40.0\n 171 │ GW_Lane5_KS2                    GW_Lane5_KS2                    OV        lud_KS          lud_KS              40.0\n 172 │ GW_Lane5_LN1                    GW_Lane5_LN1                    LN        troch_LN        troch_LN            57.0\n 173 │ GW_Lane5_LN10                   GW_Lane5_LN10                   LN        troch_LN        troch_LN            64.0\n 174 │ GW_Lane5_LN11                   GW_Lane5_LN11                   LN        troch_LN        troch_LN            65.0\n 175 │ GW_Lane5_LN12                   GW_Lane5_LN12                   LN        troch_LN        troch_LN            66.0\n 176 │ GW_Lane5_LN14                   GW_Lane5_LN14                   LN        troch_LN        troch_LN            67.0\n 177 │ GW_Lane5_LN16                   GW_Lane5_LN16                   LN        troch_LN        troch_LN            68.0\n 178 │ GW_Lane5_LN18                   GW_Lane5_LN18                   LN        troch_LN        troch_LN            69.0\n 179 │ GW_Lane5_LN19                   GW_Lane5_LN19                   LN        troch_LN        troch_LN            70.0\n 180 │ GW_Lane5_LN2                    GW_Lane5_LN2                    LN_rep    troch_LN_rep    troch_LN_rep        58.0\n 181 │ GW_Lane5_LN20                   GW_Lane5_LN20                   LN        troch_LN        troch_LN            71.0\n 182 │ GW_Lane5_LN3                    GW_Lane5_LN3                    LN        troch_LN        troch_LN            59.0\n 183 │ GW_Lane5_LN4                    GW_Lane5_LN4                    LN        troch_LN        troch_LN            60.0\n 184 │ GW_Lane5_LN6                    GW_Lane5_LN6                    LN        troch_LN        troch_LN            61.0\n 185 │ GW_Lane5_LN7                    GW_Lane5_LN7                    LN        troch_LN        troch_LN            62.0\n 186 │ GW_Lane5_LN8                    GW_Lane5_LN8                    LN        troch_LN        troch_LN            63.0\n 187 │ GW_Lane5_MN1                    GW_Lane5_MN1                    MN        troch_MN        troch_west          51.0\n 188 │ GW_Lane5_MN12                   GW_Lane5_MN12                   MN        troch_MN        troch_west          56.0\n 189 │ GW_Lane5_MN3                    GW_Lane5_MN3                    MN        troch_MN        troch_west          52.0\n 190 │ GW_Lane5_MN5                    GW_Lane5_MN5                    MN        troch_MN        troch_west          53.0\n 191 │ GW_Lane5_MN8                    GW_Lane5_MN8                    MN        troch_MN        troch_west          54.0\n 192 │ GW_Lane5_MN9                    GW_Lane5_MN9                    MN        troch_MN        troch_west          55.0\n 193 │ GW_Lane5_NA1                    GW_Lane5_NA1                    NR        lud_PK          lud_PK              39.2\n 194 │ GW_Lane5_NA3-3ul                GW_Lane5_NA3-3ul                NR        lud_PK          lud_PK              39.2\n 195 │ GW_Lane5_PT11                   GW_Lane5_PT11                   KL        lud_KL          lud_central         42.0\n 196 │ GW_Lane5_PT12                   GW_Lane5_PT12                   KL        lud_KL          lud_central         42.0\n 197 │ GW_Lane5_PT2                    GW_Lane5_PT2                    ML        lud_ML          lud_ML              51.0\n 198 │ GW_Lane5_PT3                    GW_Lane5_PT3                    PA        lud_PA          lud_central         46.0\n 199 │ GW_Lane5_PT4                    GW_Lane5_PT4                    PA        lud_PA          lud_central         46.0\n 200 │ GW_Lane5_PT6                    GW_Lane5_PT6                    KL        lud_KL          lud_central         42.0\n 201 │ GW_Lane5_SH1                    GW_Lane5_SH1                    SH        lud_PK          lud_PK              39.1\n 202 │ GW_Lane5_SH2                    GW_Lane5_SH2                    SH        lud_PK          lud_PK              39.1\n 203 │ GW_Lane5_SH4                    GW_Lane5_SH4                    SH        lud_PK          lud_PK              39.1\n 204 │ GW_Lane5_SH5                    GW_Lane5_SH5                    SH        lud_PK          lud_PK              39.1\n 205 │ GW_Lane5_SL1                    GW_Lane5_SL1                    SL        plumb           plumb              150.0\n 206 │ GW_Lane5_SL2                    GW_Lane5_SL2                    SL        plumb           plumb              151.0\n 207 │ GW_Lane5_ST1                    GW_Lane5_ST1                    ST        plumb           plumb              142.0\n 208 │ GW_Lane5_ST12                   GW_Lane5_ST12                   ST        plumb           plumb              144.0\n 209 │ GW_Lane5_ST3                    GW_Lane5_ST3                    ST        plumb           plumb              143.0\n 210 │ GW_Lane5_STvi1                  GW_Lane5_STvi1                  ST_vi     vir             vir                 22.0\n 211 │ GW_Lane5_STvi2                  GW_Lane5_STvi2                  ST_vi     vir             vir                 23.0\n 212 │ GW_Lane5_STvi3                  GW_Lane5_STvi3                  ST_vi     vir             vir                 24.0\n 213 │ GW_Lane5_TA1                    GW_Lane5_TA1                    TA        plumb           plumb               86.0\n 214 │ GW_Lane5_TL1                    GW_Lane5_TL1                    TL        vir             vir                  9.0\n 215 │ GW_Lane5_TL10                   GW_Lane5_TL10                   TL        vir             vir                 17.0\n 216 │ GW_Lane5_TL11                   GW_Lane5_TL11                   TL        vir             vir                 18.0\n 217 │ GW_Lane5_TL12                   GW_Lane5_TL12                   TL        vir             vir                 19.0\n 218 │ GW_Lane5_TL2                    GW_Lane5_TL2                    TL        vir             vir                 10.0\n 219 │ GW_Lane5_TL3                    GW_Lane5_TL3                    TL_rep    vir_rep         vir_rep             11.0\n 220 │ GW_Lane5_TL4                    GW_Lane5_TL4                    TL        vir             vir                 12.0\n 221 │ GW_Lane5_TL5                    GW_Lane5_TL5                    TL        vir             vir                 13.0\n 222 │ GW_Lane5_TL7                    GW_Lane5_TL7                    TL        vir             vir                 14.0\n 223 │ GW_Lane5_TL8                    GW_Lane5_TL8                    TL        vir             vir                 15.0\n 224 │ GW_Lane5_TL9                    GW_Lane5_TL9                    TL        vir             vir                 16.0\n 225 │ GW_Lane5_TU1                    GW_Lane5_TU1                    TU        nit             nit                 35.0\n 226 │ GW_Lane5_TU2                    GW_Lane5_TU2                    TU        nit             nit                 36.0\n 227 │ GW_Lane5_UY1                    GW_Lane5_UY1                    UY_rep    plumb_rep       plumb_rep           93.0\n 228 │ GW_Lane5_UY2                    GW_Lane5_UY2                    UY        plumb           plumb               88.0\n 229 │ GW_Lane5_UY3                    GW_Lane5_UY3                    UY        plumb           plumb               89.0\n 230 │ GW_Lane5_UY4                    GW_Lane5_UY4                    UY        plumb           plumb               90.0\n 231 │ GW_Lane5_UY5                    GW_Lane5_UY5                    UY        plumb           plumb               91.0\n 232 │ GW_Lane5_UY6                    GW_Lane5_UY6                    UY        plumb           plumb               92.0\n 233 │ GW_Lane5_YK1                    GW_Lane5_YK1                    YK        vir             vir                  1.0\n 234 │ GW_Lane5_YK11                   GW_Lane5_YK11                   YK        vir             vir                  8.0\n 235 │ GW_Lane5_YK3                    GW_Lane5_YK3                    YK        vir             vir                  2.0\n 236 │ GW_Lane5_YK4                    GW_Lane5_YK4                    YK        vir             vir                  3.0\n 237 │ GW_Lane5_YK5                    GW_Lane5_YK5                    YK        vir             vir                  4.0\n 238 │ GW_Lane5_YK6                    GW_Lane5_YK6                    YK        vir             vir                  5.0\n 239 │ GW_Lane5_YK7                    GW_Lane5_YK7                    YK        vir             vir                  6.0\n 240 │ GW_Lane5_YK9                    GW_Lane5_YK9                    YK        vir             vir                  7.0\n 241 │ GW_Liz_GBS_Liz10045             GW_Liz_GBS_Liz10045             ML        lud             lud_ML              51.01\n 242 │ GW_Liz_GBS_Liz10094             GW_Liz_GBS_Liz10094             ML        lud             lud_ML              51.02\n 243 │ GW_Liz_GBS_Liz5101              GW_Liz_GBS_Liz5101              ML        lud             lud_ML              51.03\n 244 │ GW_Liz_GBS_Liz5101_R            GW_Liz_GBS_Liz5101_R            ML_rep    lud_rep         lud_ML_rep          51.04\n 245 │ GW_Liz_GBS_Liz5118              GW_Liz_GBS_Liz5118              ML        lud             lud_ML              51.05\n 246 │ GW_Liz_GBS_Liz5139              GW_Liz_GBS_Liz5139              ML        lud             lud_ML              51.06\n 247 │ GW_Liz_GBS_Liz5142              GW_Liz_GBS_Liz5142              ML        lud             lud_ML              51.07\n 248 │ GW_Liz_GBS_Liz5144              GW_Liz_GBS_Liz5144              ML        lud             lud_ML              51.08\n 249 │ GW_Liz_GBS_Liz5150              GW_Liz_GBS_Liz5150              ML        lud             lud_ML              51.09\n 250 │ GW_Liz_GBS_Liz5159              GW_Liz_GBS_Liz5159              ML        lud_chick       lud_ML              51.1\n 251 │ GW_Liz_GBS_Liz5162              GW_Liz_GBS_Liz5162              ML        lud_chick       lud_ML              51.11\n 252 │ GW_Liz_GBS_Liz5163              GW_Liz_GBS_Liz5163              ML        lud_chick       lud_ML              51.12\n 253 │ GW_Liz_GBS_Liz5164              GW_Liz_GBS_Liz5164              ML        lud_chick       lud_ML              51.13\n 254 │ GW_Liz_GBS_Liz5165              GW_Liz_GBS_Liz5165              ML        lud             lud_ML              51.14\n 255 │ GW_Liz_GBS_Liz5167              GW_Liz_GBS_Liz5167              ML        lud_chick       lud_ML              51.15\n 256 │ GW_Liz_GBS_Liz5168              GW_Liz_GBS_Liz5168              ML        lud_chick       lud_ML              51.16\n 257 │ GW_Liz_GBS_Liz5169              GW_Liz_GBS_Liz5169              ML        lud_chick       lud_ML              51.17\n 258 │ GW_Liz_GBS_Liz5171              GW_Liz_GBS_Liz5171              ML        lud             lud_ML              51.18\n 259 │ GW_Liz_GBS_Liz5172              GW_Liz_GBS_Liz5172              ML        lud_chick       lud_ML              51.19\n 260 │ GW_Liz_GBS_Liz5173              GW_Liz_GBS_Liz5173              ML        lud_chick       lud_ML              51.2\n 261 │ GW_Liz_GBS_Liz5174              GW_Liz_GBS_Liz5174              ML        lud             lud_ML              51.21\n 262 │ GW_Liz_GBS_Liz5175              GW_Liz_GBS_Liz5175              ML        lud             lud_ML              51.22\n 263 │ GW_Liz_GBS_Liz5176              GW_Liz_GBS_Liz5176              ML        lud             lud_ML              51.23\n 264 │ GW_Liz_GBS_Liz5177              GW_Liz_GBS_Liz5177              ML        lud_chick       lud_ML              51.24\n 265 │ GW_Liz_GBS_Liz5178              GW_Liz_GBS_Liz5178              ML        lud_chick       lud_ML              51.25\n 266 │ GW_Liz_GBS_Liz5179              GW_Liz_GBS_Liz5179              ML        lud_chick       lud_ML              51.26\n 267 │ GW_Liz_GBS_Liz5180              GW_Liz_GBS_Liz5180              ML        lud             lud_ML              51.27\n 268 │ GW_Liz_GBS_Liz5182              GW_Liz_GBS_Liz5182              ML        lud_chick       lud_ML              51.28\n 269 │ GW_Liz_GBS_Liz5184              GW_Liz_GBS_Liz5184              ML        lud_chick       lud_ML              51.29\n 270 │ GW_Liz_GBS_Liz5185              GW_Liz_GBS_Liz5185              ML        lud             lud_ML              51.3\n 271 │ GW_Liz_GBS_Liz5186              GW_Liz_GBS_Liz5186              ML        lud_chick       lud_ML              51.31\n 272 │ GW_Liz_GBS_Liz5187              GW_Liz_GBS_Liz5187              ML        lud_chick       lud_ML              51.32\n 273 │ GW_Liz_GBS_Liz5188              GW_Liz_GBS_Liz5188              ML        lud             lud_ML              51.33\n 274 │ GW_Liz_GBS_Liz5189              GW_Liz_GBS_Liz5189              ML        lud_chick       lud_ML              51.34\n 275 │ GW_Liz_GBS_Liz5190              GW_Liz_GBS_Liz5190              ML        lud_chick       lud_ML              51.35\n 276 │ GW_Liz_GBS_Liz5191              GW_Liz_GBS_Liz5191              ML        lud_chick       lud_ML              51.36\n 277 │ GW_Liz_GBS_Liz5192              GW_Liz_GBS_Liz5192              ML        lud_chick       lud_ML              51.37\n 278 │ GW_Liz_GBS_Liz5193              GW_Liz_GBS_Liz5193              ML        lud_chick       lud_ML              51.38\n 279 │ GW_Liz_GBS_Liz5194              GW_Liz_GBS_Liz5194              ML        lud_chick       lud_ML              51.39\n 280 │ GW_Liz_GBS_Liz5195              GW_Liz_GBS_Liz5195              ML        lud             lud_ML              51.4\n 281 │ GW_Liz_GBS_Liz5197              GW_Liz_GBS_Liz5197              ML        lud             lud_ML              51.41\n 282 │ GW_Liz_GBS_Liz5199              GW_Liz_GBS_Liz5199              ML        lud_chick       lud_ML              51.42\n 283 │ GW_Liz_GBS_Liz6002              GW_Liz_GBS_Liz6002              ML        lud             lud_ML              51.43\n 284 │ GW_Liz_GBS_Liz6006              GW_Liz_GBS_Liz6006              ML        lud             lud_ML              51.44\n 285 │ GW_Liz_GBS_Liz6008              GW_Liz_GBS_Liz6008              ML        lud             lud_ML              51.45\n 286 │ GW_Liz_GBS_Liz6009              GW_Liz_GBS_Liz6009              ML        lud             lud_ML              51.46\n 287 │ GW_Liz_GBS_Liz6010              GW_Liz_GBS_Liz6010              ML        lud             lud_ML              51.47\n 288 │ GW_Liz_GBS_Liz6012              GW_Liz_GBS_Liz6012              ML        lud             lud_ML              51.48\n 289 │ GW_Liz_GBS_Liz6014              GW_Liz_GBS_Liz6014              ML        lud             lud_ML              51.49\n 290 │ GW_Liz_GBS_Liz6055              GW_Liz_GBS_Liz6055              ML        lud             lud_ML              51.5\n 291 │ GW_Liz_GBS_Liz6057              GW_Liz_GBS_Liz6057              ML        lud             lud_ML              51.51\n 292 │ GW_Liz_GBS_Liz6060              GW_Liz_GBS_Liz6060              ML        lud             lud_ML              51.52\n 293 │ GW_Liz_GBS_Liz6062              GW_Liz_GBS_Liz6062              ML        lud             lud_ML              51.53\n 294 │ GW_Liz_GBS_Liz6063              GW_Liz_GBS_Liz6063              ML        lud             lud_ML              51.54\n 295 │ GW_Liz_GBS_Liz6066              GW_Liz_GBS_Liz6066              ML        lud             lud_ML              51.55\n 296 │ GW_Liz_GBS_Liz6072              GW_Liz_GBS_Liz6072              ML        lud             lud_ML              51.56\n 297 │ GW_Liz_GBS_Liz6079              GW_Liz_GBS_Liz6079              ML        lud             lud_ML              51.57\n 298 │ GW_Liz_GBS_Liz6203              GW_Liz_GBS_Liz6203              ML        lud_chick       lud_ML              51.58\n 299 │ GW_Liz_GBS_Liz6204              GW_Liz_GBS_Liz6204              ML        lud_chick       lud_ML              51.59\n 300 │ GW_Liz_GBS_Liz6461              GW_Liz_GBS_Liz6461              ML        lud             lud_ML              51.6\n 301 │ GW_Liz_GBS_Liz6472              GW_Liz_GBS_Liz6472              ML        lud             lud_ML              51.61\n 302 │ GW_Liz_GBS_Liz6478              GW_Liz_GBS_Liz6478              ML        lud             lud_ML              51.62\n 303 │ GW_Liz_GBS_Liz6766              GW_Liz_GBS_Liz6766              ML        lud             lud_ML              51.63\n 304 │ GW_Liz_GBS_Liz6776              GW_Liz_GBS_Liz6776              ML        lud             lud_ML              51.64\n 305 │ GW_Liz_GBS_Liz6794              GW_Liz_GBS_Liz6794              ML        lud             lud_ML              51.65\n 306 │ GW_Liz_GBS_P_fusc               GW_Liz_GBS_P_fusc               fusc      fusc            fusc               201.0\n 307 │ GW_Liz_GBS_P_h_man              GW_Liz_GBS_P_h_man              hmand     hmand           hmand              202.0\n 308 │ GW_Liz_GBS_P_humei              GW_Liz_GBS_P_humei              hume      hume            hume               203.0\n 309 │ GW_Liz_GBS_P_inor               GW_Liz_GBS_P_inor               inor      inor            inor               204.0\n 310 │ GW_Liz_GBS_S_burk               GW_Liz_GBS_S_burk               burk      burk            burk               205.0\n\nGOOD NEWS: names of individual runs in metadata file and genotype ind file match perfectly.",
    "crumbs": [
      "Home",
      "Greenish Warbler Genomic Analysis"
    ]
  },
  {
    "objectID": "GreenishWarblerGenomics2025.html#filtering",
    "href": "GreenishWarblerGenomics2025.html#filtering",
    "title": "Greenish Warbler Genomic Analysis",
    "section": "Filtering",
    "text": "Filtering\n\nFilter out duplicate runs\nSome samples were run multiple times, in which case at least one is indicated with _rep in Fst_group column. For each individual we removed all except one of the runs from the dataset—in general we kept the one with the most reads.\n\n    selection = occursin.(\"_rep\", ind_with_metadata.Fst_group)\n    println(\"\"\"Filtering out these runs because they are duplicates of another,\n    according to one of them having \"rep\" in Fst_group: \"\"\")\n    display(ind_with_metadata.ind[selection])\n    ind_with_metadata_indFiltered_1 = ind_with_metadata[Not(selection), :];\n    geno_indFiltered_1 = view(geno, Not(selection), :);  # use of view() avoids copying large memory object\n\nFiltering out these runs because they are duplicates of another,\naccording to one of them having \"rep\" in Fst_group: \n\n\n11-element Vector{String}:\n \"GW_Armando_plate1_TTGW05_rep1\"\n \"GW_Armando_plate2_IL2\"\n \"GW_Armando_plate2_LN11\"\n \"GW_Armando_plate2_TTGW05_rep3\"\n \"GW_Armando_plate2_TTGW05_rep4\"\n \"GW_Lane5_AB1\"\n \"GW_Lane5_IL2\"\n \"GW_Lane5_LN2\"\n \"GW_Lane5_TL3\"\n \"GW_Lane5_UY1\"\n \"GW_Liz_GBS_Liz5101_R\"\n\n\n\n\nFilter specific individuals\nIf there are certain individuals that we want to filter out prior to any additional analysis, we can do so here by setting filter to true and specifying the individual run names in filter_out_inds. Here we will filter out outgroup species (which mostly had low read depth anyway):\n\nfilter = true\n# Specify individuals to filter out:\nfilter_out_inds = [\"GW_Liz_GBS_P_fusc\", \"GW_Liz_GBS_P_h_man\", \"GW_Liz_GBS_P_humei\", \"GW_Liz_GBS_P_inor\", \"GW_Liz_GBS_S_burk\"]\nif filter\n    selection = map(in(filter_out_inds), ind_with_metadata_indFiltered_1.ind)\n    filtered_out = ind_with_metadata_indFiltered_1.ind[selection]\n    ind_with_metadata_indFiltered_2 = ind_with_metadata_indFiltered_1[Not(selection), :]\n    geno_indFiltered_2 = view(geno_indFiltered_1, Not(selection), :)\n    println(\"Specific individuals filtered out as requested: \")\n    display(filtered_out)\nelse\n    ind_with_metadata_indFiltered_2 = ind_with_metadata_indFiltered_1\n    geno_indFiltered_2 = geno_indFiltered_1\n    println(\"No specific individuals filtered (because filter not true)\")\nend\n\nSpecific individuals filtered out as requested: \n\n\n5-element Vector{String}:\n \"GW_Liz_GBS_P_fusc\"\n \"GW_Liz_GBS_P_h_man\"\n \"GW_Liz_GBS_P_humei\"\n \"GW_Liz_GBS_P_inor\"\n \"GW_Liz_GBS_S_burk\"\n\n\n\n\nFilter individuals based on missing genotypes\nHere we determine number of missing SNPs per individual, and filter out those individual datasets with more than a certain percent of missing SNPs (40% for this round):\n\nSNPmissing_percent_allowed_per_ind = 40   # this is the percentage threshold\nthreshold_missing = loci_count * SNPmissing_percent_allowed_per_ind/100\nnumMissings = sum(geno_indFiltered_2 .== -1, dims=2)\nind_with_metadata_indFiltered_2.numMissings .= numMissings\nselection = vec(numMissings .&lt;= threshold_missing) # the vec command converts to BitVector rather than BitMatrix--important below\nprintln(\"Filtering out these individuals based on too many missing genotypes: \")\nfiltered_inds = ind_with_metadata_indFiltered_2.ind[Not(selection)]\nprintln(DataFrame(filtered_inds = filtered_inds)) # did this to print all lines\nind_with_metadata_indFiltered_3 = ind_with_metadata_indFiltered_2[selection, :]\ngeno_indFiltered_3 = view(geno_indFiltered_2, selection, :)\nprintln()\nprintln(\"Here are the remaining individuals: \")\nprintln(DataFrame(ind_with_metadata_indFiltered_3))\n\nFiltering out these individuals based on too many missing genotypes: \n33×1 DataFrame\n Row │ filtered_inds                  \n     │ String                         \n─────┼────────────────────────────────\n   1 │ GW_Armando_plate1_JG08G02\n   2 │ GW_Armando_plate1_JG10G01\n   3 │ GW_Armando_plate1_NO_BC_TTGW05\n   4 │ GW_Armando_plate1_NO_DNA\n   5 │ GW_Armando_plate1_TTGW21\n   6 │ GW_Armando_plate1_TTGW71\n   7 │ GW_Armando_plate2_NO_BC_TTGW05\n   8 │ GW_Armando_plate2_NO_DNA\n   9 │ GW_Armando_plate2_TTGW15\n  10 │ GW_Lane5_AA10\n  11 │ GW_Lane5_DA6\n  12 │ GW_Lane5_LN11\n  13 │ GW_Liz_GBS_Liz5101\n  14 │ GW_Liz_GBS_Liz5118\n  15 │ GW_Liz_GBS_Liz5139\n  16 │ GW_Liz_GBS_Liz5142\n  17 │ GW_Liz_GBS_Liz5150\n  18 │ GW_Liz_GBS_Liz5159\n  19 │ GW_Liz_GBS_Liz5162\n  20 │ GW_Liz_GBS_Liz5169\n  21 │ GW_Liz_GBS_Liz5171\n  22 │ GW_Liz_GBS_Liz5172\n  23 │ GW_Liz_GBS_Liz5174\n  24 │ GW_Liz_GBS_Liz5176\n  25 │ GW_Liz_GBS_Liz5177\n  26 │ GW_Liz_GBS_Liz5180\n  27 │ GW_Liz_GBS_Liz5186\n  28 │ GW_Liz_GBS_Liz5187\n  29 │ GW_Liz_GBS_Liz5192\n  30 │ GW_Liz_GBS_Liz5195\n  31 │ GW_Liz_GBS_Liz6012\n  32 │ GW_Liz_GBS_Liz6203\n  33 │ GW_Liz_GBS_Liz6766\n\nHere are the remaining individuals: \n261×7 DataFrame\n Row │ ind                            ID                             location  group           Fst_group    plot_order  numMissings \n     │ String                         String31                       String7   String15        String15     Float64     Int64       \n─────┼──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────\n   1 │ GW_Armando_plate1_AB1          GW_Armando_plate1_AB1          AB        vir             vir              20.01         99270\n   2 │ GW_Armando_plate1_JF07G02      GW_Armando_plate1_JF07G02      ST        plumb           plumb           108.0         181208\n   3 │ GW_Armando_plate1_JF07G03      GW_Armando_plate1_JF07G03      ST        plumb           plumb           109.0         116334\n   4 │ GW_Armando_plate1_JF07G04      GW_Armando_plate1_JF07G04      ST        plumb           plumb           110.0         116065\n   5 │ GW_Armando_plate1_JF08G02      GW_Armando_plate1_JF08G02      ST        plumb           plumb           111.0          87194\n   6 │ GW_Armando_plate1_JF09G01      GW_Armando_plate1_JF09G01      ST        plumb           plumb           112.0         237912\n   7 │ GW_Armando_plate1_JF09G02      GW_Armando_plate1_JF09G02      ST        plumb           plumb           113.0         110439\n   8 │ GW_Armando_plate1_JF10G03      GW_Armando_plate1_JF10G03      ST        plumb_vir       plumb_vir       170.0         202891\n   9 │ GW_Armando_plate1_JF11G01      GW_Armando_plate1_JF11G01      ST        plumb           plumb           114.0         112391\n  10 │ GW_Armando_plate1_JF12G01      GW_Armando_plate1_JF12G01      ST        plumb           plumb           115.0         129490\n  11 │ GW_Armando_plate1_JF12G02      GW_Armando_plate1_JF12G02      ST        plumb           plumb           116.0         130718\n  12 │ GW_Armando_plate1_JF12G04      GW_Armando_plate1_JF12G04      ST_vi     vir             vir              24.001       133969\n  13 │ GW_Armando_plate1_JF13G01      GW_Armando_plate1_JF13G01      ST        plumb           plumb           117.0         107508\n  14 │ GW_Armando_plate1_JF15G03      GW_Armando_plate1_JF15G03      DV        plumb           plumb           103.0         110933\n  15 │ GW_Armando_plate1_JF16G01      GW_Armando_plate1_JF16G01      DV_vi     plumb_vir       vir              24.041       122599\n  16 │ GW_Armando_plate1_JF20G01      GW_Armando_plate1_JF20G01      MB        plumb           plumb            94.0         102740\n  17 │ GW_Armando_plate1_JF22G01      GW_Armando_plate1_JF22G01      MB        plumb           plumb            95.0          99501\n  18 │ GW_Armando_plate1_JF23G01      GW_Armando_plate1_JF23G01      VB        plumb           plumb            98.0         113052\n  19 │ GW_Armando_plate1_JF23G02      GW_Armando_plate1_JF23G02      VB        plumb           plumb            99.0          87860\n  20 │ GW_Armando_plate1_JF24G02      GW_Armando_plate1_JF24G02      VB        plumb           plumb           100.0          88105\n  21 │ GW_Armando_plate1_JF26G01      GW_Armando_plate1_JF26G01      ST        plumb           plumb           118.0         104432\n  22 │ GW_Armando_plate1_JF27G01      GW_Armando_plate1_JF27G01      ST        plumb           plumb           119.0          96001\n  23 │ GW_Armando_plate1_JF29G01      GW_Armando_plate1_JF29G01      ST        plumb           plumb           120.0          86530\n  24 │ GW_Armando_plate1_JF29G02      GW_Armando_plate1_JF29G02      ST        plumb           plumb           121.0         101762\n  25 │ GW_Armando_plate1_JF29G03      GW_Armando_plate1_JF29G03      ST        plumb           plumb           122.0         107333\n  26 │ GW_Armando_plate1_JG02G02      GW_Armando_plate1_JG02G02      PR        plumb           plumb           145.0          81977\n  27 │ GW_Armando_plate1_JG02G04      GW_Armando_plate1_JG02G04      PR        plumb           plumb           146.0         140445\n  28 │ GW_Armando_plate1_JG08G01      GW_Armando_plate1_JG08G01      ST        plumb           plumb           123.0         131448\n  29 │ GW_Armando_plate1_JG12G01      GW_Armando_plate1_JG12G01      ST        plumb           plumb           126.0         132475\n  30 │ GW_Armando_plate1_JG17G01      GW_Armando_plate1_JG17G01      ST        plumb_vir       plumb           127.0         106045\n  31 │ GW_Armando_plate1_RF20G01      GW_Armando_plate1_RF20G01      BJ        obs_plumb       plumb_BJ         77.501       102115\n  32 │ GW_Armando_plate1_RF29G02      GW_Armando_plate1_RF29G02      BJ        obs_plumb       plumb_BJ         77.502        99695\n  33 │ GW_Armando_plate1_TL3          GW_Armando_plate1_TL3          TL        vir             vir              11.01        119043\n  34 │ GW_Armando_plate1_TTGW01       GW_Armando_plate1_TTGW01       MN        troch_MN        troch_west       53.0          80329\n  35 │ GW_Armando_plate1_TTGW05_rep2  GW_Armando_plate1_TTGW05_rep2  MN        troch_MN        troch_west       53.0          95518\n  36 │ GW_Armando_plate1_TTGW06       GW_Armando_plate1_TTGW06       SU        lud_Sukhto      lud_central      47.0          80282\n  37 │ GW_Armando_plate1_TTGW07       GW_Armando_plate1_TTGW07       SU        lud_Sukhto      lud_central      47.0         153267\n  38 │ GW_Armando_plate1_TTGW10       GW_Armando_plate1_TTGW10       SU        lud_Sukhto      lud_central      47.0          97805\n  39 │ GW_Armando_plate1_TTGW11       GW_Armando_plate1_TTGW11       SU        lud_Sukhto      lud_central      47.0          93712\n  40 │ GW_Armando_plate1_TTGW13       GW_Armando_plate1_TTGW13       TH        lud_Thallighar  lud_central      43.0          87677\n  41 │ GW_Armando_plate1_TTGW17       GW_Armando_plate1_TTGW17       TH        lud_Thallighar  lud_central      43.0         100310\n  42 │ GW_Armando_plate1_TTGW19       GW_Armando_plate1_TTGW19       TH        lud_Thallighar  lud_central      43.0         100019\n  43 │ GW_Armando_plate1_TTGW22       GW_Armando_plate1_TTGW22       SR        lud_Sural       lud_central      45.0          95151\n  44 │ GW_Armando_plate1_TTGW23       GW_Armando_plate1_TTGW23       SR        lud_Sural       lud_central      45.0         218168\n  45 │ GW_Armando_plate1_TTGW29       GW_Armando_plate1_TTGW29       SR        lud_Sural       lud_central      45.0         101068\n  46 │ GW_Armando_plate1_TTGW52       GW_Armando_plate1_TTGW52       NG        lud_Nainaghar   lud_central      49.0          89055\n  47 │ GW_Armando_plate1_TTGW53       GW_Armando_plate1_TTGW53       NG        lud_Nainaghar   lud_central      49.0          76154\n  48 │ GW_Armando_plate1_TTGW55       GW_Armando_plate1_TTGW55       NG        lud_Nainaghar   lud_central      49.0          84162\n  49 │ GW_Armando_plate1_TTGW57       GW_Armando_plate1_TTGW57       NG        lud_Nainaghar   lud_central      49.0          93413\n  50 │ GW_Armando_plate1_TTGW58       GW_Armando_plate1_TTGW58       NG        lud_Nainaghar   lud_central      49.0         102386\n  51 │ GW_Armando_plate1_TTGW59       GW_Armando_plate1_TTGW59       NG        lud_Nainaghar   lud_central      49.0          98471\n  52 │ GW_Armando_plate1_TTGW63       GW_Armando_plate1_TTGW63       SP        lud_Spiti       troch_west       55.0          98425\n  53 │ GW_Armando_plate1_TTGW64       GW_Armando_plate1_TTGW64       SP        lud_Spiti       troch_west       55.0         111234\n  54 │ GW_Armando_plate1_TTGW65       GW_Armando_plate1_TTGW65       SP        lud_Spiti       troch_west       55.0         119729\n  55 │ GW_Armando_plate1_TTGW66       GW_Armando_plate1_TTGW66       SP        lud_Spiti       troch_west       55.0         105443\n  56 │ GW_Armando_plate1_TTGW68       GW_Armando_plate1_TTGW68       SP        lud_Spiti       troch_west       55.0          98099\n  57 │ GW_Armando_plate1_TTGW70       GW_Armando_plate1_TTGW70       SA        lud_Sathrundi   lud_Sath         41.0          84930\n  58 │ GW_Armando_plate1_TTGW72       GW_Armando_plate1_TTGW72       SA        lud_Sathrundi   lud_Sath         41.0          92370\n  59 │ GW_Armando_plate1_TTGW74       GW_Armando_plate1_TTGW74       SA        lud_Sathrundi   lud_Sath         41.0         325539\n  60 │ GW_Armando_plate1_TTGW78       GW_Armando_plate1_TTGW78       SA        lud_Sathrundi   lud_Sath         41.0          96540\n  61 │ GW_Armando_plate1_TTGW_15_05   GW_Armando_plate1_TTGW_15_05   SR        lud_Sural       lud_central      45.0         173819\n  62 │ GW_Armando_plate1_TTGW_15_07   GW_Armando_plate1_TTGW_15_07   SR        lud_Sural       lud_central      45.0          84861\n  63 │ GW_Armando_plate1_TTGW_15_08   GW_Armando_plate1_TTGW_15_08   SR        lud_Sural       lud_central      45.0          88322\n  64 │ GW_Armando_plate1_TTGW_15_09   GW_Armando_plate1_TTGW_15_09   SR        lud_Sural       lud_central      45.0          87883\n  65 │ GW_Armando_plate1_UY1          GW_Armando_plate1_UY1          UY        plumb           plumb            87.0          97598\n  66 │ GW_Armando_plate2_JE31G01      GW_Armando_plate2_JE31G01      VB_vi     vir_misID       vir              24.002       101749\n  67 │ GW_Armando_plate2_JF03G01      GW_Armando_plate2_JF03G01      ST_vi     vir_misID       vir              24.003       214510\n  68 │ GW_Armando_plate2_JF03G02      GW_Armando_plate2_JF03G02      VB_vi     vir_misID       vir              24.004       296518\n  69 │ GW_Armando_plate2_JF07G01      GW_Armando_plate2_JF07G01      ST        plumb           plumb           128.0         104578\n  70 │ GW_Armando_plate2_JF08G04      GW_Armando_plate2_JF08G04      ST        plumb           plumb           129.0         101010\n  71 │ GW_Armando_plate2_JF10G02      GW_Armando_plate2_JF10G02      ST        plumb           plumb           130.0          95393\n  72 │ GW_Armando_plate2_JF11G02      GW_Armando_plate2_JF11G02      ST        plumb           plumb           131.0          89277\n  73 │ GW_Armando_plate2_JF12G03      GW_Armando_plate2_JF12G03      ST        plumb           plumb           132.0         118134\n  74 │ GW_Armando_plate2_JF12G05      GW_Armando_plate2_JF12G05      ST        plumb           plumb           133.0          85768\n  75 │ GW_Armando_plate2_JF13G02      GW_Armando_plate2_JF13G02      ST        plumb           plumb           134.0         113146\n  76 │ GW_Armando_plate2_JF14G01      GW_Armando_plate2_JF14G01      DV        plumb           plumb           104.0          97185\n  77 │ GW_Armando_plate2_JF14G02      GW_Armando_plate2_JF14G02      DV        plumb           plumb           105.0          94078\n  78 │ GW_Armando_plate2_JF15G01      GW_Armando_plate2_JF15G01      DV        plumb           plumb           106.0          89126\n  79 │ GW_Armando_plate2_JF15G02      GW_Armando_plate2_JF15G02      DV        plumb           plumb           107.0         101787\n  80 │ GW_Armando_plate2_JF16G02      GW_Armando_plate2_JF16G02      DV_vi     plumb_vir       vir              24.042       125147\n  81 │ GW_Armando_plate2_JF19G01      GW_Armando_plate2_JF19G01      MB        plumb           plumb            96.0          94354\n  82 │ GW_Armando_plate2_JF20G02      GW_Armando_plate2_JF20G02      MB        plumb           plumb            97.0          78032\n  83 │ GW_Armando_plate2_JF24G01      GW_Armando_plate2_JF24G01      VB        plumb           plumb           101.0         113526\n  84 │ GW_Armando_plate2_JF24G03      GW_Armando_plate2_JF24G03      ST        plumb           plumb           135.0          77983\n  85 │ GW_Armando_plate2_JF25G01      GW_Armando_plate2_JF25G01      VB        plumb           plumb           102.0          86955\n  86 │ GW_Armando_plate2_JF26G02      GW_Armando_plate2_JF26G02      ST        plumb           plumb           136.0          79995\n  87 │ GW_Armando_plate2_JF27G02      GW_Armando_plate2_JF27G02      ST        plumb           plumb           137.0          97159\n  88 │ GW_Armando_plate2_JF30G01      GW_Armando_plate2_JF30G01      ST_vi     vir_misID       vir              24.005       117010\n  89 │ GW_Armando_plate2_JG01G01      GW_Armando_plate2_JG01G01      PR        plumb           plumb           147.0          97961\n  90 │ GW_Armando_plate2_JG02G01      GW_Armando_plate2_JG02G01      PR        plumb           plumb           148.0          81494\n  91 │ GW_Armando_plate2_JG02G03      GW_Armando_plate2_JG02G03      PR        plumb           plumb           149.0          96990\n  92 │ GW_Armando_plate2_JG10G02      GW_Armando_plate2_JG10G02      ST        plumb           plumb           138.0          78807\n  93 │ GW_Armando_plate2_JG10G03      GW_Armando_plate2_JG10G03      ST        plumb           plumb           139.0          91258\n  94 │ GW_Armando_plate2_JG12G02      GW_Armando_plate2_JG12G02      ST        plumb           plumb           140.0         102563\n  95 │ GW_Armando_plate2_JG12G03      GW_Armando_plate2_JG12G03      ST        plumb           plumb           141.0          91523\n  96 │ GW_Armando_plate2_LN2          GW_Armando_plate2_LN2          LN        troch_LN        troch_LN         58.01         77555\n  97 │ GW_Armando_plate2_RF29G01      GW_Armando_plate2_RF29G01      BJ        obs_plumb       plumb_BJ         77.503        94504\n  98 │ GW_Armando_plate2_TTGW02       GW_Armando_plate2_TTGW02       MN        troch_MN        troch_west       53.0          82355\n  99 │ GW_Armando_plate2_TTGW03       GW_Armando_plate2_TTGW03       MN        troch_MN        troch_west       53.0          93915\n 100 │ GW_Armando_plate2_TTGW08       GW_Armando_plate2_TTGW08       SU        lud_Sukhto      lud_central      47.0          79030\n 101 │ GW_Armando_plate2_TTGW09       GW_Armando_plate2_TTGW09       SU        lud_Sukhto      lud_central      47.0         124074\n 102 │ GW_Armando_plate2_TTGW12       GW_Armando_plate2_TTGW12       TH        lud_Thallighar  lud_central      43.0          80774\n 103 │ GW_Armando_plate2_TTGW14       GW_Armando_plate2_TTGW14       TH        lud_Thallighar  lud_central      43.0          91726\n 104 │ GW_Armando_plate2_TTGW16       GW_Armando_plate2_TTGW16       TH        lud_Thallighar  lud_central      43.0          78610\n 105 │ GW_Armando_plate2_TTGW18       GW_Armando_plate2_TTGW18       TH        lud_Thallighar  lud_central      43.0          90831\n 106 │ GW_Armando_plate2_TTGW20       GW_Armando_plate2_TTGW20       SR        lud_Sural       lud_central      45.0          70473\n 107 │ GW_Armando_plate2_TTGW24       GW_Armando_plate2_TTGW24       SR        lud_Sural       lud_central      45.0          88081\n 108 │ GW_Armando_plate2_TTGW25       GW_Armando_plate2_TTGW25       SR        lud_Sural       lud_central      45.0         113545\n 109 │ GW_Armando_plate2_TTGW27       GW_Armando_plate2_TTGW27       SR        lud_Sural       lud_central      45.0          92690\n 110 │ GW_Armando_plate2_TTGW28       GW_Armando_plate2_TTGW28       SR        lud_Sural       lud_central      45.0          90248\n 111 │ GW_Armando_plate2_TTGW50       GW_Armando_plate2_TTGW50       NG        lud_Nainaghar   lud_central      49.0          73271\n 112 │ GW_Armando_plate2_TTGW51       GW_Armando_plate2_TTGW51       NG        lud_Nainaghar   lud_central      49.0          82100\n 113 │ GW_Armando_plate2_TTGW54       GW_Armando_plate2_TTGW54       NG        lud_Nainaghar   lud_central      49.0         680557\n 114 │ GW_Armando_plate2_TTGW56       GW_Armando_plate2_TTGW56       NG        lud_Nainaghar   lud_central      49.0          77725\n 115 │ GW_Armando_plate2_TTGW60       GW_Armando_plate2_TTGW60       SP        lud_Spiti       troch_west       55.0          80730\n 116 │ GW_Armando_plate2_TTGW61       GW_Armando_plate2_TTGW61       SP        lud_Spiti       troch_west       55.0          96107\n 117 │ GW_Armando_plate2_TTGW62       GW_Armando_plate2_TTGW62       SP        lud_Spiti       troch_west       55.0         101894\n 118 │ GW_Armando_plate2_TTGW67       GW_Armando_plate2_TTGW67       SP        lud_Spiti       troch_west       55.0         145905\n 119 │ GW_Armando_plate2_TTGW69       GW_Armando_plate2_TTGW69       SP        lud_Spiti       troch_west       55.0          91534\n 120 │ GW_Armando_plate2_TTGW73       GW_Armando_plate2_TTGW73       SA        lud_Sathrundi   lud_Sath         41.0          72217\n 121 │ GW_Armando_plate2_TTGW75       GW_Armando_plate2_TTGW75       SA        lud_Sathrundi   lud_Sath         41.0          92128\n 122 │ GW_Armando_plate2_TTGW77       GW_Armando_plate2_TTGW77       SA        lud_Sathrundi   lud_Sath         41.0          75475\n 123 │ GW_Armando_plate2_TTGW79       GW_Armando_plate2_TTGW79       SA        lud_Sathrundi   lud_Sath         41.0          96324\n 124 │ GW_Armando_plate2_TTGW80       GW_Armando_plate2_TTGW80       SA        lud_Sathrundi   lud_Sath         41.0          75357\n 125 │ GW_Armando_plate2_TTGW_15_01   GW_Armando_plate2_TTGW_15_01   SR        lud_Sural       lud_central      45.0          91072\n 126 │ GW_Armando_plate2_TTGW_15_02   GW_Armando_plate2_TTGW_15_02   SR        lud_Sural       lud_central      45.0          72691\n 127 │ GW_Armando_plate2_TTGW_15_03   GW_Armando_plate2_TTGW_15_03   SR        lud_Sural       lud_central      45.0          74750\n 128 │ GW_Armando_plate2_TTGW_15_04   GW_Armando_plate2_TTGW_15_04   SR        lud_Sural       lud_central      45.0         193531\n 129 │ GW_Armando_plate2_TTGW_15_06   GW_Armando_plate2_TTGW_15_06   SR        lud_Sural       lud_central      45.0          76538\n 130 │ GW_Armando_plate2_TTGW_15_10   GW_Armando_plate2_TTGW_15_10   SR        lud_Sural       lud_central      45.0         219999\n 131 │ GW_Lane5_AA1                   GW_Lane5_AA1                   AA        vir_S           vir_S            25.0         717676\n 132 │ GW_Lane5_AA11                  GW_Lane5_AA11                  AA        vir_S           vir_S            34.0         736085\n 133 │ GW_Lane5_AA3                   GW_Lane5_AA3                   AA        vir_S           vir_S            26.0         662552\n 134 │ GW_Lane5_AA4                   GW_Lane5_AA4                   AA        vir_S           vir_S            27.0         665969\n 135 │ GW_Lane5_AA5                   GW_Lane5_AA5                   AA        vir_S           vir_S            28.0         718610\n 136 │ GW_Lane5_AA6                   GW_Lane5_AA6                   AA        vir_S           vir_S            29.0         778821\n 137 │ GW_Lane5_AA7                   GW_Lane5_AA7                   AA        vir_S           vir_S            30.0         724717\n 138 │ GW_Lane5_AA8                   GW_Lane5_AA8                   AA        vir_S           vir_S            31.0         922313\n 139 │ GW_Lane5_AA9                   GW_Lane5_AA9                   AA        vir_S           vir_S            32.0         791514\n 140 │ GW_Lane5_AB2                   GW_Lane5_AB2                   AB        vir             vir              21.0         915622\n 141 │ GW_Lane5_AN1                   GW_Lane5_AN1                   AN        plumb           plumb            80.0         719041\n 142 │ GW_Lane5_AN2                   GW_Lane5_AN2                   AN        plumb           plumb            81.0         684348\n 143 │ GW_Lane5_BK2                   GW_Lane5_BK2                   BK        plumb           plumb            78.0         666018\n 144 │ GW_Lane5_BK3                   GW_Lane5_BK3                   BK        plumb           plumb            79.0         665090\n 145 │ GW_Lane5_DA2                   GW_Lane5_DA2                   XN        obs             obs              73.0         655980\n 146 │ GW_Lane5_DA3                   GW_Lane5_DA3                   XN        obs             obs              74.0         696722\n 147 │ GW_Lane5_DA4                   GW_Lane5_DA4                   XN        obs             obs              75.0         634940\n 148 │ GW_Lane5_DA7                   GW_Lane5_DA7                   XN        obs             obs              77.0         733664\n 149 │ GW_Lane5_EM1                   GW_Lane5_EM1                   EM        troch_EM        troch_EM         72.0         711636\n 150 │ GW_Lane5_IL1                   GW_Lane5_IL1                   IL        plumb           plumb            82.0         698039\n 151 │ GW_Lane5_IL4                   GW_Lane5_IL4                   IL        plumb           plumb            83.0         726050\n 152 │ GW_Lane5_KS1                   GW_Lane5_KS1                   OV        lud_KS          lud_KS           40.0         751642\n 153 │ GW_Lane5_KS2                   GW_Lane5_KS2                   OV        lud_KS          lud_KS           40.0         820241\n 154 │ GW_Lane5_LN1                   GW_Lane5_LN1                   LN        troch_LN        troch_LN         57.0         707607\n 155 │ GW_Lane5_LN10                  GW_Lane5_LN10                  LN        troch_LN        troch_LN         64.0         783282\n 156 │ GW_Lane5_LN12                  GW_Lane5_LN12                  LN        troch_LN        troch_LN         66.0         884653\n 157 │ GW_Lane5_LN14                  GW_Lane5_LN14                  LN        troch_LN        troch_LN         67.0         753482\n 158 │ GW_Lane5_LN16                  GW_Lane5_LN16                  LN        troch_LN        troch_LN         68.0         738272\n 159 │ GW_Lane5_LN18                  GW_Lane5_LN18                  LN        troch_LN        troch_LN         69.0         711612\n 160 │ GW_Lane5_LN19                  GW_Lane5_LN19                  LN        troch_LN        troch_LN         70.0         731751\n 161 │ GW_Lane5_LN20                  GW_Lane5_LN20                  LN        troch_LN        troch_LN         71.0         738170\n 162 │ GW_Lane5_LN3                   GW_Lane5_LN3                   LN        troch_LN        troch_LN         59.0         702316\n 163 │ GW_Lane5_LN4                   GW_Lane5_LN4                   LN        troch_LN        troch_LN         60.0         683211\n 164 │ GW_Lane5_LN6                   GW_Lane5_LN6                   LN        troch_LN        troch_LN         61.0         690808\n 165 │ GW_Lane5_LN7                   GW_Lane5_LN7                   LN        troch_LN        troch_LN         62.0         758021\n 166 │ GW_Lane5_LN8                   GW_Lane5_LN8                   LN        troch_LN        troch_LN         63.0         662407\n 167 │ GW_Lane5_MN1                   GW_Lane5_MN1                   MN        troch_MN        troch_west       51.0         943574\n 168 │ GW_Lane5_MN12                  GW_Lane5_MN12                  MN        troch_MN        troch_west       56.0         671074\n 169 │ GW_Lane5_MN3                   GW_Lane5_MN3                   MN        troch_MN        troch_west       52.0         946478\n 170 │ GW_Lane5_MN5                   GW_Lane5_MN5                   MN        troch_MN        troch_west       53.0         752979\n 171 │ GW_Lane5_MN8                   GW_Lane5_MN8                   MN        troch_MN        troch_west       54.0         771625\n 172 │ GW_Lane5_MN9                   GW_Lane5_MN9                   MN        troch_MN        troch_west       55.0         897944\n 173 │ GW_Lane5_NA1                   GW_Lane5_NA1                   NR        lud_PK          lud_PK           39.2         919218\n 174 │ GW_Lane5_NA3-3ul               GW_Lane5_NA3-3ul               NR        lud_PK          lud_PK           39.2         798370\n 175 │ GW_Lane5_PT11                  GW_Lane5_PT11                  KL        lud_KL          lud_central      42.0         771797\n 176 │ GW_Lane5_PT12                  GW_Lane5_PT12                  KL        lud_KL          lud_central      42.0         792683\n 177 │ GW_Lane5_PT2                   GW_Lane5_PT2                   ML        lud_ML          lud_ML           51.0         760347\n 178 │ GW_Lane5_PT3                   GW_Lane5_PT3                   PA        lud_PA          lud_central      46.0         722177\n 179 │ GW_Lane5_PT4                   GW_Lane5_PT4                   PA        lud_PA          lud_central      46.0         705413\n 180 │ GW_Lane5_PT6                   GW_Lane5_PT6                   KL        lud_KL          lud_central      42.0         763723\n 181 │ GW_Lane5_SH1                   GW_Lane5_SH1                   SH        lud_PK          lud_PK           39.1         966761\n 182 │ GW_Lane5_SH2                   GW_Lane5_SH2                   SH        lud_PK          lud_PK           39.1         768646\n 183 │ GW_Lane5_SH4                   GW_Lane5_SH4                   SH        lud_PK          lud_PK           39.1         849641\n 184 │ GW_Lane5_SH5                   GW_Lane5_SH5                   SH        lud_PK          lud_PK           39.1         929394\n 185 │ GW_Lane5_SL1                   GW_Lane5_SL1                   SL        plumb           plumb           150.0         648883\n 186 │ GW_Lane5_SL2                   GW_Lane5_SL2                   SL        plumb           plumb           151.0         654733\n 187 │ GW_Lane5_ST1                   GW_Lane5_ST1                   ST        plumb           plumb           142.0         606242\n 188 │ GW_Lane5_ST12                  GW_Lane5_ST12                  ST        plumb           plumb           144.0         691266\n 189 │ GW_Lane5_ST3                   GW_Lane5_ST3                   ST        plumb           plumb           143.0         696992\n 190 │ GW_Lane5_STvi1                 GW_Lane5_STvi1                 ST_vi     vir             vir              22.0         690090\n 191 │ GW_Lane5_STvi2                 GW_Lane5_STvi2                 ST_vi     vir             vir              23.0         897337\n 192 │ GW_Lane5_STvi3                 GW_Lane5_STvi3                 ST_vi     vir             vir              24.0         768162\n 193 │ GW_Lane5_TA1                   GW_Lane5_TA1                   TA        plumb           plumb            86.0         711909\n 194 │ GW_Lane5_TL1                   GW_Lane5_TL1                   TL        vir             vir               9.0         743509\n 195 │ GW_Lane5_TL10                  GW_Lane5_TL10                  TL        vir             vir              17.0         669934\n 196 │ GW_Lane5_TL11                  GW_Lane5_TL11                  TL        vir             vir              18.0         638402\n 197 │ GW_Lane5_TL12                  GW_Lane5_TL12                  TL        vir             vir              19.0         585697\n 198 │ GW_Lane5_TL2                   GW_Lane5_TL2                   TL        vir             vir              10.0         770857\n 199 │ GW_Lane5_TL4                   GW_Lane5_TL4                   TL        vir             vir              12.0         758037\n 200 │ GW_Lane5_TL5                   GW_Lane5_TL5                   TL        vir             vir              13.0         867165\n 201 │ GW_Lane5_TL7                   GW_Lane5_TL7                   TL        vir             vir              14.0         803407\n 202 │ GW_Lane5_TL8                   GW_Lane5_TL8                   TL        vir             vir              15.0         698745\n 203 │ GW_Lane5_TL9                   GW_Lane5_TL9                   TL        vir             vir              16.0         606969\n 204 │ GW_Lane5_TU1                   GW_Lane5_TU1                   TU        nit             nit              35.0         793640\n 205 │ GW_Lane5_TU2                   GW_Lane5_TU2                   TU        nit             nit              36.0         736785\n 206 │ GW_Lane5_UY2                   GW_Lane5_UY2                   UY        plumb           plumb            88.0         729002\n 207 │ GW_Lane5_UY3                   GW_Lane5_UY3                   UY        plumb           plumb            89.0         677527\n 208 │ GW_Lane5_UY4                   GW_Lane5_UY4                   UY        plumb           plumb            90.0         749848\n 209 │ GW_Lane5_UY5                   GW_Lane5_UY5                   UY        plumb           plumb            91.0         718373\n 210 │ GW_Lane5_UY6                   GW_Lane5_UY6                   UY        plumb           plumb            92.0         713675\n 211 │ GW_Lane5_YK1                   GW_Lane5_YK1                   YK        vir             vir               1.0         831245\n 212 │ GW_Lane5_YK11                  GW_Lane5_YK11                  YK        vir             vir               8.0         730798\n 213 │ GW_Lane5_YK3                   GW_Lane5_YK3                   YK        vir             vir               2.0         731944\n 214 │ GW_Lane5_YK4                   GW_Lane5_YK4                   YK        vir             vir               3.0         740051\n 215 │ GW_Lane5_YK5                   GW_Lane5_YK5                   YK        vir             vir               4.0         738740\n 216 │ GW_Lane5_YK6                   GW_Lane5_YK6                   YK        vir             vir               5.0         697420\n 217 │ GW_Lane5_YK7                   GW_Lane5_YK7                   YK        vir             vir               6.0         692052\n 218 │ GW_Lane5_YK9                   GW_Lane5_YK9                   YK        vir             vir               7.0         768722\n 219 │ GW_Liz_GBS_Liz10045            GW_Liz_GBS_Liz10045            ML        lud             lud_ML           51.01        818407\n 220 │ GW_Liz_GBS_Liz10094            GW_Liz_GBS_Liz10094            ML        lud             lud_ML           51.02        905297\n 221 │ GW_Liz_GBS_Liz5144             GW_Liz_GBS_Liz5144             ML        lud             lud_ML           51.08        942026\n 222 │ GW_Liz_GBS_Liz5163             GW_Liz_GBS_Liz5163             ML        lud_chick       lud_ML           51.12        851723\n 223 │ GW_Liz_GBS_Liz5164             GW_Liz_GBS_Liz5164             ML        lud_chick       lud_ML           51.13        866612\n 224 │ GW_Liz_GBS_Liz5165             GW_Liz_GBS_Liz5165             ML        lud             lud_ML           51.14        939782\n 225 │ GW_Liz_GBS_Liz5167             GW_Liz_GBS_Liz5167             ML        lud_chick       lud_ML           51.15        932442\n 226 │ GW_Liz_GBS_Liz5168             GW_Liz_GBS_Liz5168             ML        lud_chick       lud_ML           51.16        944373\n 227 │ GW_Liz_GBS_Liz5173             GW_Liz_GBS_Liz5173             ML        lud_chick       lud_ML           51.2         961268\n 228 │ GW_Liz_GBS_Liz5175             GW_Liz_GBS_Liz5175             ML        lud             lud_ML           51.22        947557\n 229 │ GW_Liz_GBS_Liz5178             GW_Liz_GBS_Liz5178             ML        lud_chick       lud_ML           51.25        942983\n 230 │ GW_Liz_GBS_Liz5179             GW_Liz_GBS_Liz5179             ML        lud_chick       lud_ML           51.26        933796\n 231 │ GW_Liz_GBS_Liz5182             GW_Liz_GBS_Liz5182             ML        lud_chick       lud_ML           51.28        950069\n 232 │ GW_Liz_GBS_Liz5184             GW_Liz_GBS_Liz5184             ML        lud_chick       lud_ML           51.29        875068\n 233 │ GW_Liz_GBS_Liz5185             GW_Liz_GBS_Liz5185             ML        lud             lud_ML           51.3         948876\n 234 │ GW_Liz_GBS_Liz5188             GW_Liz_GBS_Liz5188             ML        lud             lud_ML           51.33        853346\n 235 │ GW_Liz_GBS_Liz5189             GW_Liz_GBS_Liz5189             ML        lud_chick       lud_ML           51.34        972180\n 236 │ GW_Liz_GBS_Liz5190             GW_Liz_GBS_Liz5190             ML        lud_chick       lud_ML           51.35        922566\n 237 │ GW_Liz_GBS_Liz5191             GW_Liz_GBS_Liz5191             ML        lud_chick       lud_ML           51.36        836413\n 238 │ GW_Liz_GBS_Liz5193             GW_Liz_GBS_Liz5193             ML        lud_chick       lud_ML           51.38        895586\n 239 │ GW_Liz_GBS_Liz5194             GW_Liz_GBS_Liz5194             ML        lud_chick       lud_ML           51.39        900099\n 240 │ GW_Liz_GBS_Liz5197             GW_Liz_GBS_Liz5197             ML        lud             lud_ML           51.41        808093\n 241 │ GW_Liz_GBS_Liz5199             GW_Liz_GBS_Liz5199             ML        lud_chick       lud_ML           51.42        953161\n 242 │ GW_Liz_GBS_Liz6002             GW_Liz_GBS_Liz6002             ML        lud             lud_ML           51.43        903717\n 243 │ GW_Liz_GBS_Liz6006             GW_Liz_GBS_Liz6006             ML        lud             lud_ML           51.44        872123\n 244 │ GW_Liz_GBS_Liz6008             GW_Liz_GBS_Liz6008             ML        lud             lud_ML           51.45        932032\n 245 │ GW_Liz_GBS_Liz6009             GW_Liz_GBS_Liz6009             ML        lud             lud_ML           51.46        946736\n 246 │ GW_Liz_GBS_Liz6010             GW_Liz_GBS_Liz6010             ML        lud             lud_ML           51.47        844804\n 247 │ GW_Liz_GBS_Liz6014             GW_Liz_GBS_Liz6014             ML        lud             lud_ML           51.49        828632\n 248 │ GW_Liz_GBS_Liz6055             GW_Liz_GBS_Liz6055             ML        lud             lud_ML           51.5         878978\n 249 │ GW_Liz_GBS_Liz6057             GW_Liz_GBS_Liz6057             ML        lud             lud_ML           51.51        850572\n 250 │ GW_Liz_GBS_Liz6060             GW_Liz_GBS_Liz6060             ML        lud             lud_ML           51.52        865228\n 251 │ GW_Liz_GBS_Liz6062             GW_Liz_GBS_Liz6062             ML        lud             lud_ML           51.53        834482\n 252 │ GW_Liz_GBS_Liz6063             GW_Liz_GBS_Liz6063             ML        lud             lud_ML           51.54        879233\n 253 │ GW_Liz_GBS_Liz6066             GW_Liz_GBS_Liz6066             ML        lud             lud_ML           51.55        876902\n 254 │ GW_Liz_GBS_Liz6072             GW_Liz_GBS_Liz6072             ML        lud             lud_ML           51.56        845266\n 255 │ GW_Liz_GBS_Liz6079             GW_Liz_GBS_Liz6079             ML        lud             lud_ML           51.57        820880\n 256 │ GW_Liz_GBS_Liz6204             GW_Liz_GBS_Liz6204             ML        lud_chick       lud_ML           51.59        840138\n 257 │ GW_Liz_GBS_Liz6461             GW_Liz_GBS_Liz6461             ML        lud             lud_ML           51.6         815684\n 258 │ GW_Liz_GBS_Liz6472             GW_Liz_GBS_Liz6472             ML        lud             lud_ML           51.61        907391\n 259 │ GW_Liz_GBS_Liz6478             GW_Liz_GBS_Liz6478             ML        lud             lud_ML           51.62        779125\n 260 │ GW_Liz_GBS_Liz6776             GW_Liz_GBS_Liz6776             ML        lud             lud_ML           51.64        962187\n 261 │ GW_Liz_GBS_Liz6794             GW_Liz_GBS_Liz6794             ML        lud             lud_ML           51.65        841253\n\n\n\n\nFilter SNPs with too many missing genotypes:\n\nmissing_genotypes_per_SNP = sum(geno_indFiltered_3 .== -1, dims=1)\nmissing_genotypes_percent_allowed_per_site = 5   # this is the percentage threshold\nthreshold_genotypes_missing = size(geno_indFiltered_3)[1] * missing_genotypes_percent_allowed_per_site/100\nselection = vec(missing_genotypes_per_SNP .&lt;= threshold_genotypes_missing)\ngeno_ind_SNP_filtered = geno_indFiltered_3[:, selection] \npos_SNP_filtered = pos_whole_genome[selection[Not(1)],:]  # the Not(1) is needed because first column in geno is arbitrary row number\nprintln(\"Started with \", size(geno_indFiltered_3, 2)-1, \" SNPs.\nAfter filtering SNPs for no more than \", missing_genotypes_percent_allowed_per_site, \"% missing genotypes, \", size(geno_ind_SNP_filtered, 2)-1, \" SNPs remain.\" )\n\nStarted with 2431709 SNPs.\nAfter filtering SNPs for no more than 5% missing genotypes, 1017581 SNPs remain.\n\n\n\n\n2nd round of filtering individuals\nI added this in August 2023, to improve accuracy of imputation-based PCA, because I noticed outliers tended to have more missing data. Now I only allow up to 10% missing SNPs per individual.\n\nSNPmissing_percent_allowed_per_ind_round2 = 10   # this is the percentage threshold\nthreshold_missing = (size(geno_ind_SNP_filtered, 2) - 1) * SNPmissing_percent_allowed_per_ind_round2/100\nnumMissings = sum(geno_ind_SNP_filtered .== -1, dims=2)\nind_with_metadata_indFiltered_3.numMissings .= numMissings\nselection = vec(numMissings .&lt;= threshold_missing) # the vec command converts to BitVector rather than BitMatrix--important below\ngeno_ind_SNP_ind_filtered = geno_ind_SNP_filtered[selection, :]\nprintln(\"Filtering out these individuals based on too many missing genotypes: \")\nfiltered_inds = ind_with_metadata_indFiltered_3.ind[selection.==false]\nprintln(DataFrame(filtered_inds = filtered_inds)) # did this to print all lines\nind_with_metadata_indFiltered = ind_with_metadata_indFiltered_3[selection, :]\nprintln(\"This leaves \", size(geno_ind_SNP_ind_filtered, 1), \" individuals and \", size(geno_ind_SNP_ind_filtered, 2)-1, \" loci, \nwith no individuals missing more than \", SNPmissing_percent_allowed_per_ind_round2, \"% of genotypes\nand no loci missing in more than \", missing_genotypes_percent_allowed_per_site, \"% of individuals.\")\n\nFiltering out these individuals based on too many missing genotypes: \n4×1 DataFrame\n Row │ filtered_inds            \n     │ String                   \n─────┼──────────────────────────\n   1 │ GW_Armando_plate1_TTGW74\n   2 │ GW_Armando_plate2_TTGW54\n   3 │ GW_Lane5_AA8\n   4 │ GW_Lane5_YK1\nThis leaves 257 individuals and 1017581 loci, \nwith no individuals missing more than 10% of genotypes\nand no loci missing in more than 5% of individuals.\n\n\nRemove the first column of the genotype matrix (which was an initial row number):\n\ngenosOnly_ind_SNP_ind_filtered = geno_ind_SNP_ind_filtered[:, Not(1)]\n\n257×1017581 Matrix{Int16}:\n 0  0  0  0  0  1  0   0  0  0  0  0  …  0  0  0  0  0  0  0  0  0  0  0  0\n 0  0  0  0  0  0  0   0  0  0  0  0     0  0  0  0  0  0  0  0  0  0  0  0\n 0  0  0  0  0  0  0   0  0  0  0  0     0  0  0  0  0  0  0  0  0  0  0  0\n 0  0  0  0  0  0  0   0  0  0  0  0     0  0  0  0  0  0  0  0  0  0  0  0\n 0  0  0  0  0  0  0   0  0  0  0  0     0  0  0  0  0  0  0  0  0  0  0  0\n 0  0  0  0  0  0  0   0  0  0  0  0  …  0  0  0  0  0  0  0  0  0  0  0  0\n 0  0  0  0  0  0  0   0  0  0  0  0     0  0  0  0  0  0  0  0  0  0  0  0\n 0  0  0  0  0  0  0   0  0  0  0  0     0  0  0  0  0  0  0  0  0  0  0  0\n 0  0  0  0  0  0  0   0  0  0  0  0     0  0  0  0  0  0  0  0  0  0  0  0\n 0  0  0  0  0  0  0   1  0  0  0  0     0  0  0  0  0  0  0  0  0  0  0  0\n 0  0  0  0  0  0  0   0  0  0  0  0  …  0  0  0  0  0  0  0  0  0  0  0  1\n 0  0  0  0  0  0  0   0  0  0  0  1     0  0  0  0  0  0  0  0  0  0  0  0\n 0  0  0  0  0  0  0   0  0  0  0  0     0  0  0  0  0  0  0  0  0  0  0  0\n ⋮              ⋮               ⋮     ⋱     ⋮              ⋮              ⋮\n 0  0  0  0  0  0  0   0  0  0  0  0  …  0  0  0  0  0  0  0  0  0  0  0  0\n 0  0  0  0  0  0  0   0  0  0  1  0     1  0  0  0  0  0  0  0  0  0  0  0\n 0  0  0  0  0  0  0   0  0  0  0  0     0  0  0  0  0  0  0  0  0  0  0  0\n 0  0  0  0  0  0  0   0  0  0  0  0     0  0  0  0  0  0  0  0  0  0  0  0\n 0  0  0  0  0  0  0   0  0  0  0  0     0  0  0  0  0  0  0  0  0  0  0  0\n 0  0  0  0  0  0  0  -1  0  0  0  0  …  0  0  0  0  0  0  0  0  0  0  0  0\n 0  0  0  0  0  0  0   0  0  0  0  0     0  0  0  0  0  0  0  0  0  0  0  0\n 0  0  0  0  0  0  0   0  0  0  0  0     0  0  0  0  0  0  0  0  0  0  0  0\n 0  0  0  0  0  0  0   0  0  0  0  0     0  0  0  0  0  0  0  0  0  0  0  0\n 0  0  0  0  0  0  0   0  0  0  0  0     0  0  0  0  0  0  0  0  0  0  0  0\n 0  0  0  0  0  0  0   0  0  0  0  0  …  0  0  0  0  0  0  0  0  0  0  0  0\n 0  0  0  0  0  0  0   0  0  0  0  0     0  0  0  0  0  0  0  0  0  0  0  0\n\n\n\n\nPolish a few individual names (for more readable graphs)\nThis uses the correctNames() function, defined further above.\n\nind_with_metadata_indFiltered.ind = correctNames(ind_with_metadata_indFiltered.ind)\n\nind_with_metadata_indFiltered.ID = correctNames(ind_with_metadata_indFiltered.ID)\n\n257-element Vector{String}:\n \"GW_Armando_plate1_AB1\"\n \"GW_Armando_plate1_JF07G02\"\n \"GW_Armando_plate1_JF07G03\"\n \"GW_Armando_plate1_JF07G04\"\n \"GW_Armando_plate1_JF08G02\"\n \"GW_Armando_plate1_JF09G01\"\n \"GW_Armando_plate1_JF09G02\"\n \"GW_Armando_plate1_JF10G03\"\n \"GW_Armando_plate1_JF11G01\"\n \"GW_Armando_plate1_JF12G01\"\n \"GW_Armando_plate1_JF12G02\"\n \"GW_Armando_plate1_JF12G04\"\n \"GW_Armando_plate1_JF13G01\"\n ⋮\n \"GW_Liz_GBS_Liz6060\"\n \"GW_Liz_GBS_Liz6062\"\n \"GW_Liz_GBS_Liz6063\"\n \"GW_Liz_GBS_Liz6066\"\n \"GW_Liz_GBS_Liz6072\"\n \"GW_Liz_GBS_Liz6079\"\n \"GW_Liz_GBS_Liz6204\"\n \"GW_Liz_GBS_Liz6461\"\n \"GW_Liz_GBS_Liz6472\"\n \"GW_Liz_GBS_Liz6478\"\n \"GW_Liz_GBS_Liz6776\"\n \"GW_Liz_GBS_Liz6794\"",
    "crumbs": [
      "Home",
      "Greenish Warbler Genomic Analysis"
    ]
  },
  {
    "objectID": "GreenishWarblerGenomics2025.html#calculate-distances-around-ring",
    "href": "GreenishWarblerGenomics2025.html#calculate-distances-around-ring",
    "title": "Greenish Warbler Genomic Analysis",
    "section": "Calculate distances around ring",
    "text": "Calculate distances around ring\nThe locations around the ring (assuming barrier in North) can be graphed against genomic PC1 (or other variables).\n\nLoad lat/long data\n\ncd(repoDirectory)\nlatlong_filepath = \"metadata/GW_locations_LatLong_2023.txt\"\nlatlongs = DataFrame(CSV.File(latlong_filepath))\nprint(latlongs)\n\n37×5 DataFrame\n Row │ Location_name               location_short  lat_N    long_E    subspecies    \n     │ String31                    String7         Float64  Float64   String15      \n─────┼──────────────────────────────────────────────────────────────────────────────\n   1 │ Yekaterinburg               YK               56.8     60.6     viridanus\n   2 │ Abakan                      AB               52.0     89.5     viridanus\n   3 │ Teletsk                     TL               51.7     87.6     viridanus\n   4 │ Verkh_Biryusa_vir           VB_vi            55.9     92.0     viridanus\n   5 │ Divnogorsk_vir              DV_vi            56.0     92.4     viridanus\n   6 │ Stolbi_vir                  ST_vi            55.9     92.6     viridanus\n   7 │ Turkey                      TU               41.0     42.0     nitidus\n   8 │ Ala_Archa                   AA               42.54    74.5     viridanus\n   9 │ Naran_Pakistan              NR               34.884   73.691   ludlowi\n  10 │ Shogran_Pakistan            SH               34.594   73.466   ludlowi\n  11 │ Overa_Kashmir               OV               33.991   75.243   ludlowi\n  12 │ Satharundhi_ChambaDistrict  SA               32.974   76.222   ludlowi\n  13 │ KL_Killar_HP                KL               33.106   76.409   ludlowi\n  14 │ Thalighar                   TH               32.828   76.45    ludlowi\n  15 │ Sural                       SR               33.134   76.455   ludlowi\n  16 │ PA_Tindi_HP                 PA               32.771   76.472   ludlowi\n  17 │ Sukhto                      SU               32.868   76.855   ludlowi\n  18 │ Nainaghar                   NG               32.728   76.8594  ludlowi\n  19 │ Mooling_and_Keylong         ML               32.508   76.981   ludlowi\n  20 │ Manali                      MN               32.237   77.13    ludlowi\n  21 │ Spiti                       SP               32.377   77.281   ludlowi\n  22 │ Langtang                    LN               28.25    85.5     trochiloides\n  23 │ Gongga                      GG               29.5    102.0     obscuratus\n  24 │ Emeishan                    EM               29.5    103.3     obscuratus\n  25 │ Xining                      XN               37.0    102.0     obscuratus\n  26 │ Beijing                     BJ               40.0    115.5     plumbeitarsus\n  27 │ Baikal                      BK               51.9    104.9     plumbeitarsus\n  28 │ Arshan                      AN               51.9    102.5     plumbeitarsus\n  29 │ Ilinka                      IL               51.1     95.5     plumbeitarsus\n  30 │ Tuva                        TA               51.3     92.0     plumbeitarsus\n  31 │ Uyukski                     UY               51.9     94.1     plumbeitarsus\n  32 │ Manskoe_Belogorie           MB               54.7     94.0     plumbeitarsus\n  33 │ Verkh_Biryusa               VB               55.9     92.0     plumbeitarsus\n  34 │ Divnogorsk                  DV               56.0     92.4     plumbeitarsus\n  35 │ Stolbi                      ST               55.9     92.6     plumbeitarsus\n  36 │ Predivinsk                  PR               57.1     93.5     plumbeitarsus\n  37 │ Solgonski                   SL               55.7     91.0     plumbeitarsus\n\n\n\n\nMake a quick plot to inspect latlong data:\n\nf = CairoMakie.Figure()\nax = Axis(f[1, 1],\n    title = \"Research locations\",\n    xlabel = \"longitude (E)\",\n    ylabel = \"latitude (N)\"\n)\nscatter!(latlongs.long_E, latlongs.lat_N)\ntext!(latlongs.long_E, latlongs.lat_N; text = latlongs.location_short)\nf\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\n\n\n\n\n\nremove “Green warbler” nitidus\nPhylloscopus [t.] nitidus is outside of the main ring, so remove these samples from this analysis:\n\nlatlongs2 = latlongs[Not(latlongs.subspecies .== \"nitidus\"), :];\nprint(latlongs2)\n\n36×5 DataFrame\n Row │ Location_name               location_short  lat_N    long_E    subspecies    \n     │ String31                    String7         Float64  Float64   String15      \n─────┼──────────────────────────────────────────────────────────────────────────────\n   1 │ Yekaterinburg               YK               56.8     60.6     viridanus\n   2 │ Abakan                      AB               52.0     89.5     viridanus\n   3 │ Teletsk                     TL               51.7     87.6     viridanus\n   4 │ Verkh_Biryusa_vir           VB_vi            55.9     92.0     viridanus\n   5 │ Divnogorsk_vir              DV_vi            56.0     92.4     viridanus\n   6 │ Stolbi_vir                  ST_vi            55.9     92.6     viridanus\n   7 │ Ala_Archa                   AA               42.54    74.5     viridanus\n   8 │ Naran_Pakistan              NR               34.884   73.691   ludlowi\n   9 │ Shogran_Pakistan            SH               34.594   73.466   ludlowi\n  10 │ Overa_Kashmir               OV               33.991   75.243   ludlowi\n  11 │ Satharundhi_ChambaDistrict  SA               32.974   76.222   ludlowi\n  12 │ KL_Killar_HP                KL               33.106   76.409   ludlowi\n  13 │ Thalighar                   TH               32.828   76.45    ludlowi\n  14 │ Sural                       SR               33.134   76.455   ludlowi\n  15 │ PA_Tindi_HP                 PA               32.771   76.472   ludlowi\n  16 │ Sukhto                      SU               32.868   76.855   ludlowi\n  17 │ Nainaghar                   NG               32.728   76.8594  ludlowi\n  18 │ Mooling_and_Keylong         ML               32.508   76.981   ludlowi\n  19 │ Manali                      MN               32.237   77.13    ludlowi\n  20 │ Spiti                       SP               32.377   77.281   ludlowi\n  21 │ Langtang                    LN               28.25    85.5     trochiloides\n  22 │ Gongga                      GG               29.5    102.0     obscuratus\n  23 │ Emeishan                    EM               29.5    103.3     obscuratus\n  24 │ Xining                      XN               37.0    102.0     obscuratus\n  25 │ Beijing                     BJ               40.0    115.5     plumbeitarsus\n  26 │ Baikal                      BK               51.9    104.9     plumbeitarsus\n  27 │ Arshan                      AN               51.9    102.5     plumbeitarsus\n  28 │ Ilinka                      IL               51.1     95.5     plumbeitarsus\n  29 │ Tuva                        TA               51.3     92.0     plumbeitarsus\n  30 │ Uyukski                     UY               51.9     94.1     plumbeitarsus\n  31 │ Manskoe_Belogorie           MB               54.7     94.0     plumbeitarsus\n  32 │ Verkh_Biryusa               VB               55.9     92.0     plumbeitarsus\n  33 │ Divnogorsk                  DV               56.0     92.4     plumbeitarsus\n  34 │ Stolbi                      ST               55.9     92.6     plumbeitarsus\n  35 │ Predivinsk                  PR               57.1     93.5     plumbeitarsus\n  36 │ Solgonski                   SL               55.7     91.0     plumbeitarsus\n\n\n\n\nMake a matrix of great circle distances\nThese are Haversine distances, assuming spherical Earth which is really close:\n\ngeoPoints = GeoLocation.(latlongs2.long_E, latlongs2.lat_N)\n# this next line is so neat--uses list comprehension to make a matrix of pairwise calculations\ndistances = [(HaversineDistance(geoPoints[i], geoPoints[j])/1000) for i in eachindex(geoPoints), j in eachindex(geoPoints)]\n\n36×36 Matrix{Float64}:\n    0.0   1929.03   1829.5    1920.28    …  1956.21    1976.01   1866.47\n 1929.03     0.0     134.698   463.414       478.643    622.753   422.996\n 1829.5    134.698     0.0     548.935       570.583    711.032   497.776\n 1920.28   463.414   548.935     0.0          37.404    162.101    66.3387\n 1941.17   483.376   572.19     27.2735       16.6941   139.661    93.5371\n 1956.21   478.643   570.583    37.404   …     0.0      144.411   102.442\n 1866.88  1539.57   1417.12   1943.75       1971.61    2101.68   1883.0\n 2629.03  2280.66   2174.21   2720.63       2744.17    2882.26   2664.81\n 2653.46  2318.81   2212.24   2758.56       2782.15    2920.16   2702.67\n 2768.57  2304.58   2204.89   2753.66       2775.3     2915.75   2700.28\n 2905.38  2370.69   2276.33   2825.06    …  2845.24    2987.08   2773.58\n 2897.44  2350.4    2256.5    2805.15       2825.21    2967.15   2753.85\n 2927.82  2377.48   2284.21   2832.75       2852.64    2994.71   2781.67\n    ⋮                                    ⋱                          ⋮\n 4317.27  2390.71   2499.26   2464.31       2434.21    2474.86   2502.82\n 2869.29  1053.52   1187.02    953.003   …   918.603    934.047  1003.57\n 2724.34   889.835  1023.03    817.872       785.302    818.533   863.881\n 2341.58   426.63    551.809   581.592       567.027    679.716   591.859\n 2117.8    189.217   307.752   511.497       513.021    652.226   493.694\n 2214.04   315.404   447.369   465.516       455.478    579.504   468.914\n 2082.09   423.338   540.944   183.922   …   160.175    268.68    220.448\n 1920.28   463.414   548.935     0.0          37.404    162.101    66.3387\n 1941.17   483.376   572.19     27.2735       16.6941   139.661    93.5371\n 1956.21   478.643   570.583    37.404         0.0      144.411   102.442\n 1976.01   622.753   711.032   162.101       144.411      0.0     218.833\n 1866.47   422.996   497.776    66.3387  …   102.442    218.833     0.0\n\n\n\n\nNow adjust distances to assume no gene flow through centre of ring.\n\n# get some key distances\nfunction getIndex(name; nameVector = latlongs2.Location_name)\n    findfirst(isequal(name), nameVector)\nend\n\nindex_AA = getIndex(\"Ala_Archa\")\nindex_NR = getIndex(\"Naran_Pakistan\")\nindex_LN = getIndex(\"Langtang\")\nindex_GG = getIndex(\"Gongga\")\nindex_XN = getIndex(\"Xining\")\nindex_BJ = getIndex(\"Beijing\")\nindex_last = nrow(latlongs2)\n\ndist_NR_to_LN = distances[index_NR, index_LN]\ndist_LN_to_GG = distances[index_LN, index_GG]\ndist_GG_to_BJ = distances[index_GG, index_BJ]\n\n# This next part will assume locations in the input file are arranged in order around ring:\ndistsAroundRing = Matrix{Float32}(undef, size(distances)[1], size(distances)[2])\n# accept all distances within viridanus:\n\n# function for accepting straight-line great circle dists as distances between sets of sites\nacceptDists = function(straightGreatCircleDists, start, finish, distsAroundRing)\n    distsAroundRing[start:finish, start:finish] = straightGreatCircleDists[start:finish, start:finish]\n    return(distsAroundRing)\nend\n\n# accept all distances within viridanus:\ndistsAroundRing = acceptDists(distances, 1, index_AA, distsAroundRing)\n\n# accept dist from AA to NR:\ndistsAroundRing = acceptDists(distances, index_AA, index_NR, distsAroundRing)\n\n# accept all distances from NR to LN:\ndistsAroundRing = acceptDists(distances, index_NR, index_LN, distsAroundRing)\n\n# accept dist from LN to GG:\ndistsAroundRing = acceptDists(distances, index_LN, index_GG, distsAroundRing)\n\n# accept dists between GG, EM, XN, BJ:\ndistsAroundRing = acceptDists(distances, index_GG, index_BJ, distsAroundRing)\n\n# accept all distances within plumbeitarsus:\ndistsAroundRing = acceptDists(distances, index_BJ, index_last, distsAroundRing)\n\n# function for adding up distances measured through certain sites:\naddDists = function(set1start, set1end, set2start, set2end, distsAroundRing)\n    firstDists = repeat(distsAroundRing[set1start:(set1end-1), set1end], 1, set2end-set2start+1)\n    secondDists = repeat(transpose(distsAroundRing[set1end, set2start:set2end]), set1end-set1start, 1)\n    totalDists = firstDists + secondDists\n    distsAroundRing[set1start:(set1end-1), set2start:set2end] = totalDists\n    distsAroundRing[set2start:set2end, set1start:(set1end-1)] = transpose(totalDists)\n    return(distsAroundRing)\nend\n\n# dists from viridanus to NR are sum of dists to AA plus AA to NR:\ndistsAroundRing = addDists(1, index_AA, index_NR, index_NR, distsAroundRing)\n\n# dists from \"northwest of PK\" to Himalayas are sum of ringdists to NR plus NR to locations up to LN:\ndistsAroundRing = addDists(1, index_NR, index_NR+1, index_LN, distsAroundRing)\n\n# dists from \"west / northwest of LN\" to GG are sum of dists to LN plus LN to EM:\ndistsAroundRing = addDists(1, index_LN, index_GG, index_GG, distsAroundRing)\n\n# dists from \"west / northwest of EM\" to China are sum of dists to GG plus GG to (EM, XN, BJ):\ndistsAroundRing = addDists(1, index_GG, index_GG, index_BJ, distsAroundRing)\n\n# dists from \"west of BJ\" to east Siberia are sum of dists to BJ plus BJ to other plumbeitarsus:\ndistsAroundRing = addDists(1, index_BJ, index_BJ+1, index_last, distsAroundRing);\n\n\n\nDo Principal Coordinates Analysis on the distances around the ring\nThis produces a single location axis around ring, going from west Siberia south, then east, then north to east Siberia.\n\nPCO_around_ring = fit(MDS, distsAroundRing; distances=true, maxoutdim=1)\n# add this as a column to the data frame:\nlatlongs2.LocationAroundRing = vec(-predict(PCO_around_ring))\n# another way: \n# latlongs2[:, :LocationAroundRing] = vec(-predict(PCO_around_ring))\nlatlongs2[:, [:location_short, :LocationAroundRing]]\nprintln(latlongs2[:, [:location_short, :LocationAroundRing]])\n\n36×2 DataFrame\n Row │ location_short  LocationAroundRing \n     │ String7         Float32            \n─────┼────────────────────────────────────\n   1 │ YK                       -4799.38\n   2 │ AB                       -4548.43\n   3 │ TL                       -4428.78\n   4 │ VB_vi                    -4953.25\n   5 │ DV_vi                    -4978.83\n   6 │ ST_vi                    -4980.5\n   7 │ AA                       -3027.02\n   8 │ NR                       -2171.62\n   9 │ SH                       -2166.63\n  10 │ OV                       -1998.24\n  11 │ SA                       -1861.95\n  12 │ KL                       -1854.67\n  13 │ TH                       -1835.41\n  14 │ SR                       -1852.63\n  15 │ PA                       -1830.4\n  16 │ SU                       -1805.38\n  17 │ NG                       -1796.96\n  18 │ ML                       -1774.64\n  19 │ MN                       -1747.34\n  20 │ SP                       -1743.06\n  21 │ LN                        -830.651\n  22 │ GG                         783.671\n  23 │ EM                         890.416\n  24 │ XN                        1481.8\n  25 │ BJ                        2480.12\n  26 │ BK                        4027.02\n  27 │ AN                        4134.32\n  28 │ IL                        4451.78\n  29 │ TA                        4673.03\n  30 │ UY                        4581.05\n  31 │ MB                        4762.52\n  32 │ VB                        4943.39\n  33 │ DV                        4929.77\n  34 │ ST                        4913.15\n  35 │ PR                        4951.66\n  36 │ SL                        4982.05\n\n\nAdd these ring locations to the metadata table:\n\nind_with_metadata_indFiltered.ring_km .= NaN  # pre-allocate the column\nfor i in axes(latlongs2, 1)\n    match_indices = findall(ind_with_metadata_indFiltered.location .== latlongs2.location_short[i])\n    ind_with_metadata_indFiltered.ring_km[match_indices] .= latlongs2.LocationAroundRing[i];\nend\n\n\n\nMake a table of locations and groups of individuals included after filtering\n\ngdf = groupby(ind_with_metadata_indFiltered, [:location, :Fst_group])\nsample_origin_summary = combine(gdf, nrow)\nprintln(sample_origin_summary)\n# to save as comma-delimited text:\n# CSV.write(\"GW2023_sample_origin_summary.txt\", sample_origin_summary; delim='\\t')\n\n37×3 DataFrame\n Row │ location  Fst_group    nrow  \n     │ String7   String15     Int64 \n─────┼──────────────────────────────\n   1 │ AB        vir              2\n   2 │ ST        plumb           35\n   3 │ ST        plumb_vir        1\n   4 │ ST_vi     vir              6\n   5 │ DV        plumb            5\n   6 │ DV_vi     vir              2\n   7 │ MB        plumb            4\n   8 │ VB        plumb            5\n   9 │ PR        plumb            5\n  10 │ BJ        plumb_BJ         3\n  11 │ TL        vir             11\n  12 │ MN        troch_west      10\n  13 │ SU        lud_central      6\n  14 │ TH        lud_central      7\n  15 │ SR        lud_central     18\n  16 │ NG        lud_central      9\n  17 │ SP        troch_west      10\n  18 │ SA        lud_Sath         8\n  19 │ UY        plumb            6\n  20 │ VB_vi     vir              2\n  21 │ LN        troch_LN        14\n  22 │ AA        vir_S            8\n  23 │ AN        plumb            2\n  24 │ BK        plumb            2\n  25 │ XN        obs              4\n  26 │ EM        troch_EM         1\n  27 │ IL        plumb            2\n  28 │ OV        lud_KS           2\n  29 │ NR        lud_PK           2\n  30 │ KL        lud_central      3\n  31 │ ML        lud_ML          44\n  32 │ PA        lud_central      2\n  33 │ SH        lud_PK           4\n  34 │ SL        plumb            2\n  35 │ TA        plumb            1\n  36 │ TU        nit              2\n  37 │ YK        vir              7\n\n\n\n\n\nSave the filtered dataset and other info for other Quarto pages\n\ncd(dataDirectory)\nfilename = string(baseName, tagName, \"ind_SNP_ind_filtered.jld2\")\njldsave(filename; genosOnly_ind_SNP_ind_filtered,\n                    ind_with_metadata_indFiltered, \n                    pos_SNP_filtered,\n                    repoDirectory,\n                    dataDirectory,\n                    scaffold_info,\n                    scaffold_lengths,\n                    baseName,\n                    filenameTextMiddle,\n                    missingGenotypeThreshold,\n                    filenameTextEnd,\n                    tagName,\n                    chromosomes_to_process,\n                    metadataFile)\nprintln(\"Saved the filtered data.\")\n\nSaved the filtered data.\n\n\n\nThe above saves the important data for other Quarto pages, which will load data as below:\n\n\nLoad the filtered dataset\n(This block is not active here)\nfilename = string(baseName, tagName, \"ind_SNP_ind_filtered.jld2\")\n# load info into a dictionary:\nd = load(filename)\ngenosOnly_ind_SNP_ind_filtered = d[\"genosOnly_ind_SNP_ind_filtered\"]\nind_with_metadata_indFiltered = d[\"ind_with_metadata_indFiltered\"]\npos_SNP_filtered = d[\"pos_SNP_filtered\"]\nrepoDirectory = d[\"repoDirectory\"]\ndataDirectory = d[\"dataDirectory\"]\nscaffold_info = d[\"scaffold_info\"]\nscaffold_lengths = d[\"scaffold_lengths\"]\nbaseName = d[\"baseName\"]\nfilenameTextMiddle = d[\"filenameTextMiddle\"]\nmissingGenotypeThreshold = d[\"missingGenotypeThreshold\"]\nfilenameTextEnd = d[\"filenameTextEnd\"]\ntagName = d[\"tagName\"]\nchromosomes_to_process = d[\"chromosomes_to_process\"]\nmetadataFile = [\"metadataFile\"]",
    "crumbs": [
      "Home",
      "Greenish Warbler Genomic Analysis"
    ]
  },
  {
    "objectID": "GreenishWarblerGenomics2025.html#prepare-data-for-genotype-by-individual-plots-and-pca",
    "href": "GreenishWarblerGenomics2025.html#prepare-data-for-genotype-by-individual-plots-and-pca",
    "title": "Greenish Warbler Genomic Analysis",
    "section": "Prepare data for Genotype-by-individual plots and PCA",
    "text": "Prepare data for Genotype-by-individual plots and PCA\nFor missing genotypes, change our code of -1 to missing:\n\ngenosOnly_with_missing = Matrix{Union{Missing, Int16}}(genosOnly_ind_SNP_ind_filtered)\ngenosOnly_with_missing[genosOnly_with_missing .== -1] .= missing;",
    "crumbs": [
      "Home",
      "Greenish Warbler Genomic Analysis"
    ]
  },
  {
    "objectID": "GreenishWarblerGenomics2025.html#genotype-by-individual-plots",
    "href": "GreenishWarblerGenomics2025.html#genotype-by-individual-plots",
    "title": "Greenish Warbler Genomic Analysis",
    "section": "Genotype-by-individual plots",
    "text": "Genotype-by-individual plots\nNow, show individual genotypes for subsets of the dataset. Can choose individuals and genomic regions to plot, along with an Fst cutoff (only show SNPs with greater Fst than the cutoff).\n\ngroups = [\"vir\",\"plumb\"]\nplotGroups = [\"vir\",\"plumb_vir\",\"plumb\"]\nplotGroupColors = [\"blue\",\"purple\",\"red\"]\nnumIndsToPlot = [100,100,100] # maximum number of individuals to plot from each group\ngroup1 = \"vir\"   # these groups will determine the color used in the graph\ngroup2 = \"plumb\"\ngroupsToCompare = \"vir_plumb\"\nFst_cutoff =  0.8\nmissingFractionAllowed = 0.2  # only show SNPs with less than this fraction of missing data among individuals\n\n0.2\n\n\n\nCalculate allele freqs and sample sizes\nThis uses groups indicated column Fst_group in the metadata file.\n\nfreqs, sampleSizes = getFreqsAndSampleSizes(genosOnly_with_missing, ind_with_metadata_indFiltered.Fst_group, groups)\nprintln(\"Calculated population allele frequencies and sample sizes\")\n\nCalculated population allele frequencies and sample sizes\n\n\n\n\nCalculate Fst\n\nFst, FstNumerator, FstDenominator, pairwiseNamesFst = getFst(freqs, sampleSizes, groups; among=true)  # set among to FALSE if no among Fst wanted (some things won't work without it) \nprintln(\"Calculated Fst values\")\n\nCalculated Fst values\n\n\n\n\nLimit the individuals to include in plot\n\n# Option to filter out individuals with lots of missing genotypes\nif false  # set to true if using this option\n    numMissings_threshold = 50_000  # optional of number of missing, to exclude individual from plot\n    selection = ind_with_metadata_indFiltered.numMissings .&lt; numMissings_threshold\n    genosOnly_with_missing_selected = view(genosOnly_with_missing, selection, :)\n    ind_with_metadata_indFiltered_selected = view(ind_with_metadata_indFiltered, selection, :)\n\n    println(\"Filtering out these individuals based on too many missing genotypes: \")\n    filtered_inds = ind_with_metadata_indFiltered.ind[selection .== false]\n    println(DataFrame(filtered_inds = filtered_inds)) # did this to print all lines\nelse\n    genosOnly_with_missing_selected = genosOnly_with_missing\n    ind_with_metadata_indFiltered_selected = ind_with_metadata_indFiltered\nend\n# Limit each group to specified numbers\ngenosOnly_included, ind_with_metadata_included = limitIndsToPlot(plotGroups, numIndsToPlot, genosOnly_with_missing_selected, ind_with_metadata_indFiltered_selected);\n\n\n\nChoose the scaffold and region to show\n\nchr = \"gw23\"\nregionInfo = chooseChrRegion(pos_SNP_filtered, chr; positionMin=1, positionMax=scaffold_lengths[chr]) # this gets the maximum position for the chromosome\n\n(\"gw23\", 1, 8435933, \"chr gw23 1 to 8435933\")\n\n\n\n\nNow actually make the plot\n\nplotInfo = plotGenotypeByIndividualWithFst(groupsToCompare, Fst_cutoff, missingFractionAllowed,\n    regionInfo, pos_SNP_filtered, Fst, pairwiseNamesFst, \n    genosOnly_included, ind_with_metadata_included, freqs, plotGroups, plotGroupColors; plotTitle = \"\");\n# plotInfo contains a tuple with: (f, plottedGenotype, locations, plottedMetadata)\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\n\n\n\n\n\nChoose another chromosome, and plot similarly to above\n\nchr = \"gw26\"\nregionInfo = chooseChrRegion(pos_SNP_filtered, chr; positionMin=1, positionMax=scaffold_lengths[chr]) # this gets the maximum position for the chromosome\nplotInfo = plotGenotypeByIndividualWithFst(groupsToCompare, Fst_cutoff, missingFractionAllowed,\n    regionInfo, pos_SNP_filtered, Fst, pairwiseNamesFst,\n    genosOnly_included, ind_with_metadata_included, freqs, plotGroups, plotGroupColors; plotTitle = \"\");\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\n\n\n\n\n\nMake a GBI plot to illustrate variation along west side of ring\n\ngroups = [\"vir\",\"troch_LN\"] # for purpose of calculating pairwise Fst and Fst_group (to determine SNPs)\nplotGroups = [\"vir\",\"vir_S\",\"nit\", \"lud_PK\", \"lud_KS\", \"lud_central\", \"lud_Sath\", \"lud_ML\",\"troch_west\",\"troch_LN\"]\nplotGroupColors = [\"blue\",\"turquoise1\",\"grey\",\"seagreen4\",\"seagreen3\",\"seagreen2\",\"olivedrab3\",\"olivedrab2\",\"olivedrab1\",\"yellow\"]\nnumIndsToPlot = [10, 5, 2, 3, 5, 15, 3, 5, 10, 10] # maximum number of individuals to plot from each group\ngroup1 = \"vir\"   # these groups will determine the color used in the graph\ngroup2 = \"troch_LN\"\ngroupsToCompare = \"vir_troch_LN\" # \"Fst_among\"\nFst_cutoff = 0.9\nmissingFractionAllowed = 0.2  # only show SNPs with less than this fraction of missing data among individuals\n\n# Calculate allele freqs and sample sizes (use column Fst_group)\nfreqs, sampleSizes = getFreqsAndSampleSizes(genosOnly_with_missing, ind_with_metadata_indFiltered.Fst_group, groups)\nprintln(\"Calculated population allele frequencies and sample sizes\")\n\n# calculate Fst \nFst, FstNumerator, FstDenominator, pairwiseNamesFst = getFst(freqs, sampleSizes, groups; among=true)  # set among to FALSE if no among Fst wanted (some things won't work without it) \nprintln(\"Calculated Fst values\")\n\n# Option to filter out individuals with lots of missing genotypes\nif false  # set to true if using this option\n    numMissings_threshold = 50_000  # optional of number of missing, to exclude individual from plot\n    selection = ind_with_metadata_indFiltered.numMissings .&lt; numMissings_threshold\n    genosOnly_with_missing_selected = view(genosOnly_with_missing, selection, :)\n    ind_with_metadata_indFiltered_selected = view(ind_with_metadata_indFiltered, selection, :)\n\n    println(\"Filtering out these individuals based on too many missing genotypes: \")\n    filtered_inds = ind_with_metadata_indFiltered.ind[selection .== false]\n    println(DataFrame(filtered_inds = filtered_inds)) # did this to print all lines\nelse\n    genosOnly_with_missing_selected = genosOnly_with_missing\n    ind_with_metadata_indFiltered_selected = ind_with_metadata_indFiltered\nend\n# Limit each group to specified numbers\ngenosOnly_included, ind_with_metadata_included = limitIndsToPlot(plotGroups, numIndsToPlot, genosOnly_with_missing_selected, ind_with_metadata_indFiltered_selected);\n\n# choose the scaffold and region to show\nchr = \"gw26\"\nregionInfo = chooseChrRegion(pos_SNP_filtered, chr; positionMin=1, positionMax=scaffold_lengths[chr]) \n\n#### Now actually make the plot\nplotInfo = plotGenotypeByIndividualWithFst(groupsToCompare, Fst_cutoff, missingFractionAllowed,\n    regionInfo, pos_SNP_filtered, Fst, pairwiseNamesFst, \n    genosOnly_included, ind_with_metadata_included, freqs, plotGroups, plotGroupColors; plotTitle = \"\");\n\nCalculated population allele frequencies and sample sizes\nCalculated Fst values\n\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\n\n\n\n\n\nShow another chromosome along west side of ring:\n\n# choose the scaffold and region to show\nchr = \"gw28\"\nregionInfo = chooseChrRegion(pos_SNP_filtered, chr; positionMin=1, positionMax=scaffold_lengths[chr]) \n\n#### Now actually make the plot\nplotInfo = plotGenotypeByIndividualWithFst(groupsToCompare, Fst_cutoff, missingFractionAllowed,\n    regionInfo, pos_SNP_filtered, Fst, pairwiseNamesFst, \n    genosOnly_included, ind_with_metadata_included, freqs, plotGroups, plotGroupColors; plotTitle = \"\");\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\n\n\n\n\n\nMake a GBI plot to illustrate variation along east side of ring\n\ngroups = [\"troch_LN\",\"obs\",\"plumb\"] # for purpose of calculating pairwise Fst and Fst_group (to determine SNPs)\nplotGroups = [\"troch_LN\",\"troch_EM\",\"obs\",\"plumb_BJ\",\"plumb\"]\nplotGroupColors = [\"yellow\",\"gold\",\"orange\",\"pink\",\"red\"]\nnumIndsToPlot = [15, 15, 15, 15, 17] # maximum number of individuals to plot from each group\ngroup1 = \"troch_LN\"   # these groups will determine the color used in the graph\ngroup2 = \"plumb\"\ngroupsToCompare = \"troch_LN_plumb\" #\"troch_LN_plumb\" #\"Fst_among\"\nFst_cutoff = 0.9\nmissingFractionAllowed = 0.2  # only show SNPs with less than this fraction of missing data among individuals\n\n# Calculate allele freqs and sample sizes (use column Fst_group)\nfreqs, sampleSizes = getFreqsAndSampleSizes(genosOnly_with_missing, ind_with_metadata_indFiltered.Fst_group, groups)\nprintln(\"Calculated population allele frequencies and sample sizes\")\n\n# calculate Fst \nFst, FstNumerator, FstDenominator, pairwiseNamesFst = getFst(freqs, sampleSizes, groups; among=true)  # set among to FALSE if no among Fst wanted (some things won't work without it) \nprintln(\"Calculated Fst values\")\n\n# Option to filter out individuals with lots of missing genotypes\nif false  # set to true if using this option\n    numMissings_threshold = 50_000  # optional of number of missing, to exclude individual from plot\n    selection = ind_with_metadata_indFiltered.numMissings .&lt; numMissings_threshold\n    genosOnly_with_missing_selected = view(genosOnly_with_missing, selection, :)\n    ind_with_metadata_indFiltered_selected = view(ind_with_metadata_indFiltered, selection, :)\n\n    println(\"Filtering out these individuals based on too many missing genotypes: \")\n    filtered_inds = ind_with_metadata_indFiltered.ind[selection .== false]\n    println(DataFrame(filtered_inds = filtered_inds)) # did this to print all lines\nelse\n    genosOnly_with_missing_selected = genosOnly_with_missing\n    ind_with_metadata_indFiltered_selected = ind_with_metadata_indFiltered\nend\n# Limit each group to specified numbers\ngenosOnly_included, ind_with_metadata_included = limitIndsToPlot(plotGroups, numIndsToPlot, genosOnly_with_missing_selected, ind_with_metadata_indFiltered_selected);\n\n# choose the scaffold and region to show\nchr = \"gw28\"\nregionInfo = chooseChrRegion(pos_SNP_filtered, chr; positionMin=1, positionMax=scaffold_lengths[chr]) # this gets the maximum position for the chromosome\n\n# need to remove two plumbeitarsus individuals that have introgression from viridanus, as that would otherwise be misleading in this figure since viridanus are not shown\nselection = Not(ind_with_metadata_included.ind .∈ Ref([\"GW_Armando_plate1_JF09G01\", \"GW_Armando_plate1_JF24G02\"]))\nind_with_metadata_included = ind_with_metadata_included[selection,:]\ngenosOnly_included = genosOnly_included[selection,:]\n\n#### Now actually make the plot\nplotInfo = plotGenotypeByIndividualWithFst(groupsToCompare, Fst_cutoff, missingFractionAllowed,\n    regionInfo, pos_SNP_filtered, Fst, pairwiseNamesFst, \n    genosOnly_included, ind_with_metadata_included, freqs, plotGroups, plotGroupColors; plotTitle = \"\");\n\nCalculated population allele frequencies and sample sizes\nCalculated Fst values\n\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238",
    "crumbs": [
      "Home",
      "Greenish Warbler Genomic Analysis"
    ]
  },
  {
    "objectID": "GreenishWarblerGenomics2025.html#make-gbi-plots-showing-all-individuals-in-the-study",
    "href": "GreenishWarblerGenomics2025.html#make-gbi-plots-showing-all-individuals-in-the-study",
    "title": "Greenish Warbler Genomic Analysis",
    "section": "Make GBI plots showing all individuals in the study",
    "text": "Make GBI plots showing all individuals in the study\n\ngroups_to_plot_all = [\"vir\",\"vir_S\",\"nit\", \"lud_PK\", \"lud_KS\", \"lud_central\", \"lud_Sath\", \"lud_ML\",\"troch_west\",\"troch_LN\",\"troch_EM\",\"obs\",\"plumb_BJ\",\"plumb\",\"plumb_vir\"]\ngroup_colors_all = [\"blue\",\"turquoise1\",\"grey\",\"seagreen4\",\"seagreen3\",\"seagreen2\",\"olivedrab3\",\"olivedrab2\",\"olivedrab1\",\"yellow\",\"gold\",\"orange\",\"pink\",\"red\",\"purple\"];\n\nThis will use Fst among multiple groups to determine SNPs to plot. For chr 28:\n\ngroups = [\"vir\",\"lud_PK\",\"troch_LN\",\"obs\",\"plumb\"] # for purpose of calculating pairwise Fst and Fst_group (to determine SNPs)   \nplotGroups = groups_to_plot_all \nplotGroupColors = group_colors_all\ngroup1 = \"vir\"   # these groups will determine the color used in the graph\ngroup2 = \"plumb\"\ngroupsToCompare = [\"vir_plumb\", \"vir_troch_LN\", \"troch_LN_plumb\"]     # \"Fst_among\" #\"vir_plumb\" \nFst_cutoff = 0.8\nmissingFractionAllowed = 0.2  # only show SNPs with less than this fraction of missing data among individuals\n\n# Calculate allele freqs and sample sizes (use column Fst_group)\nfreqs, sampleSizes = getFreqsAndSampleSizes(genosOnly_with_missing, ind_with_metadata_indFiltered.Fst_group, groups)\nprintln(\"Calculated population allele frequencies and sample sizes\")\n\nFst, FstNumerator, FstDenominator, pairwiseNamesFst = getFst(freqs, sampleSizes, groups; among=true)  # set among to FALSE if no among Fst wanted (some things won't work without it) \nprintln(\"Calculated Fst values\")\n\nchr = \"gw28\"\nregionInfo = chooseChrRegion(pos_SNP_filtered, chr; positionMin=1, positionMax=scaffold_lengths[chr]) # this gets the maximum position for the chromosome\n\nplotInfo = plotGenotypeByIndividualWithFst(groupsToCompare, Fst_cutoff, \n    missingFractionAllowed, regionInfo,\n    pos_SNP_filtered, Fst, pairwiseNamesFst, \n    genosOnly_with_missing, ind_with_metadata_indFiltered, freqs, \n    plotGroups, plotGroupColors;\n    indFontSize=4, figureSize=(1200,1600),\n    plotTitle = \"\");\n\nCalculated population allele frequencies and sample sizes\nCalculated Fst values\n\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238",
    "crumbs": [
      "Home",
      "Greenish Warbler Genomic Analysis"
    ]
  },
  {
    "objectID": "GreenishWarblerGenomics2025.html#make-list-of-scaffolds-to-plot-according-to-above",
    "href": "GreenishWarblerGenomics2025.html#make-list-of-scaffolds-to-plot-according-to-above",
    "title": "Greenish Warbler Genomic Analysis",
    "section": "Make list of scaffolds to plot according to above:",
    "text": "Make list of scaffolds to plot according to above:\n\nscaffolds_to_plot = \"gw\" .* string.(vcat(28:-1:17, 15:-1:1))\npush!(scaffolds_to_plot, \"gw1A\", \"gw4A\")  # add two other scaffolds\n\n29-element Vector{String}:\n \"gw28\"\n \"gw27\"\n \"gw26\"\n \"gw25\"\n \"gw24\"\n \"gw23\"\n \"gw22\"\n \"gw21\"\n \"gw20\"\n \"gw19\"\n \"gw18\"\n \"gw17\"\n \"gw15\"\n ⋮\n \"gw10\"\n \"gw9\"\n \"gw8\"\n \"gw7\"\n \"gw6\"\n \"gw5\"\n \"gw4\"\n \"gw3\"\n \"gw2\"\n \"gw1\"\n \"gw1A\"\n \"gw4A\"\n\n\nLoop through each scaffold and produce GBI plot. (Making inactive because already saved figs and takes long.)\nfor i in 1:length(scaffolds_to_plot)\n    chr = scaffolds_to_plot[i]\n    regionInfo = chooseChrRegion(pos_SNP_filtered, chr; positionMin=1, positionMax=scaffold_lengths[chr]) # this gets the maximum position for the chromosome\n    plotInfo = plotGenotypeByIndividualWithFst(groupsToCompare, Fst_cutoff, \n        missingFractionAllowed, regionInfo,\n        pos_SNP_filtered, Fst, pairwiseNamesFst, \n        genosOnly_with_missing, ind_with_metadata_indFiltered, freqs, \n        plotGroups, plotGroupColors;\n        indFontSize=4, figureSize=(1200,1600), plotTitle = \"\");\n    println(\"Completed the figure for \", chr, \".\")\n    if false  # set to true to save plot\n        filename = string(\"Figure_\", chr, \"_Fst3groups_GBI_allInds_from_Julia.png\")\n        save(filename, plotInfo[1], px_per_unit = 2.0)\n        println(\"Saved \", filename)\n    end \nend",
    "crumbs": [
      "Home",
      "Greenish Warbler Genomic Analysis"
    ]
  },
  {
    "objectID": "GreenishWarblerGenomics2025.html#estimate-relationships-of-individuals-using-pca",
    "href": "GreenishWarblerGenomics2025.html#estimate-relationships-of-individuals-using-pca",
    "title": "Greenish Warbler Genomic Analysis",
    "section": "Estimate relationships of individuals using PCA",
    "text": "Estimate relationships of individuals using PCA\nOur goal is to produce plots showing individuals in genotype space, using Principal Components Analysis.\n\nImpute and save genotypes for each scaffold\nPCA requires imputation of missing genotypes. I did imputation for each scaffold above a certain size threshold. These are listed in chromosomes_to_process .\nImputation can take several minutes per scaffold, so I ran this imputation step separately from this Quarto notebook (otherwise render would take long) and saved the genotype data for each scaffold for loading in the next step. There are two alternative algorithms that I’ve used for imputing: SVD (Singular Value Decomposition) and KNN (K Nearest Neighbours), both of which are implemented in the Impute.jl package. After much testing and thought, I decided to use KNN imputation (with K=1) on each chromosome, and then combine chromosomes for the genome-wide PCA. For PCAs of small genomic regions, I use SVD.\n\nThe code for SVD imputing is below (not actually used here):\nfor i in eachindex(chromosomes_to_process)\n    chrom = chromosomes_to_process[i]\n    regionText = string(\"chr\", chrom)\n    loci_selection = (pos_SNP_filtered.chrom .== chrom)\n    pos_SNP_filtered_region = pos_SNP_filtered[loci_selection,:]\n    genosOnly_region_for_imputing = Matrix{Union{Missing, Float32}}(genosOnly_with_missing[:,loci_selection])\n    @time imputed_genos = Impute.svd(genosOnly_region_for_imputing)\n    filename = string(baseName, tagName, regionText, \".SVDimputedMissing.jld2\")\n    jldsave(filename; imputed_genos, ind_with_metadata_indFiltered, pos_SNP_filtered_region)\n    println(string(\"Chromosome \", chrom, \": Saved real and imputed genotypes for \", size(pos_SNP_filtered_region, 1),\" SNPs and \", size(genosOnly_region_for_imputing, 1),\" filtered individuals.\"))\nend\n\n\n\nImputation using KNN\nTroyanskaya et al. (2001) recommend imputation using K-nearest neighbors approach as being better than SVD, both of which are better than other methods for DNA genotyping. They also recommend using Euclidian distance. So I use KNN with Euclidian distance for imputation along whole chromosomes. I am going with setting dims to :rows, as that seems to run much faster and produces PCAs that make a lot of sense. I’ve already run this next code cell, which does the imputing and saves the imputed data matrix for each scaffold. This actually runs quite quickly–at most a couple minutes per scaffold. :)\nfor i in eachindex(chromosomes_to_process)\n    chrom = chromosomes_to_process[i]\n    regionText = string(\"chr\", chrom)\n    loci_selection = (pos_SNP_filtered.chrom .== chrom)\n    pos_SNP_filtered_region = pos_SNP_filtered[loci_selection,:]\n    genosOnly_region_for_imputing = Matrix{Union{Missing, Float32}}(genosOnly_with_missing[:,loci_selection])\n    @time imputed_genos = Impute.knn(genosOnly_region_for_imputing; dims = :rows) # much faster with the \"dims = :rows\" there\n    filename = string(baseName, tagName, regionText, \".KNNimputedMissing.jld2\")\n    jldsave(filename; imputed_genos, ind_with_metadata_indFiltered, pos_SNP_filtered_region)\n    println(string(\"Chromosome \", chrom, \": Saved real and imputed genotypes for \", size(pos_SNP_filtered_region, 1),\" SNPs and \", size(genosOnly_region_for_imputing, 1),\" filtered individuals.\"))\nend\n\n\nNow do the KNN PCAs:\nNow we can cycle through a set of chromosomes and plot a PCA for each. We need to first specify some groups to include in the plot, and their colors:\n\ngroups_to_plot_PCA = [\"vir\",\"vir_S\",\"nit\", \"lud_PK\", \"lud_KS\", \"lud_central\", \"lud_Sath\", \"lud_ML\",\"troch_west\",\"troch_LN\",\"troch_EM\",\"obs\",\"plumb_BJ\",\"plumb\",\"plumb_vir\"]\ngroup_colors_PCA = [\"blue\",\"turquoise1\",\"grey\",\"seagreen4\",\"seagreen3\",\"seagreen2\",\"olivedrab3\",\"olivedrab2\",\"olivedrab1\",\"yellow\",\"gold\",\"orange\",\"pink\",\"red\",\"purple\"];\n\nNow we can actually do the PCA and make the plot for each scaffold. (Making this inactive for now, because it makes a lot of plots.)\nfor i in eachindex(chromosomes_to_process)\n    scaffold = chromosomes_to_process[i]\n    regionText = string(\"chr\", scaffold)\n    filename = string(baseName, tagName, regionText, \".SVDimputedMissing.jld2\")\n    imputed_genos = load(filename, \"imputed_genos\")\n    ind_with_metadata_indFiltered = load(filename, \"ind_with_metadata_indFiltered\")\n    pos_SNP_filtered_region = load(filename, \"pos_SNP_filtered_region\")\n    println(string(\"Loaded \",filename))\n    println(string(regionText, \": \", size(imputed_genos,2), \" SNPs from \", size(imputed_genos,1), \" individuals\"))\n    flipPC1 = true\n    flipPC2 = true\n    PCAmodel = plotPCA(imputed_genos, ind_with_metadata_indFiltered, \n            groups_to_plot_PCA, group_colors_PCA; \n            sampleSet = \"greenish warblers\", regionText=regionText,\n            flip1 = flipPC1, flip2 = flipPC2,\n            lineOpacity = 0.7, fillOpacity = 0.6,\n            symbolSize = 14, showTitle = true,\n            xLabelText = string(\"Chromosome \", scaffold,\" PC1\"), yLabelText = string(\"Chromosome \", scaffold,\" PC2\"),\n            showPlot = false)\n    # add position of reference genome\n    refGenomePCAposition = predict(PCAmodel.model, zeros(size(imputed_genos, 2)))\n    flipPC1 && (refGenomePCAposition[1] *= -1)  # this flips PC1 if flipPC1 = true\n    flipPC2 && (refGenomePCAposition[2] *= -1)  # same for PC2\n    CairoMakie.scatter!(refGenomePCAposition[1], refGenomePCAposition[2], marker = :diamond, color=\"black\", markersize=15, strokewidth=0.5)\n    try\n        display(PCAmodel.PCAfig)\n    catch\n        println(\"NOTICE: Figure for \", regionText, \" could not be shown due to an unknown error.\")\n    end\nend",
    "crumbs": [
      "Home",
      "Greenish Warbler Genomic Analysis"
    ]
  },
  {
    "objectID": "GreenishWarblerGenomics2025.html#genotype-by-individual-plots-some-examples",
    "href": "GreenishWarblerGenomics2025.html#genotype-by-individual-plots-some-examples",
    "title": "Greenish Warbler Genomic Analysis",
    "section": "Genotype-by-individual plots (some examples)",
    "text": "Genotype-by-individual plots (some examples)\n\nGBI plot showing just west individuals:\n\ngroups = [\"vir\",\"lud_PK\",\"troch_LN\"] # for purpose of calculating pairwise Fst and Fst_group (to determine SNPs)   \nplotGroups = [\"vir\", \"vir_misID\", \"vir_S\", \"nit\", \"lud_PK\", \"lud_KS\", \"lud_central\", \"lud_Sath\", \"lud_ML\", \"troch_west\", \"troch_LN\"] # west GW individuals\nplotGroupColors = [\"blue\", \"blue\", \"turquoise1\", \"grey\", \"seagreen4\", \"seagreen3\", \"seagreen2\", \"olivedrab3\", \"olivedrab2\", \"olivedrab1\", \"yellow\"]\ngroup1 = \"vir\"   # these groups will determine the color used in the graph\ngroup2 = \"troch_LN\"\ngroupsToCompare = \"Fst_among\" #\"vir_plumb\" \nFst_cutoff = 0.8\nmissingFractionAllowed = 0.2  # only show SNPs with less than this fraction of missing data among individuals\n\n# Calculate allele freqs and sample sizes (use column Fst_group)\nfreqs, sampleSizes = getFreqsAndSampleSizes(genosOnly_with_missing, ind_with_metadata_indFiltered.Fst_group, groups)\nprintln(\"Calculated population allele frequencies and sample sizes\")\n\nFst, FstNumerator, FstDenominator, pairwiseNamesFst = getFst(freqs, sampleSizes, groups; among=true)  # set among to FALSE if no among Fst wanted (some things won't work without it) \nprintln(\"Calculated Fst values\")\n\nscaffolds_to_plot = [\"gw1\"]\n\nfor i in 1:length(scaffolds_to_plot)\n    chr = scaffolds_to_plot[i]\n    regionInfo = chooseChrRegion(pos_SNP_filtered, chr; positionMin=1, positionMax=scaffold_lengths[chr]) # this gets the maximum position for the chromosome\n    plotInfo = plotGenotypeByIndividualWithFst(groupsToCompare, Fst_cutoff, \n        missingFractionAllowed, regionInfo,\n        pos_SNP_filtered, Fst, pairwiseNamesFst, \n        genosOnly_with_missing, ind_with_metadata_indFiltered, freqs, \n        plotGroups, plotGroupColors;\n        indFontSize=4, figureSize=(1200,1600))\n    println(\"Completed the figure for \", chr, \".\")\nend\n\nCalculated population allele frequencies and sample sizes\nCalculated Fst values\n\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\n\n\n\nCompleted the figure for gw1.\n\n\n\n\nMake GBI plots showing just east individuals:\n\ngroups = [\"troch_LN\",\"obs\",\"plumb\"] # for purpose of calculating pairwise Fst and Fst_group (to determine SNPs)   \nplotGroups = [\"troch_LN\", \"troch_EM\", \"obs\", \"plumb_BJ\", \"plumb\"] # east GW individuals\nplotGroupColors = [\"yellow\", \"gold\", \"orange\", \"pink\", \"red\"]\ngroup1 = \"troch_LN\"   # these groups will determine the color used in the graph\ngroup2 = \"plumb\"\ngroupsToCompare = \"Fst_among\" #\"vir_plumb\" \nFst_cutoff = 0.8\nmissingFractionAllowed = 0.2  # only show SNPs with less than this fraction of missing data among individuals\n\n# Calculate allele freqs and sample sizes (use column Fst_group)\nfreqs, sampleSizes = getFreqsAndSampleSizes(genosOnly_with_missing, ind_with_metadata_indFiltered.Fst_group, groups)\nprintln(\"Calculated population allele frequencies and sample sizes\")\n\nFst, FstNumerator, FstDenominator, pairwiseNamesFst = getFst(freqs, sampleSizes, groups; among=true)  # set among to FALSE if no among Fst wanted (some things won't work without it) \nprintln(\"Calculated Fst values\")\n\nfor i in 1:length(scaffolds_to_plot)\n    chr = scaffolds_to_plot[i]\n    regionInfo = chooseChrRegion(pos_SNP_filtered, chr; positionMin=1, positionMax=scaffold_lengths[chr]) # this gets the maximum position for the chromosome\n    plotInfo = plotGenotypeByIndividualWithFst(groupsToCompare, Fst_cutoff, \n        missingFractionAllowed, regionInfo,\n        pos_SNP_filtered, Fst, pairwiseNamesFst, \n        genosOnly_with_missing, ind_with_metadata_indFiltered, freqs, \n        plotGroups, plotGroupColors;\n        indFontSize=4, figureSize=(1200,1600))\n    println(\"Completed the figure for \", chr, \".\")\nend\n# plotInfo contains a tuple with: (f, plottedGenotype, locations, plottedMetadata)\n\nCalculated population allele frequencies and sample sizes\nCalculated Fst values\n\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n└ @ Makie ~/.julia/packages/Makie/pFPBw/src/scenes.jl:238\n\n\n\n\n\nCompleted the figure for gw1.",
    "crumbs": [
      "Home",
      "Greenish Warbler Genomic Analysis"
    ]
  }
]